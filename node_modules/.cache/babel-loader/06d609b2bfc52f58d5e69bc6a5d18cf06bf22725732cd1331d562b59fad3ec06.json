{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Api from \"../helpers/api\";\nexport default {\n  data() {\n    return {\n      api: new Api(),\n      user: null,\n      selectedRamification: null,\n      userAffectations: [],\n      userEntites: [],\n      userRamifications: [],\n      userPermissions: [],\n      typeRamifications: [],\n      widTypeRamification: [],\n      fields: []\n    };\n  },\n  methods: {\n    formattedNumber(number) {\n      if (number != null) return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n      return 0;\n    },\n    updateUserInfo() {\n      this.user = this.$store.state.currentUser;\n      this.userRamifications = [];\n      this.api.get(\"/users/\" + this.user.id).then(response => {\n        localStorage.setItem('currentUser', JSON.stringify(response));\n        this.$store.dispatch(\"logIn\", response);\n        this.user = this.$store.state.currentUser;\n      });\n    },\n    getUserAffaction() {\n      this.userAffectations = this.user.affectations;\n    },\n    getUserRamification() {\n      this.userRamifications = [];\n      if (this.user.type.nom === 'Super Admin') {\n        this.api.get(\"/ramifications\").then(response => {\n          response.data.forEach(item => {\n            this.userRamifications.push(item);\n          });\n        });\n      } else {\n        this.userRamifications = [];\n        this.fields.push({\n          colonne: 'tram.enabled',\n          operator: 'eq',\n          value: 1,\n          connector: \"and\"\n        });\n        this.user.affectations.forEach(item => {\n          if (item.enabled === true) {\n            if (item.ramification !== null) {\n              this.fields.push({\n                colonne: 'tram.ordre',\n                operator: 'gte',\n                value: item.ramification.type.ordre,\n                connector: \"and\"\n              });\n            }\n          }\n        });\n        this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1).then(response => {\n          this.typeRamifications = response.data;\n          this.typeRamifications.forEach(item => {\n            this.widTypeRamification.push({\n              id: item.id,\n              type: item.nom,\n              value: null\n            });\n          });\n        });\n        this.userAffectations.forEach((affectation, index) => {\n          if (affectation.ramification !== null) {\n            if (affectation.ramification.enabled === true) {\n              if (index === 0) this.selectedRamification = affectation.ramification.id;\n              this.api.get(\"/ramifications/\" + affectation.ramification.id + \"/childs\").then(response => {\n                response.forEach(item => {\n                  this.userRamifications.push(item);\n                });\n                localStorage.setItem(\"userRamifications\", this.userRamifications);\n                this.$store.dispatch(\"setUserRamifications\", response);\n              });\n            }\n          }\n        });\n      }\n    }\n  },\n  created() {\n    this.userRamifications = [];\n    this.updateUserInfo();\n    this.getUserAffaction();\n    this.getUserRamification();\n  }\n};","map":{"version":3,"names":["Api","data","api","user","selectedRamification","userAffectations","userEntites","userRamifications","userPermissions","typeRamifications","widTypeRamification","fields","methods","formattedNumber","number","toString","replace","updateUserInfo","$store","state","currentUser","get","id","then","response","localStorage","setItem","JSON","stringify","dispatch","getUserAffaction","affectations","getUserRamification","type","nom","forEach","item","push","colonne","operator","value","connector","enabled","ramification","ordre","listing","affectation","index","created"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/mixins/userMixins.js"],"sourcesContent":["import Api from \"../helpers/api\";\r\n\r\nexport default {\r\n    data(){\r\n        return{\r\n            api: new Api(),\r\n            user: null,\r\n            selectedRamification: null,\r\n            userAffectations: [],\r\n            userEntites: [],\r\n            userRamifications: [],\r\n            userPermissions: [],\r\n            typeRamifications: [],\r\n            widTypeRamification: [],\r\n            fields: []\r\n        }\r\n\r\n    },\r\n    methods:{\r\n        formattedNumber(number) {\r\n            if (number != null)\r\n                return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n            return 0;\r\n        },\r\n        updateUserInfo(){\r\n            this.user = this.$store.state.currentUser;\r\n            this.userRamifications = []\r\n\r\n            this.api.get(\"/users/\"+this.user.id)\r\n                .then(response => {\r\n                    localStorage.setItem('currentUser', JSON.stringify(response));\r\n                    this.$store.dispatch(\"logIn\", response);\r\n                    this.user = this.$store.state.currentUser;\r\n\r\n                })\r\n\r\n        },\r\n        getUserAffaction(){\r\n            this.userAffectations =  this.user.affectations\r\n        },\r\n        getUserRamification(){\r\n            this.userRamifications = []\r\n            if (this.user.type.nom === 'Super Admin'){\r\n                this.api.get(\"/ramifications\")\r\n                    .then(response => {\r\n                        response.data.forEach(item => {\r\n                            this.userRamifications.push(item);\r\n                        })\r\n\r\n                    })\r\n            }else{\r\n                this.userRamifications = []\r\n                this.fields.push({colonne: 'tram.enabled', operator: 'eq', value: 1, connector: \"and\"})\r\n\r\n                this.user.affectations.forEach(item => {\r\n                    if (item.enabled === true){\r\n                        if (item.ramification !== null)\r\n                        {\r\n                            this.fields.push({colonne: 'tram.ordre', operator: 'gte', value: item.ramification.type.ordre, connector: \"and\"})\r\n                        }\r\n                    }\r\n\r\n\r\n                })\r\n\r\n                this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1 )\r\n                    .then(response => {\r\n                        this.typeRamifications = response.data;\r\n                        this.typeRamifications.forEach(item => {\r\n                            this.widTypeRamification.push({id:item.id, type: item.nom, value: null })\r\n\r\n                        })\r\n                    })\r\n                this.userAffectations.forEach((affectation, index) => {\r\n                    if (affectation.ramification !== null){\r\n                        if (affectation.ramification.enabled === true){\r\n                            if (index === 0)\r\n                                this.selectedRamification = affectation.ramification.id\r\n                            this.api.get(\"/ramifications/\"+affectation.ramification.id+\"/childs\")\r\n                                .then(response => {\r\n                                    response.forEach(item => {\r\n                                        this.userRamifications.push(item);\r\n                                    })\r\n                                    localStorage.setItem(\"userRamifications\", this.userRamifications)\r\n                                    this.$store.dispatch(\"setUserRamifications\", response);\r\n\r\n                                })\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n\r\n    },\r\n    created() {\r\n        this.userRamifications = []\r\n\r\n\r\n        this.updateUserInfo();\r\n\r\n        this.getUserAffaction();\r\n        this.getUserRamification();\r\n\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}