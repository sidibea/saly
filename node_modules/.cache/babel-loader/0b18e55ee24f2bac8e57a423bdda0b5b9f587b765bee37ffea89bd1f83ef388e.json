{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nimport routes from './routes';\nimport appConfig from \"../../app.config\";\nimport store from '@/state/store';\nimport Api from \"../helpers/api\";\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n  // Use the HTML5 history API (i.e. normal-looking routes)\n  // instead of routes with hashes (e.g. example.com/#/about).\n  // This may require some server configuration in production:\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n  mode: 'history',\n  // Simulate native-like scroll behavior when navigating to a new\n  // route and using back/forward buttons.\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n  }\n});\n\n// API based Authentication\n// Before each route evaluates...\nrouter.beforeEach(async (routeTo, routeFrom, next) => {\n  //console.log(store.state.currentUser)\n  const authRequired = routeTo.matched.some(route => route.meta.authRequired);\n  // const api = new Api();\n\n  if (!authRequired) return next();else {\n    if (store.state.currentUser === null) {\n      next({\n        name: 'login',\n        query: {\n          redirectFrom: routeTo.fullPath\n        }\n      });\n    } else {\n      let api = new Api();\n      api.post(\"/users/\" + store.state.currentUser.id).then(response => {\n        if (response.enabled === true) {\n          localStorage.setItem('currentUser', JSON.stringify(response));\n          store.dispatch(\"logIn\", response);\n          next();\n        } else {\n          next({\n            name: 'login',\n            query: {\n              redirectFrom: routeTo.fullPath\n            }\n          });\n        }\n      });\n    }\n  }\n});\nrouter.beforeEach((routeTo, routeFrom, next) => {\n  const publicPages = ['/login', '/register', '/forgot-password'];\n  const authpage = !publicPages.includes(routeTo.path);\n  const loggeduser = localStorage.getItem('currentUser');\n  if (authpage && !loggeduser) {\n    return next('/login');\n  }\n  next();\n});\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\n  // Create a `beforeResolve` hook, which fires whenever\n  // `beforeRouteEnter` and `beforeRouteUpdate` would. This\n  // allows us to ensure data is fetched even when params change,\n  // but the resolved route does not. We put it in `meta` to\n  // indicate that it's a hook we created, rather than part of\n  // Vue Router (yet?).\n  try {\n    // For each matched route...\n    for (const route of routeTo.matched) {\n      await new Promise((resolve, reject) => {\n        // If a `beforeResolve` hook is defined, call it with\n        // the same arguments as the `beforeEnter` hook.\n        if (route.meta && route.meta.beforeResolve) {\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\n            // If the user chose to redirect...\n            if (args.length) {\n              // If redirecting to the same route we're coming from...\n              // Complete the redirect.\n              next(...args);\n              reject(new Error('Redirected'));\n            } else {\n              resolve();\n            }\n          });\n        } else {\n          // Otherwise, continue resolving the route.\n          resolve();\n        }\n      });\n    }\n    // If a `beforeResolve` hook chose to redirect, just return.\n  } catch (error) {\n    return;\n  }\n  document.title = routeTo.meta.title + ' | ' + appConfig.title;\n  // If we reach this point, continue resolving the route.\n  next();\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","routes","appConfig","store","Api","router","history","mode","scrollBehavior","to","from","savedPosition","top","left","beforeEach","routeTo","routeFrom","next","authRequired","matched","some","route","meta","state","currentUser","name","query","redirectFrom","fullPath","api","post","id","then","response","enabled","localStorage","setItem","JSON","stringify","dispatch","publicPages","authpage","includes","path","loggeduser","getItem","beforeResolve","Promise","resolve","reject","args","length","Error","error","document","title"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\nimport routes from './routes';\nimport appConfig from \"../../app.config\";\nimport store from '@/state/store';\nimport Api from \"../helpers/api\";\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n\n  // Use the HTML5 history API (i.e. normal-looking routes)\n  // instead of routes with hashes (e.g. example.com/#/about).\n  // This may require some server configuration in production:\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n  mode: 'history',\n  // Simulate native-like scroll behavior when navigating to a new\n  // route and using back/forward buttons.\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return { top: 0, left: 0 };\n    }\n  },\n});\n\n// API based Authentication\n// Before each route evaluates...\nrouter.beforeEach(async (routeTo, routeFrom, next) => {\n  //console.log(store.state.currentUser)\n  const authRequired = routeTo.matched.some((route) => route.meta.authRequired);\n  // const api = new Api();\n\n  if (!authRequired) return next();\n  else{\n    if (store.state.currentUser === null ){\n      next({ name: 'login', query: { redirectFrom: routeTo.fullPath } });\n    }else {\n      let api = new Api();\n      api.post(\"/users/\"+store.state.currentUser.id)\n          .then(response => {\n            if (response.enabled === true){\n              localStorage.setItem('currentUser', JSON.stringify(response));\n              store.dispatch(\"logIn\", response);\n              next();\n\n            }\n            else{\n              next({ name: 'login', query: { redirectFrom: routeTo.fullPath } });\n\n            }\n          })\n\n\n    }\n  }\n\n});\n\nrouter.beforeEach((routeTo, routeFrom, next) => {\n  const publicPages = ['/login', '/register', '/forgot-password'];\n  const authpage = !publicPages.includes(routeTo.path);\n  const loggeduser = localStorage.getItem('currentUser');\n\n  if (authpage && !loggeduser) {\n    return next('/login');\n  }\n\n  next();\n});\n\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\n  // Create a `beforeResolve` hook, which fires whenever\n  // `beforeRouteEnter` and `beforeRouteUpdate` would. This\n  // allows us to ensure data is fetched even when params change,\n  // but the resolved route does not. We put it in `meta` to\n  // indicate that it's a hook we created, rather than part of\n  // Vue Router (yet?).\n  try {\n    // For each matched route...\n    for (const route of routeTo.matched) {\n      await new Promise((resolve, reject) => {\n        // If a `beforeResolve` hook is defined, call it with\n        // the same arguments as the `beforeEnter` hook.\n        if (route.meta && route.meta.beforeResolve) {\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\n            // If the user chose to redirect...\n            if (args.length) {\n              // If redirecting to the same route we're coming from...\n              // Complete the redirect.\n              next(...args);\n              reject(new Error('Redirected'));\n            } else {\n              resolve();\n            }\n          });\n        } else {\n          // Otherwise, continue resolving the route.\n          resolve();\n        }\n      });\n    }\n    // If a `beforeResolve` hook chose to redirect, just return.\n  } catch (error) {\n    return;\n  }\n  document.title = routeTo.meta.title + ' | ' + appConfig.title;\n  // If we reach this point, continue resolving the route.\n  next();\n});\n\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}