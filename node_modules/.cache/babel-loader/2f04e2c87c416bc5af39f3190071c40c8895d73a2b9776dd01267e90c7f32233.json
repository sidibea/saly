{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Api from \"../helpers/api\";\nexport default {\n  data() {\n    return {\n      api: new Api(),\n      user: null,\n      userAffectations: [],\n      userEntites: [],\n      userRamifications: [],\n      userPermissions: [],\n      typeRamifications: [],\n      widTypeRamification: [],\n      fields: []\n    };\n  },\n  methods: {\n    updateUserInfo() {\n      this.user = this.$store.state.currentUser;\n      this.api.get(\"/users/\" + this.user.id).then(response => {\n        localStorage.setItem('currentUser', JSON.stringify(response));\n        this.$store.dispatch(\"logIn\", response);\n        this.user = this.$store.state.currentUser;\n      });\n    },\n    getUserAffaction() {\n      this.userAffectations = this.user.affectations;\n    },\n    getUserRamification() {\n      if (this.user.type.nom === 'Super Admin') {\n        this.api.get(\"/ramifications\").then(response => {\n          response.data.forEach(item => {\n            this.userRamifications.push(item);\n          });\n        });\n      } else {\n        this.userAffectations.forEach(affectation => {\n          if (affectation.ramification !== null) {\n            this.api.get(\"/ramifications/\" + affectation.ramification.id + \"/childs\").then(response => {\n              response.data.forEach(item => {\n                this.userRamifications.push(item);\n              });\n            });\n          }\n        });\n      }\n    }\n  },\n  created() {\n    this.updateUserInfo();\n    if (this.user.type.nom === 'Super Admin') {\n      this.fields.push({\n        colonne: 'tram.enabled',\n        operator: 'eq',\n        value: 1,\n        connector: \"and\"\n      });\n      this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1).then(response => {\n        this.typeRamifications = response.data;\n        this.typeRamifications.forEach(item => {\n          this.widTypeRamification.push({\n            id: item.id,\n            type: item.nom,\n            value: null\n          });\n        });\n      });\n    } else {\n      this.getUserAffaction();\n      this.getUserRamification();\n      this.fields.push({\n        colonne: 'tram.enabled',\n        operator: 'eq',\n        value: 1,\n        connector: \"and\"\n      });\n      this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1).then(response => {\n        this.typeRamifications = response.data;\n        this.typeRamifications.forEach(item => {\n          this.widTypeRamification.push({\n            id: item.id,\n            type: item.nom,\n            value: null\n          });\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["Api","data","api","user","userAffectations","userEntites","userRamifications","userPermissions","typeRamifications","widTypeRamification","fields","methods","updateUserInfo","$store","state","currentUser","get","id","then","response","localStorage","setItem","JSON","stringify","dispatch","getUserAffaction","affectations","getUserRamification","type","nom","forEach","item","push","affectation","ramification","created","colonne","operator","value","connector","listing"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/mixins/userMixins.js"],"sourcesContent":["import Api from \"../helpers/api\";\r\n\r\nexport default {\r\n    data(){\r\n        return{\r\n            api: new Api(),\r\n            user: null,\r\n            userAffectations: [],\r\n            userEntites: [],\r\n            userRamifications: [],\r\n            userPermissions: [],\r\n            typeRamifications: [],\r\n            widTypeRamification: [],\r\n            fields: []\r\n        }\r\n\r\n    },\r\n    methods:{\r\n        updateUserInfo(){\r\n            this.user = this.$store.state.currentUser;\r\n\r\n            this.api.get(\"/users/\"+this.user.id)\r\n                .then(response => {\r\n                    localStorage.setItem('currentUser', JSON.stringify(response));\r\n                    this.$store.dispatch(\"logIn\", response);\r\n                    this.user = this.$store.state.currentUser;\r\n\r\n                })\r\n\r\n        },\r\n        getUserAffaction(){\r\n            this.userAffectations =  this.user.affectations\r\n        },\r\n        getUserRamification(){\r\n            if (this.user.type.nom === 'Super Admin'){\r\n                this.api.get(\"/ramifications\")\r\n                    .then(response => {\r\n                        response.data.forEach(item => {\r\n                            this.userRamifications.push(item);\r\n                        })\r\n\r\n                    })\r\n            }else{\r\n                this.userAffectations.forEach(affectation => {\r\n                    if (affectation.ramification !== null){\r\n                        this.api.get(\"/ramifications/\"+affectation.ramification.id+\"/childs\")\r\n                            .then(response => {\r\n                                response.data.forEach(item => {\r\n                                    this.userRamifications.push(item);\r\n                                })\r\n\r\n                            })\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n\r\n    },\r\n    created() {\r\n\r\n        this.updateUserInfo();\r\n        if (this.user.type.nom === 'Super Admin'){\r\n            this.fields.push({colonne: 'tram.enabled', operator: 'eq', value: 1, connector: \"and\"})\r\n\r\n            this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1 )\r\n                .then(response => {\r\n                    this.typeRamifications = response.data;\r\n                    this.typeRamifications.forEach(item => {\r\n                        this.widTypeRamification.push({id:item.id, type: item.nom, value: null })\r\n\r\n                    })\r\n                })\r\n        }else{\r\n            this.getUserAffaction();\r\n            this.getUserRamification();\r\n            this.fields.push({colonne: 'tram.enabled', operator: 'eq', value: 1, connector: \"and\"})\r\n\r\n            this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1 )\r\n                .then(response => {\r\n                    this.typeRamifications = response.data;\r\n                    this.typeRamifications.forEach(item => {\r\n                        this.widTypeRamification.push({id:item.id, type: item.nom, value: null })\r\n\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}