{"ast":null,"code":"import { getFirebaseBackend } from '../../authUtils.js';\nexport const state = {\n  currentUser: sessionStorage.getItem('authUser')\n};\nexport const mutations = {\n  SET_CURRENT_USER(state, newValue) {\n    state.currentUser = newValue;\n    saveState('auth.currentUser', newValue);\n  }\n};\nexport const getters = {\n  // Whether the user is currently logged in.\n  loggedIn(state) {\n    return !!state.currentUser;\n  }\n};\nexport const actions = {\n  // This is automatically run in `src/state/store.js` when the app\n  // starts, along with any other actions named `init` in other modules.\n  // eslint-disable-next-line no-unused-vars\n  init({\n    state,\n    dispatch\n  }) {\n    dispatch('validate');\n  },\n  // Logs in the current user.\n  logIn({\n    commit,\n    dispatch,\n    getters\n  }, {\n    email,\n    password\n  } = {}) {\n    if (getters.loggedIn) return dispatch('validate');\n    return getFirebaseBackend().loginUser(email, password).then(response => {\n      const user = response;\n      commit('SET_CURRENT_USER', user);\n      return user;\n    });\n  },\n  // Logs out the current user.\n  logOut({\n    commit\n  }) {\n    // eslint-disable-next-line no-unused-vars\n    commit('SET_CURRENT_USER', null);\n    return new Promise((resolve, reject) => {\n      // eslint-disable-next-line no-unused-vars\n      getFirebaseBackend().logout().then(response => {\n        resolve(true);\n      }).catch(error => {\n        reject(this._handleError(error));\n      });\n    });\n  },\n  // register the user\n  register({\n    commit,\n    dispatch,\n    getters\n  }, {\n    username,\n    email,\n    password\n  } = {}) {\n    if (getters.loggedIn) return dispatch('validate');\n    return getFirebaseBackend().registerUser(username, email, password).then(response => {\n      const user = response;\n      commit('SET_CURRENT_USER', user);\n      return user;\n    });\n  },\n  // register the user\n  // eslint-disable-next-line no-unused-vars\n  resetPassword({\n    commit,\n    dispatch,\n    getters\n  }, {\n    email\n  } = {}) {\n    if (getters.loggedIn) return dispatch('validate');\n    return getFirebaseBackend().forgetPassword(email).then(response => {\n      const message = response.data;\n      return message;\n    });\n  },\n  // Validates the current user's token and refreshes it\n  // with new data from the API.\n  // eslint-disable-next-line no-unused-vars\n  validate({\n    commit,\n    state\n  }) {\n    if (!state.currentUser) return Promise.resolve(null);\n    const user = getFirebaseBackend().getAuthenticatedUser();\n    commit('SET_CURRENT_USER', user);\n    return user;\n  }\n};\n\n// ===\n// Private helpers\n// ===\n\nfunction saveState(key, state) {\n  window.sessionStorage.setItem(key, JSON.stringify(state));\n}","map":{"version":3,"names":["getFirebaseBackend","state","currentUser","sessionStorage","getItem","mutations","SET_CURRENT_USER","newValue","saveState","getters","loggedIn","actions","init","dispatch","logIn","commit","email","password","loginUser","then","response","user","logOut","Promise","resolve","reject","logout","catch","error","_handleError","register","username","registerUser","resetPassword","forgetPassword","message","data","validate","getAuthenticatedUser","key","window","setItem","JSON","stringify"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/state/modules/auth.js"],"sourcesContent":["import { getFirebaseBackend } from '../../authUtils.js'\r\n\r\nexport const state = {\r\n    currentUser: sessionStorage.getItem('authUser'),\r\n}\r\n\r\nexport const mutations = {\r\n    SET_CURRENT_USER(state, newValue) {\r\n        state.currentUser = newValue\r\n        saveState('auth.currentUser', newValue)\r\n    }\r\n}\r\n\r\nexport const getters = {\r\n    // Whether the user is currently logged in.\r\n    loggedIn(state) {\r\n        return !!state.currentUser\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    // This is automatically run in `src/state/store.js` when the app\r\n    // starts, along with any other actions named `init` in other modules.\r\n    // eslint-disable-next-line no-unused-vars\r\n    init({ state, dispatch }) {\r\n        dispatch('validate')\r\n    },\r\n\r\n    // Logs in the current user.\r\n    logIn({ commit, dispatch, getters }, { email, password } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().loginUser(email, password).then((response) => {\r\n            const user = response\r\n            commit('SET_CURRENT_USER', user)\r\n            return user\r\n        });\r\n    },\r\n\r\n    // Logs out the current user.\r\n    logOut({ commit }) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        commit('SET_CURRENT_USER', null)\r\n        return new Promise((resolve, reject) => {\r\n            // eslint-disable-next-line no-unused-vars\r\n            getFirebaseBackend().logout().then((response) => {\r\n                resolve(true);\r\n            }).catch((error) => {\r\n                reject(this._handleError(error));\r\n            })\r\n        });\r\n    },\r\n\r\n    // register the user\r\n    register({ commit, dispatch, getters }, { username, email, password } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().registerUser(username, email, password).then((response) => {\r\n            const user = response\r\n            commit('SET_CURRENT_USER', user)\r\n            return user\r\n        });\r\n    },\r\n\r\n    // register the user\r\n    // eslint-disable-next-line no-unused-vars\r\n    resetPassword({ commit, dispatch, getters }, { email } = {}) {\r\n        if (getters.loggedIn) return dispatch('validate')\r\n\r\n        return getFirebaseBackend().forgetPassword(email).then((response) => {\r\n            const message = response.data\r\n            return message\r\n        });\r\n    },\r\n\r\n    // Validates the current user's token and refreshes it\r\n    // with new data from the API.\r\n    // eslint-disable-next-line no-unused-vars\r\n    validate({ commit, state }) {\r\n        if (!state.currentUser) return Promise.resolve(null)\r\n        const user = getFirebaseBackend().getAuthenticatedUser();\r\n        commit('SET_CURRENT_USER', user)\r\n        return user;\r\n    },\r\n}\r\n\r\n// ===\r\n// Private helpers\r\n// ===\r\n\r\nfunction saveState(key, state) {\r\n    window.sessionStorage.setItem(key, JSON.stringify(state))\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}