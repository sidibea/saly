{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Select2 from 'vue3-select2-component';\nimport Api from \"../helpers/api\";\nexport default {\n  components: {\n    Select2\n  },\n  data() {\n    return {\n      user: null,\n      api: new Api(),\n      fields: [],\n      typeRamifications: [],\n      widTypeRamification: [],\n      listRamifications: []\n    };\n  },\n  created() {\n    this.user = this.$store.state.currentUser;\n    let userEntite = [];\n    let userRamification = [];\n    //userRamification = this.user.affectations.filter(item => item.ramification != null && item.enabled === true);\n\n    if (this.user.type.nom !== 'Super Admin') {\n      if (this.user.affectations.length > 0) {\n        this.user.affectations.forEach(item => {\n          if (item.enabled === true) {\n            if (item.entite !== null) {\n              userEntite = this.user.affectations.filter(item => item.entite != null && item.enabled === true);\n              this.fields.push({\n                colonne: 'ent.id',\n                operator: 'in',\n                value: userEntite.map(item => item.id),\n                connector: \"and\"\n              });\n            }\n            if (item.ramification !== null) {\n              userRamification = this.user.affectations.filter(item => item.ramification != null && item.enabled === true);\n              this.fields.push({\n                colonne: 'ent.id',\n                operator: 'in',\n                value: userRamification.map(item => item.entite.id),\n                connector: \"and\"\n              });\n            }\n          }\n        });\n      }\n    }\n    this.fields.push({\n      colonne: 'tram.enabled',\n      operator: 'eq',\n      value: 1,\n      connector: \"and\"\n    });\n    //  this.fields.push({colonne: 'ram.id', operator: 'in', value: userRamification.map(item=> item.id), connector: \"and\"})\n\n    this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1).then(response => {\n      this.typeRamifications = response.data;\n      this.typeRamifications.forEach(item => {\n        this.widTypeRamification.push({\n          type: item.nom,\n          value: null\n        });\n      });\n    });\n    this.api.listing(\"/ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1).then(response => {\n      this.listRamifications = response.data;\n    });\n  }\n};","map":{"version":3,"names":["Select2","Api","components","data","user","api","fields","typeRamifications","widTypeRamification","listRamifications","created","$store","state","currentUser","userEntite","userRamification","type","nom","affectations","length","forEach","item","enabled","entite","filter","push","colonne","operator","value","map","id","connector","ramification","listing","then","response"],"sources":["C:\\Users\\Sekou A Sidibe\\Documents\\NTA TECH\\projets\\klispay_backoffice\\v3\\src\\components\\FiltreRamification.vue"],"sourcesContent":["<template>\r\n  <b-row>\r\n      <b-col v-for=\"(type, index) in widTypeRamification\" md=\"6\" xl=\"6\" :key=\"type\">\r\n          <label for=\"nom\" class=\"form-label\">{{type.type}}</label>\r\n          <Select2 v-model=\"widTypeRamification[index].value\" required :options=\"listRamifications.filter(item => item.type.id === widTypeRamification.id).map(ram => ({id: ram.id, text: ram.nom}))\"     style=\"padding: 10\"/>\r\n\r\n\r\n      </b-col>\r\n  </b-row>\r\n\r\n</template>\r\n<script>\r\nimport Select2 from 'vue3-select2-component';\r\nimport Api from \"../helpers/api\";\r\n\r\nexport default {\r\n    components:{\r\n        Select2\r\n    },\r\n    data(){\r\n      return{\r\n          user: null,\r\n          api: new Api(),\r\n          fields: [],\r\n          typeRamifications: [],\r\n          widTypeRamification: [],\r\n          listRamifications: [],\r\n      }\r\n    },\r\n\r\n    created() {\r\n        this.user = this.$store.state.currentUser;\r\n        let userEntite = [];\r\n        let userRamification = [];\r\n        //userRamification = this.user.affectations.filter(item => item.ramification != null && item.enabled === true);\r\n\r\n        if (this.user.type.nom !== 'Super Admin'){\r\n           if (this.user.affectations.length > 0){\r\n              this.user.affectations.forEach(item => {\r\n                  if(item.enabled === true){\r\n                      if (item.entite !== null){\r\n                          userEntite = this.user.affectations.filter(item => item.entite != null && item.enabled === true);\r\n                          this.fields.push({colonne: 'ent.id', operator: 'in', value: userEntite.map(item=> item.id), connector: \"and\"})\r\n                      }\r\n                      if (item.ramification !== null){\r\n                          userRamification = this.user.affectations.filter(item => item.ramification != null && item.enabled === true);\r\n                          this.fields.push({colonne: 'ent.id', operator: 'in', value: userRamification.map(item=> item.entite.id), connector: \"and\"})\r\n\r\n                      }\r\n                  }\r\n              })\r\n           }\r\n        }\r\n\r\n        this.fields.push({colonne: 'tram.enabled', operator: 'eq', value: 1, connector: \"and\"})\r\n      //  this.fields.push({colonne: 'ram.id', operator: 'in', value: userRamification.map(item=> item.id), connector: \"and\"})\r\n\r\n        this.api.listing(\"/type_ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1 )\r\n            .then(response => {\r\n                this.typeRamifications = response.data;\r\n                this.typeRamifications.forEach(item => {\r\n                    this.widTypeRamification.push({type: item.nom, value: null })\r\n\r\n                })\r\n            })\r\n        this.api.listing(\"/ramifications\", this.fields, \"tram.ordre\", \"asc\", 1000, 1 )\r\n            .then(response => {\r\n                this.listRamifications = response.data;\r\n            })\r\n\r\n\r\n    }\r\n\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}