{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from \"sweetalert2\";\nimport Api from \"../helpers/api\";\nimport UserMixins from \"./userMixins\";\nimport moment from \"moment\";\nexport default {\n  mixins: [UserMixins],\n  data() {\n    return {\n      api: new Api(),\n      tableData: [],\n      meta: {},\n      pageOptions: [10, 50, 100, 200, 500],\n      selectedEtablissement: null,\n      pagination: {\n        itemsPerPage: 50,\n        totalPages: 1,\n        currentPage: 1\n      },\n      sortBy: '',\n      fields: [],\n      orderBy: '',\n      colonnes: [],\n      sortOrder: 'desc'\n    };\n  },\n  computed: {\n    pages() {\n      let pages = Array.from({\n        length: this.pagination.totalPages\n      }, (_, i) => i + 1);\n      let currentPage = this.pagination.currentPage;\n      let visiblePages = 5;\n      let start = currentPage - Math.floor(visiblePages / 2);\n      let end = currentPage + Math.floor(visiblePages / 2);\n      if (start < 1) {\n        end += 1 - start;\n        start = 1;\n      }\n      if (end > this.pagination.totalPages) {\n        start -= end - this.pagination.totalPages;\n        end = this.pagination.totalPages;\n      }\n      if (start > 1) {\n        pages.splice(0, start - 1, '...');\n      }\n      if (end < this.pagination.totalPages) {\n        pages.splice(end, this.pagination.totalPages - end, '...');\n      }\n      return pages.slice(start - 1, end);\n    }\n  },\n  methods: {\n    handleSortBy() {\n      var colonne = this.colonnes.find(item => item.text === this.sortBy);\n      console.log(colonne);\n      this.orderBy = colonne.name;\n      this.fillTable();\n    },\n    confirmDelete(id) {\n      Swal.fire({\n        title: \"Etes-vous sûr ?\",\n        text: \"Vous ne pourrez plus recuper les informations\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#34c38f\",\n        cancelButtonColor: \"#f46a6a\",\n        confirmButtonText: \"Oui, Supprimer le !\",\n        cancelButtonText: \"Annuler\"\n      }).then(result => {\n        if (result.value) {\n          this.api.delete(this.url + \"/\" + id).then(response => {\n            if (response === true) {\n              this.fillTable();\n              Swal.fire(\"Supprimer!\", \"Votre ligne a été supprimée.\", \"success\");\n            }\n          });\n        }\n      });\n    },\n    changeElementParPage(val) {\n      //console.log(val)\n      this.pagination.itemsPerPage = val.id;\n      this.fillTable();\n    },\n    filterQuery() {\n      this.fields = [];\n      this.colonnes.forEach(item => {\n        this.fields.push({\n          colonne: item.name,\n          operator: 'like',\n          value: this.searchKey,\n          connector: 'or'\n        });\n      });\n      if (this.searchKey.length >= 2) {\n        this.fillTable();\n      } else {\n        var index = null;\n        this.colonnes.forEach(item => {\n          index = this.fields.findIndex(obj => obj.colonne === item.name);\n          if (index !== -1) {\n            this.fields.splice(index, 1);\n          }\n        });\n        this.fillTable();\n      }\n    },\n    goToPage(page) {\n      this.pagination.currentPage = page;\n      this.fillTable();\n    },\n    formatDate(date, format) {\n      return moment(date).format(format);\n    },\n    fillTable() {\n      this.api.listing(this.url, this.fields, this.orderBy, this.sortOrder, this.pagination.itemsPerPage, this.pagination.currentPage).then(response => {\n        this.isLoading = false;\n        this.tableData = response.data;\n        this.meta = response.meta.total_records;\n        this.pagination.totalPages = Math.ceil(response.meta.total_records / this.pagination.itemsPerPage);\n      });\n    }\n  },\n  mounted() {\n    this.selectedEtablissement = this.$store.state.selectedEtablissement;\n  }\n};","map":{"version":3,"names":["Swal","Api","UserMixins","moment","mixins","data","api","tableData","meta","pageOptions","selectedEtablissement","pagination","itemsPerPage","totalPages","currentPage","sortBy","fields","orderBy","colonnes","sortOrder","computed","pages","Array","from","length","_","i","visiblePages","start","Math","floor","end","splice","slice","methods","handleSortBy","colonne","find","item","text","console","log","name","fillTable","confirmDelete","id","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","delete","url","response","changeElementParPage","val","filterQuery","forEach","push","operator","searchKey","connector","index","findIndex","obj","goToPage","page","formatDate","date","format","listing","isLoading","total_records","ceil","mounted","$store","state"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/mixins/listing.js"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport Api from \"../helpers/api\";\r\nimport UserMixins from \"./userMixins\";\r\nimport moment from \"moment\"\r\nexport default {\r\n    mixins:[ UserMixins],\r\n\r\n    data(){\r\n        return{\r\n            api: new Api(),\r\n            tableData: [],\r\n            meta: {},\r\n            pageOptions: [10, 50, 100, 200, 500],\r\n            selectedEtablissement: null,\r\n            pagination: {\r\n                itemsPerPage: 50,\r\n                totalPages: 1,\r\n                currentPage: 1,\r\n            },\r\n            sortBy: '',\r\n\r\n            fields: [\r\n            ],\r\n            orderBy: '',\r\n            colonnes:[],\r\n            sortOrder: 'desc',\r\n        }\r\n    },\r\n    computed:{\r\n        pages() {\r\n            let pages = Array.from({length: this.pagination.totalPages}, (_, i) => i + 1)\r\n            let currentPage = this.pagination.currentPage\r\n            let visiblePages = 5\r\n            let start = currentPage - Math.floor(visiblePages / 2)\r\n            let end = currentPage + Math.floor(visiblePages / 2)\r\n            if (start < 1) {\r\n                end += 1 - start\r\n                start = 1\r\n            }\r\n            if (end > this.pagination.totalPages) {\r\n                start -= end - this.pagination.totalPages\r\n                end = this.pagination.totalPages\r\n            }\r\n            if (start > 1) {\r\n                pages.splice(0, start - 1, '...')\r\n            }\r\n            if (end < this.pagination.totalPages) {\r\n                pages.splice(end, this.pagination.totalPages - end, '...')\r\n            }\r\n            return pages.slice(start - 1, end)\r\n        }\r\n\r\n    },\r\n\r\n    methods:{\r\n        handleSortBy(){\r\n            var colonne = this.colonnes.find(item => item.text === this.sortBy)\r\n            console.log(colonne)\r\n            this.orderBy = colonne.name\r\n            this.fillTable()\r\n        },\r\n\r\n        confirmDelete(id) {\r\n            Swal.fire({\r\n                title: \"Etes-vous sûr ?\",\r\n                text: \"Vous ne pourrez plus recuper les informations\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#34c38f\",\r\n                cancelButtonColor: \"#f46a6a\",\r\n                confirmButtonText: \"Oui, Supprimer le !\",\r\n                cancelButtonText: \"Annuler\",\r\n            }).then((result) => {\r\n                if (result.value) {\r\n\r\n                    this.api.delete(this.url+\"/\"+id)\r\n                        .then(response => {\r\n                            if(response === true){\r\n                                this.fillTable();\r\n                                Swal.fire(\"Supprimer!\", \"Votre ligne a été supprimée.\", \"success\");\r\n                            }\r\n                        })\r\n\r\n\r\n                }\r\n            });\r\n        },\r\n\r\n        changeElementParPage(val){\r\n            //console.log(val)\r\n            this.pagination.itemsPerPage = val.id;\r\n            this.fillTable();\r\n        },\r\n        filterQuery(){\r\n            this.fields = [];\r\n            this.colonnes.forEach(item => {\r\n                this.fields.push({colonne: item.name, operator: 'like', value: this.searchKey, connector: 'or'})\r\n            })\r\n            if (this.searchKey.length >= 2){\r\n                this.fillTable()\r\n            }else{\r\n                var index = null;\r\n                this.colonnes.forEach(item => {\r\n                    index = this.fields.findIndex((obj) => obj.colonne === item.name);\r\n                    if (index !== -1) {\r\n                        this.fields.splice(index, 1);\r\n                    }\r\n                })\r\n                this.fillTable()\r\n\r\n            }\r\n        },\r\n        goToPage(page){\r\n            this.pagination.currentPage = page;\r\n            this.fillTable();\r\n        },\r\n        formatDate(date, format){\r\n            return moment(date).format(format);\r\n\r\n        },\r\n        fillTable(){\r\n\r\n\r\n            this.api.listing(this.url, this.fields, this.orderBy, this.sortOrder, this.pagination.itemsPerPage, this.pagination.currentPage )\r\n                .then(response => {\r\n                    this.isLoading =false\r\n                    this.tableData = response.data\r\n                    this.meta = response.meta.total_records;\r\n                    this.pagination.totalPages = Math.ceil(response.meta.total_records / this.pagination.itemsPerPage);\r\n\r\n                })\r\n        },\r\n\r\n    },\r\n    mounted() {\r\n        this.selectedEtablissement = this.$store.state.selectedEtablissement\r\n\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}