{"ast":null,"code":"import { createStore } from 'vuex';\nimport modules from './modules';\nconst store = createStore({\n  modules,\n  state: {\n    currentUser: JSON.parse(localStorage.getItem('currentUser')),\n    dasboardStats: JSON.parse(localStorage.getItem('dasboardStats')),\n    selectedEtablissement: JSON.parse(localStorage.getItem('selectedEtablissement')),\n    selectedAnnee: JSON.parse(localStorage.getItem('selectedAnnee')),\n    userRamifications: JSON.parse(localStorage.getItem('userRamifications')),\n    userEntites: JSON.parse(localStorage.getItem('userEntites'))\n  },\n  mutations: {\n    SET_CURRENT_USER(state, newValue) {\n      state.currentUser = newValue;\n      saveState('currentUser', newValue);\n    },\n    SET_USER_ENTITES(state, newValue) {\n      state.userEntites = newValue;\n      saveState('setUserEntites', newValue);\n    },\n    SET_USER_RAMIFICATIONS(state, newValue) {\n      state.userRamifications = newValue;\n      saveState('setUserRamifications', newValue);\n    },\n    SET_DASHBOARD_STATS(state, newValue) {\n      state.dasboardStats = newValue;\n      saveState('dasboardStats', newValue);\n    },\n    SET_SELECTED_ETABLISSEMENT(state, newValue) {\n      state.selectedEtablissement = newValue;\n      saveState('selectedEtablissement', newValue);\n    },\n    SET_SELECTED_ANNEE(state, annee) {\n      state.selectedAnnee = annee;\n    },\n    selectedAnnee: state => state.selectedAnnee\n  },\n  getters: {\n    // Whether the user is currently logged in.\n    loggedIn(state) {\n      return !!state.currentUser;\n    }\n  },\n  actions: {\n    // This is automatically run in `src/state/store.js` when the app\n    // starts, along with any other actions named `init` in other modules.\n    // eslint-disable-next-line no-unused-vars\n    setUserEntites({\n      commit\n    }, entites) {\n      commit('SET_USER_ENTITES', entites);\n    },\n    setAnnee({\n      commit\n    }, annee) {\n      commit('SET_SELECTED_ANNEE', annee);\n    },\n    setUserRamifications({\n      commit\n    }, ramifications) {\n      commit('SET_USER_RAMIFICATIONS', ramifications);\n    },\n    // Logs in the current user.\n    logIn({\n      commit\n    }, user = {}) {\n      commit('SET_CURRENT_USER', user);\n    },\n    dasboardStats({\n      commit\n    }, stats = {}) {\n      commit('SET_DASHBOARD_STATS', stats);\n    },\n    setSelectedEtablissement({\n      commit\n    }, etablissement = {}) {\n      commit('SET_SELECTED_ETABLISSEMENT', etablissement);\n    }\n  },\n  strict: process.env.NODE_ENV !== 'production'\n});\nexport default store;\nfunction saveState(key, state) {\n  window.sessionStorage.setItem(key, JSON.stringify(state));\n}","map":{"version":3,"names":["createStore","modules","store","state","currentUser","JSON","parse","localStorage","getItem","dasboardStats","selectedEtablissement","selectedAnnee","userRamifications","userEntites","mutations","SET_CURRENT_USER","newValue","saveState","SET_USER_ENTITES","SET_USER_RAMIFICATIONS","SET_DASHBOARD_STATS","SET_SELECTED_ETABLISSEMENT","SET_SELECTED_ANNEE","annee","getters","loggedIn","actions","setUserEntites","commit","entites","setAnnee","setUserRamifications","ramifications","logIn","user","stats","setSelectedEtablissement","etablissement","strict","process","env","NODE_ENV","key","window","sessionStorage","setItem","stringify"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/state/store.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nimport modules from './modules'\r\n\r\nconst store = createStore({\r\n  modules,\r\n  state : {\r\n    currentUser: JSON.parse(localStorage.getItem('currentUser')),\r\n    dasboardStats: JSON.parse(localStorage.getItem('dasboardStats')),\r\n    selectedEtablissement: JSON.parse(localStorage.getItem('selectedEtablissement')),\r\n    selectedAnnee: JSON.parse(localStorage.getItem('selectedAnnee')),\r\n    userRamifications: JSON.parse(localStorage.getItem('userRamifications')),\r\n    userEntites: JSON.parse(localStorage.getItem('userEntites')),\r\n\r\n  },\r\n  mutations : {\r\n    SET_CURRENT_USER(state, newValue) {\r\n      state.currentUser = newValue\r\n      saveState('currentUser', newValue)\r\n    },\r\n    SET_USER_ENTITES(state, newValue) {\r\n      state.userEntites = newValue\r\n      saveState('setUserEntites', newValue)\r\n    },\r\n    SET_USER_RAMIFICATIONS(state, newValue) {\r\n      state.userRamifications = newValue\r\n      saveState('setUserRamifications', newValue)\r\n    },\r\n    SET_DASHBOARD_STATS(state, newValue) {\r\n      state.dasboardStats = newValue\r\n      saveState('dasboardStats', newValue)\r\n    },\r\n    SET_SELECTED_ETABLISSEMENT(state, newValue) {\r\n      state.selectedEtablissement = newValue\r\n      saveState('selectedEtablissement', newValue)\r\n    },\r\n    SET_SELECTED_ANNEE(state, annee) {\r\n      state.selectedAnnee = annee\r\n    },\r\n    selectedAnnee: state => state.selectedAnnee\r\n\r\n  },\r\n  getters : {\r\n    // Whether the user is currently logged in.\r\n    loggedIn(state) {\r\n      return !!state.currentUser\r\n    },\r\n\r\n  },\r\n  actions : {\r\n    // This is automatically run in `src/state/store.js` when the app\r\n    // starts, along with any other actions named `init` in other modules.\r\n    // eslint-disable-next-line no-unused-vars\r\n    setUserEntites({ commit }, entites) {\r\n      commit('SET_USER_ENTITES', entites)\r\n    },\r\n    setAnnee({ commit }, annee) {\r\n      commit('SET_SELECTED_ANNEE', annee)\r\n    },\r\n    setUserRamifications({ commit }, ramifications) {\r\n      commit('SET_USER_RAMIFICATIONS', ramifications)\r\n    },\r\n\r\n    // Logs in the current user.\r\n    logIn({ commit }, user= {}) {\r\n\r\n      commit('SET_CURRENT_USER', user)\r\n    },\r\n    dasboardStats({ commit }, stats= {}) {\r\n\r\n      commit('SET_DASHBOARD_STATS', stats)\r\n    },\r\n    setSelectedEtablissement({ commit }, etablissement= {}) {\r\n\r\n      commit('SET_SELECTED_ETABLISSEMENT', etablissement)\r\n    },\r\n  },\r\n  strict: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store\r\n\r\nfunction saveState(key, state) {\r\n  window.sessionStorage.setItem(key, JSON.stringify(state))\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBC,OAAO;EACPE,KAAK,EAAG;IACNC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC5DC,aAAa,EAAEJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChEE,qBAAqB,EAAEL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;IAChFG,aAAa,EAAEN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChEI,iBAAiB,EAAEP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACxEK,WAAW,EAAER,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAE7D,CAAC;EACDM,SAAS,EAAG;IACVC,gBAAgBA,CAACZ,KAAK,EAAEa,QAAQ,EAAE;MAChCb,KAAK,CAACC,WAAW,GAAGY,QAAQ;MAC5BC,SAAS,CAAC,aAAa,EAAED,QAAQ,CAAC;IACpC,CAAC;IACDE,gBAAgBA,CAACf,KAAK,EAAEa,QAAQ,EAAE;MAChCb,KAAK,CAACU,WAAW,GAAGG,QAAQ;MAC5BC,SAAS,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IACvC,CAAC;IACDG,sBAAsBA,CAAChB,KAAK,EAAEa,QAAQ,EAAE;MACtCb,KAAK,CAACS,iBAAiB,GAAGI,QAAQ;MAClCC,SAAS,CAAC,sBAAsB,EAAED,QAAQ,CAAC;IAC7C,CAAC;IACDI,mBAAmBA,CAACjB,KAAK,EAAEa,QAAQ,EAAE;MACnCb,KAAK,CAACM,aAAa,GAAGO,QAAQ;MAC9BC,SAAS,CAAC,eAAe,EAAED,QAAQ,CAAC;IACtC,CAAC;IACDK,0BAA0BA,CAAClB,KAAK,EAAEa,QAAQ,EAAE;MAC1Cb,KAAK,CAACO,qBAAqB,GAAGM,QAAQ;MACtCC,SAAS,CAAC,uBAAuB,EAAED,QAAQ,CAAC;IAC9C,CAAC;IACDM,kBAAkBA,CAACnB,KAAK,EAAEoB,KAAK,EAAE;MAC/BpB,KAAK,CAACQ,aAAa,GAAGY,KAAK;IAC7B,CAAC;IACDZ,aAAa,EAAER,KAAK,IAAIA,KAAK,CAACQ;EAEhC,CAAC;EACDa,OAAO,EAAG;IACR;IACAC,QAAQA,CAACtB,KAAK,EAAE;MACd,OAAO,CAAC,CAACA,KAAK,CAACC,WAAW;IAC5B;EAEF,CAAC;EACDsB,OAAO,EAAG;IACR;IACA;IACA;IACAC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAEC,OAAO,EAAE;MAClCD,MAAM,CAAC,kBAAkB,EAAEC,OAAO,CAAC;IACrC,CAAC;IACDC,QAAQA,CAAC;MAAEF;IAAO,CAAC,EAAEL,KAAK,EAAE;MAC1BK,MAAM,CAAC,oBAAoB,EAAEL,KAAK,CAAC;IACrC,CAAC;IACDQ,oBAAoBA,CAAC;MAAEH;IAAO,CAAC,EAAEI,aAAa,EAAE;MAC9CJ,MAAM,CAAC,wBAAwB,EAAEI,aAAa,CAAC;IACjD,CAAC;IAED;IACAC,KAAKA,CAAC;MAAEL;IAAO,CAAC,EAAEM,IAAI,GAAE,CAAC,CAAC,EAAE;MAE1BN,MAAM,CAAC,kBAAkB,EAAEM,IAAI,CAAC;IAClC,CAAC;IACDzB,aAAaA,CAAC;MAAEmB;IAAO,CAAC,EAAEO,KAAK,GAAE,CAAC,CAAC,EAAE;MAEnCP,MAAM,CAAC,qBAAqB,EAAEO,KAAK,CAAC;IACtC,CAAC;IACDC,wBAAwBA,CAAC;MAAER;IAAO,CAAC,EAAES,aAAa,GAAE,CAAC,CAAC,EAAE;MAEtDT,MAAM,CAAC,4BAA4B,EAAES,aAAa,CAAC;IACrD;EACF,CAAC;EACDC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACnC,CAAC,CAAC;AAEF,eAAevC,KAAK;AAEpB,SAASe,SAASA,CAACyB,GAAG,EAAEvC,KAAK,EAAE;EAC7BwC,MAAM,CAACC,cAAc,CAACC,OAAO,CAACH,GAAG,EAAErC,IAAI,CAACyC,SAAS,CAAC3C,KAAK,CAAC,CAAC;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}