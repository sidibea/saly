{"ast":null,"code":"import { createI18n } from 'vue-i18n';\n\n/**\n * Load locale messages\n *\n * The loaded `JSON` locale messages is pre-compiled by `@intlify/vue-i18n-loader`, which is integrated into `vue-cli-plugin-i18n`.\n * See: https://github.com/intlify/vue-i18n-loader#rocket-i18n-resource-pre-compilation\n */\nfunction loadLocaleMessages() {\n  const locales = require.context('./lang', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n  const messages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\nconst setDateTimeFormats = {\n  short: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  },\n  long: {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric'\n  }\n};\nconst dateTimeFormats = {\n  en: setDateTimeFormats,\n  es: setDateTimeFormats,\n  de: setDateTimeFormats,\n  'en-GB': setDateTimeFormats\n};\nexport default createI18n({\n  locale: 'fr',\n  fallbackLocale: 'fr',\n  messages: loadLocaleMessages(),\n  dateTimeFormats\n});","map":{"version":3,"names":["createI18n","loadLocaleMessages","locales","require","context","messages","keys","forEach","key","matched","match","length","locale","setDateTimeFormats","short","year","month","day","long","weekday","hour","minute","dateTimeFormats","en","es","de","fallbackLocale"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/i18n.js"],"sourcesContent":["import { createI18n } from 'vue-i18n';\n\n/**\n * Load locale messages\n *\n * The loaded `JSON` locale messages is pre-compiled by `@intlify/vue-i18n-loader`, which is integrated into `vue-cli-plugin-i18n`.\n * See: https://github.com/intlify/vue-i18n-loader#rocket-i18n-resource-pre-compilation\n */\nfunction loadLocaleMessages() {\n  const locales = require.context('./lang', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n  const messages = {};\n  locales.keys().forEach((key) => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nconst setDateTimeFormats = {\n  short: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  },\n  long: {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n  },\n};\n\nconst dateTimeFormats = {\n  en: setDateTimeFormats,\n  es: setDateTimeFormats,\n  de: setDateTimeFormats,\n  'en-GB': setDateTimeFormats,\n};\n\nexport default createI18n({\n  locale: 'fr',\n  fallbackLocale: 'fr',\n  messages: loadLocaleMessages(),\n  dateTimeFormats,\n});"],"mappings":"AAAA,SAASA,UAAU,QAAQ,UAAU;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,MAAMC,OAAO,GAAGC,OAAO,CAACC,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,2BAA2B,CAAC;EAC5E,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBH,OAAO,CAACI,IAAI,CAAC,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAK;IAC9B,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAK,CAAC,qBAAqB,CAAC;IAChD,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMC,MAAM,GAAGH,OAAO,CAAC,CAAC,CAAC;MACzBJ,QAAQ,CAACO,MAAM,CAAC,GAAGV,OAAO,CAACM,GAAG,CAAC;IACjC;EACF,CAAC,CAAC;EACF,OAAOH,QAAQ;AACjB;AAEA,MAAMQ,kBAAkB,GAAG;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACP,CAAC;EACDC,IAAI,EAAE;IACJH,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdE,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV;AACF,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBC,EAAE,EAAEV,kBAAkB;EACtBW,EAAE,EAAEX,kBAAkB;EACtBY,EAAE,EAAEZ,kBAAkB;EACtB,OAAO,EAAEA;AACX,CAAC;AAED,eAAeb,UAAU,CAAC;EACxBY,MAAM,EAAE,IAAI;EACZc,cAAc,EAAE,IAAI;EACpBrB,QAAQ,EAAEJ,kBAAkB,CAAC,CAAC;EAC9BqB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}