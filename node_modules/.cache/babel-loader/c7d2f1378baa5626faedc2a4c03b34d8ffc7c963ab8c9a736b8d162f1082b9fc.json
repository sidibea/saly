{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { userService } from '../../helpers/authservice/user.service';\nimport router from '../../router/index';\nconst user = JSON.parse(localStorage.getItem('user'));\nexport const state = user ? {\n  status: {\n    loggeduser: true\n  },\n  user\n} : {\n  status: {},\n  user: null\n};\nexport const actions = {\n  // Logs in the user.\n  // eslint-disable-next-line no-unused-vars\n  login({\n    dispatch,\n    commit\n  }, {\n    email,\n    password\n  }) {\n    commit('loginRequest', {\n      email\n    });\n    userService.login(email, password).then(user => {\n      commit('loginSuccess', user);\n      router.push('/');\n    }, error => {\n      commit('loginFailure', error);\n      dispatch('notification/error', error, {\n        root: true\n      });\n    });\n  },\n  // Logout the user\n  logout({\n    commit\n  }) {\n    userService.logout();\n    commit('logout');\n  },\n  // register the user\n  registeruser({\n    dispatch,\n    commit\n  }, user) {\n    commit('registerRequest', user);\n    userService.register(user).then(user => {\n      commit('registerSuccess', user);\n      dispatch('notification/success', 'Registration successful', {\n        root: true\n      });\n      router.push('/login');\n    }, error => {\n      commit('registerFailure', error);\n      dispatch('notification/error', error, {\n        root: true\n      });\n    });\n  }\n};\nexport const mutations = {\n  loginRequest(state, user) {\n    state.status = {\n      loggingIn: true\n    };\n    state.user = user;\n  },\n  loginSuccess(state, user) {\n    state.status = {\n      loggeduser: true\n    };\n    state.user = user;\n  },\n  loginFailure(state) {\n    state.status = {};\n    state.user = null;\n  },\n  logout(state) {\n    state.status = {};\n    state.user = null;\n  },\n  registerRequest(state) {\n    state.status = {\n      registering: true\n    };\n  },\n  registerSuccess(state) {\n    state.status = {};\n  },\n  registerFailure(state) {\n    state.status = {};\n  }\n};","map":{"version":3,"names":["userService","router","user","JSON","parse","localStorage","getItem","state","status","loggeduser","actions","login","dispatch","commit","email","password","then","push","error","root","logout","registeruser","register","mutations","loginRequest","loggingIn","loginSuccess","loginFailure","registerRequest","registering","registerSuccess","registerFailure"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/state/modules/authfack.js"],"sourcesContent":["import { userService } from '../../helpers/authservice/user.service';\r\nimport router from '../../router/index'\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nexport const state = user\r\n    ? { status: { loggeduser: true }, user }\r\n    : { status: {}, user: null };\r\n\r\nexport const actions = {\r\n    // Logs in the user.\r\n    // eslint-disable-next-line no-unused-vars\r\n    login({ dispatch, commit }, { email, password }) {\r\n        commit('loginRequest', { email });\r\n\r\n        userService.login(email, password)\r\n            .then(\r\n                user => {\r\n                    commit('loginSuccess', user);\r\n                    router.push('/');\r\n                },\r\n                error => {\r\n                    commit('loginFailure', error);\r\n                    dispatch('notification/error', error, { root: true });\r\n                }\r\n            );\r\n    },\r\n    // Logout the user\r\n    logout({ commit }) {\r\n        userService.logout();\r\n        commit('logout');\r\n    },\r\n    // register the user\r\n    registeruser({ dispatch, commit }, user) {\r\n        commit('registerRequest', user);\r\n        userService.register(user)\r\n            .then(\r\n                user => {\r\n                    commit('registerSuccess', user);\r\n                    dispatch('notification/success', 'Registration successful', { root: true });\r\n                    router.push('/login');\r\n                },\r\n                error => {\r\n                    commit('registerFailure', error);\r\n                    dispatch('notification/error', error, { root: true });\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\nexport const mutations = {\r\n    loginRequest(state, user) {\r\n        state.status = { loggingIn: true };\r\n        state.user = user;\r\n    },\r\n    loginSuccess(state, user) {\r\n        state.status = { loggeduser: true };\r\n        state.user = user;\r\n    },\r\n    loginFailure(state) {\r\n        state.status = {};\r\n        state.user = null;\r\n    },\r\n    logout(state) {\r\n        state.status = {};\r\n        state.user = null;\r\n    },\r\n    registerRequest(state) {\r\n        state.status = { registering: true };\r\n    },\r\n    registerSuccess(state) {\r\n        state.status = {};\r\n    },\r\n    registerFailure(state) {\r\n        state.status = {};\r\n    }\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}