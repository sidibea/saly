{"ast":null,"code":"import firebase from 'firebase/compat/app';\n// Add the Firebase products that you want to use\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          // sessionStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          sessionStorage.removeItem('authUser');\n        }\n      });\n    }\n  }\n\n  /**\r\n   * Registers the user with given details\r\n   */\n  registerUser(username, email, password) {\n    return new Promise((resolve, reject) => {\n      // eslint-disable-next-line no-unused-vars\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n        let user = firebase.auth().currentUser.updateProfile({\n          displayName: username\n        });\n        resolve(user);\n      }, error => {\n        reject(this._handleError(error));\n      });\n    });\n  }\n\n  /**\r\n   * Login user with given details\r\n   */\n  loginUser(email, password) {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        var user = firebase.auth().currentUser;\n        sessionStorage.setItem(\"authUser\", JSON.stringify(user));\n        resolve(user);\n      }, error => {\n        reject(this._handleError(error));\n      });\n    });\n  }\n\n  /**\r\n   * forget Password user with given details\r\n   */\n  forgetPassword(email) {\n    return new Promise((resolve, reject) => {\n      firebase.auth().sendPasswordResetEmail(email, {\n        url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n      }).then(() => {\n        resolve(true);\n      }).catch(error => {\n        reject(this._handleError(error));\n      });\n    });\n  }\n\n  /**\r\n   * Logout the user\r\n   */\n  logout() {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signOut().then(() => {\n        alert(\"logout\");\n        resolve(true);\n      }).catch(error => {\n        reject(this._handleError(error));\n      });\n    });\n  }\n  setLoggeedInUser(user) {\n    sessionStorage.setItem(\"authUser\", JSON.stringify(user));\n  }\n\n  /**\r\n   * Returns the authenticated user\r\n   */\n  getAuthenticatedUser() {\n    if (!sessionStorage.getItem('authUser')) return null;\n    return JSON.parse(sessionStorage.getItem('authUser'));\n  }\n\n  /**\r\n   * Handle the error\r\n   * @param {*} error \r\n   */\n  _handleError(error) {\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n}\nlet _fireBaseBackend = null;\n\n/**\r\n * Initilize the backend\r\n * @param {*} config \r\n */\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n  return _fireBaseBackend;\n};\n\n/**\r\n * Returns the firebase backend\r\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","initializeApp","auth","onAuthStateChanged","user","sessionStorage","removeItem","registerUser","username","email","password","Promise","resolve","reject","createUserWithEmailAndPassword","then","res","currentUser","updateProfile","displayName","error","_handleError","loginUser","signInWithEmailAndPassword","setItem","JSON","stringify","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","alert","setLoggeedInUser","getAuthenticatedUser","getItem","parse","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"sources":["C:/Users/Sekou A Sidibe/Documents/NTA TECH/projets/klispay_backoffice/v3/src/authUtils.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\n\r\nclass FirebaseAuthBackend {\r\n    constructor(firebaseConfig) {\r\n        if (firebaseConfig) {\r\n            // Initialize Firebase\r\n            firebase.initializeApp(firebaseConfig);\r\n            firebase.auth().onAuthStateChanged((user) => {\r\n                if (user) {\r\n                    // sessionStorage.setItem(\"authUser\", JSON.stringify(user));\r\n                } else {\r\n                    sessionStorage.removeItem('authUser');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers the user with given details\r\n     */\r\n    registerUser(username, email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            // eslint-disable-next-line no-unused-vars\r\n            firebase.auth().createUserWithEmailAndPassword(email, password).then((res) => {\r\n                let user = firebase.auth().currentUser.updateProfile({\r\n                    displayName: username\r\n                });\r\n                resolve(user);\r\n            }, (error) => {\r\n                reject(this._handleError(error));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Login user with given details\r\n     */\r\n    loginUser(email, password) {\r\n        return new Promise((resolve, reject) => {\r\n            firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\r\n                var user = firebase.auth().currentUser;\r\n                sessionStorage.setItem(\"authUser\", JSON.stringify(user));\r\n                resolve(user);\r\n            }, (error) => {\r\n                reject(this._handleError(error));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * forget Password user with given details\r\n     */\r\n    forgetPassword(email) {\r\n        return new Promise((resolve, reject) => {\r\n            firebase.auth().sendPasswordResetEmail(email, { url: window.location.protocol + \"//\" + window.location.host + \"/login\" }).then(() => {\r\n                resolve(true);\r\n            }).catch((error) => {\r\n                reject(this._handleError(error));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logout the user\r\n     */\r\n    logout() {\r\n        return new Promise((resolve, reject) => {\r\n            firebase.auth().signOut().then(() => {\r\n                alert(\"logout\");\r\n                resolve(true);\r\n            }).catch((error) => {\r\n                reject(this._handleError(error));\r\n            });\r\n        });\r\n    }\r\n\r\n    setLoggeedInUser(user) {\r\n        sessionStorage.setItem(\"authUser\", JSON.stringify(user));\r\n    }\r\n\r\n    /**\r\n     * Returns the authenticated user\r\n     */\r\n    getAuthenticatedUser() {\r\n        if (!sessionStorage.getItem('authUser'))\r\n            return null;\r\n        return JSON.parse(sessionStorage.getItem('authUser'));\r\n    }\r\n\r\n    /**\r\n     * Handle the error\r\n     * @param {*} error \r\n     */\r\n    _handleError(error) {\r\n        var errorMessage = error.message;\r\n        return errorMessage;\r\n    }\r\n}\r\n\r\nlet _fireBaseBackend = null;\r\n\r\n/**\r\n * Initilize the backend\r\n * @param {*} config \r\n */\r\nconst initFirebaseBackend = (config) => {\r\n    if (!_fireBaseBackend) {\r\n        _fireBaseBackend = new FirebaseAuthBackend(config);\r\n    }\r\n    return _fireBaseBackend;\r\n};\r\n\r\n/**\r\n * Returns the firebase backend\r\n */\r\nconst getFirebaseBackend = () => {\r\n    return _fireBaseBackend;\r\n};\r\n\r\nexport { initFirebaseBackend, getFirebaseBackend };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}