var El = Object.defineProperty;
var Dl = (e, t, a) => t in e ? El(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var be = (e, t, a) => (Dl(e, typeof t != "symbol" ? t + "" : t, a), a);
import { shallowRef as Hl, watchEffect as Rl, readonly as ql, computed as i, Comment as Ml, reactive as De, inject as He, onMounted as $e, onBeforeUnmount as jt, ref as W, toRef as s, onActivated as Gt, watch as ce, nextTick as qe, defineComponent as A, provide as Je, openBlock as d, createElementBlock as g, unref as o, normalizeClass as F, renderSlot as h, createBlock as O, resolveDynamicComponent as Z, withCtx as D, createElementVNode as M, withDirectives as Ye, createTextVNode as ee, toDisplayString as G, createVNode as fe, useSlots as Ce, Fragment as oe, createCommentVNode as U, normalizeStyle as Pe, mergeProps as J, getCurrentInstance as jl, renderList as ve, resolveComponent as xa, normalizeProps as he, isReactive as Gl, Transition as Ul, guardReactiveProps as we, onUnmounted as Wl, h as le, useAttrs as Ia, withModifiers as Ut, isRef as nt, vModelCheckbox as Kl, vModelRadio as Xl, vModelSelect as Jl, Teleport as Yl, withKeys as Zl, vShow as Ql, createSlots as Fa } from "vue";
import { Collapse as en, Popover as Ft, Tooltip as Vt, Alert as tn, Carousel as an, Dropdown as ln, Offcanvas as nn } from "bootstrap";
const on = (e, t) => {
  var l;
  const a = Hl();
  return Rl(
    () => {
      a.value = e();
    },
    {
      ...t,
      flush: (l = t == null ? void 0 : t.flush) != null ? l : "sync"
    }
  ), ql(a);
}, ot = (e) => i(() => e.value ? `justify-content-${e.value}` : "");
class Xe {
  constructor(t, a = {}) {
    be(this, "cancelable", !0);
    be(this, "componentId", null);
    be(this, "_defaultPrevented", !1);
    be(this, "eventType", "");
    be(this, "nativeEvent", null);
    be(this, "_preventDefault");
    be(this, "relatedTarget", null);
    be(this, "target", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, Xe.Defaults, a, { eventType: t }), this._preventDefault = function() {
      this.cancelable && (this.defaultPrevented = !0);
    };
  }
  get defaultPrevented() {
    return this._defaultPrevented;
  }
  set defaultPrevented(t) {
    this._defaultPrevented = t;
  }
  get preventDefault() {
    return this._preventDefault;
  }
  set preventDefault(t) {
    this._preventDefault = t;
  }
  static get Defaults() {
    return {
      cancelable: !0,
      componentId: null,
      eventType: "",
      nativeEvent: null,
      relatedTarget: null,
      target: null
    };
  }
}
class sn extends Xe {
  constructor(a, l = {}) {
    super(a, l);
    be(this, "trigger", null);
    Object.assign(this, Xe.Defaults, l, { eventType: a });
  }
  static get Defaults() {
    return {
      ...super.Defaults,
      trigger: null
    };
  }
}
const Pt = (e) => e !== null && typeof e == "object", Pa = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), rn = (e) => Object.prototype.toString.call(e) === "[object Object]", Ne = (e) => e === null, Oa = /_/g, La = /([a-z])([A-Z])/g, un = /(\s|^)(\w)/g, dn = /(\s|^)(\w)/, dt = /\s+/, cn = /^#/, fn = /^#[A-Za-z]+[\w\-:.]*$/, vn = /-u-.+/, mt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || rn(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), ta = (e) => e.replace(Oa, " ").replace(La, (t, a, l) => `${a} ${l}`).replace(dn, (t, a, l) => a + l.toUpperCase()), aa = (e) => e.replace(Oa, " ").replace(La, (t, a, l) => `${a} ${l}`).replace(un, (t, a, l) => a + l.toUpperCase()), mn = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, At = (e) => `\\${e}`, bn = (e) => {
  const t = mt(e), { length: a } = t, l = t.charCodeAt(0);
  return t.split("").reduce((n, u, f) => {
    const c = t.charCodeAt(f);
    return c === 0 ? `${n}\uFFFD` : c === 127 || c >= 1 && c <= 31 || f === 0 && c >= 48 && c <= 57 || f === 1 && c >= 48 && c <= 57 && l === 45 ? n + At(`${c.toString(16)} `) : f === 0 && c === 45 && a === 1 ? n + At(u) : c >= 128 || c === 45 || c === 95 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 ? n + u : n + At(u);
  }, "");
}, Wt = typeof window < "u", gn = typeof document < "u", pn = typeof navigator < "u", za = Wt && gn && pn, la = Wt ? window : {}, hn = (() => {
  let e = !1;
  if (za)
    try {
      const t = {
        get passive() {
          e = !0;
        }
      };
      la.addEventListener("test", t, t), la.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})(), Na = typeof window < "u", Ea = typeof document < "u", yn = typeof Element < "u", Da = typeof navigator < "u", ht = Na && Ea && Da, je = Na ? window : {}, yt = Ea ? document : {}, Ha = Da ? navigator : {}, Ra = (Ha.userAgent || "").toLowerCase();
Ra.indexOf("jsdom") > 0;
/msie|trident/.test(Ra);
(() => {
  let e = !1;
  if (ht)
    try {
      const t = {
        get passive() {
          return e = !0, e;
        }
      };
      je.addEventListener("test", t, t), je.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})();
ht && ("ontouchstart" in yt.documentElement || Ha.maxTouchPoints > 0);
ht && Boolean(je.PointerEvent || je.MSPointerEvent);
ht && "IntersectionObserver" in je && "IntersectionObserverEntry" in je && "intersectionRatio" in je.IntersectionObserverEntry.prototype;
const xe = yn ? Element.prototype : void 0, Bn = (xe == null ? void 0 : xe.matches) || (xe == null ? void 0 : xe.msMatchesSelector) || (xe == null ? void 0 : xe.webkitMatchesSelector), ze = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), $n = (e) => ze(e) ? e.getBoundingClientRect() : null, kn = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, Cn = (e) => ze(e) && e === kn(), Sn = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return Cn(e);
}, wn = (e, t) => t && ze(e) && e.getAttribute(t) || null, Tn = (e) => {
  if (wn(e, "display") === "none")
    return !1;
  const t = $n(e);
  return !!(t && t.height > 0 && t.width > 0);
}, Ve = (e, t) => !e || e(t).filter((a) => a.type !== Ml).length < 1, qa = (e, t) => (ze(t) ? t : yt).querySelector(e) || null, _n = (e, t) => Array.from([(ze(t) ? t : yt).querySelectorAll(e)]), Kt = (e, t) => t && ze(e) ? e.getAttribute(t) : null, Vn = (e) => yt.getElementById(/^#/.test(e) ? e.slice(1) : e) || null, An = (e, t, a) => {
  t && ze(e) && e.setAttribute(t, a);
}, xn = (e, t) => {
  t && ze(e) && e.removeAttribute(t);
}, In = (e, t) => mt(e).toLowerCase() === mt(t).toLowerCase(), it = Wt ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), Ma = (e, t) => ze(e) ? Bn.call(e, t) : !1, Fn = (xe == null ? void 0 : xe.closest) || function(e) {
  let t = this;
  if (!t)
    return null;
  do {
    if (Ma(t, e))
      return t;
    t = t.parentElement || t.parentNode;
  } while (t !== null && t.nodeType === Node.ELEMENT_NODE);
  return null;
}, na = (e, t, a = !1) => {
  if (!ze(t))
    return null;
  const l = Fn.call(t, e);
  return a ? l : l === t ? null : l;
}, Bt = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, n) => (l[e ? `${e}${n.charAt(0).toUpperCase() + n.slice(1)}` : n] = a, l), /* @__PURE__ */ Object.create(null)), ja = (e, t, a, l = a) => Object.keys(t).reduce((n, u) => (e[u] && n.push(
  [l, u.replace(a, ""), e[u]].filter((f) => f && typeof f != "boolean").join("-").toLowerCase()
), n), []), Ee = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, $t = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, xt = (e) => !!e && typeof e == "object" && e.constructor === Object, Ot = (e, t, a = !0) => {
  const l = e instanceof Date && typeof e.getMonth == "function" ? new Date(e.getTime()) : Object.assign({}, e);
  return xt(e) && xt(t) && Object.keys(t).forEach((n) => {
    xt(t[n]) ? n in e ? l[n] = Ot(e[n], t[n], a) : Object.assign(l, { [n]: t[n] }) : Array.isArray(t[n]) && Array.isArray(e[n]) ? Object.assign(l, {
      [n]: a ? e[n].concat(
        t[n].filter((u) => !e[n].includes(u))
      ) : t[n]
    }) : Object.assign(l, { [n]: t[n] });
  }), l;
}, Fe = (e, t = {}, a = {}) => {
  const l = [e];
  let n;
  for (let u = 0; u < l.length && !n; u++) {
    const f = l[u];
    n = a[f];
  }
  return n && typeof n == "function" ? n(t) : n;
}, Le = (e, t = NaN) => Number.isInteger(e) ? e : t, Qe = (e, t = NaN) => {
  const a = Number.parseInt(e, 10);
  return Number.isNaN(a) ? t : a;
}, tt = (e, t = NaN) => {
  const a = Number.parseFloat(e.toString());
  return Number.isNaN(a) ? t : a;
}, kt = (e, t) => Object.keys(e).filter((a) => !t.includes(a)).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), bt = (e) => Array.isArray(e) ? e.map((t) => bt(t)) : e instanceof Date ? new Date(e.getTime()) : e && typeof e == "object" ? Object.getOwnPropertyNames(e).reduce((t, a) => {
  var l;
  return Object.defineProperty(t, a, (l = Object.getOwnPropertyDescriptor(e, a)) != null ? l : {}), t[a] = bt(e[a]), t;
}, Object.create(Object.getPrototypeOf(e))) : e, Lt = (e) => new Promise((t) => t(bt(e))), oa = (e, t) => t + (e ? mn(e) : ""), Xt = (e, t) => (Array.isArray(t) ? t.slice() : Object.keys(t)).reduce(
  (a, l) => (a[l] = e[l], a),
  {}
), Pn = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true", at = (e) => !!(e.href || e.to);
function r(e) {
  return on(() => e.value === void 0 ? void 0 : Pn(e.value));
}
const Ga = Symbol(), Ua = {
  items: De([]),
  reset() {
    this.items = De([]);
  }
}, On = (e) => {
  e.provide(Ga, Ua);
}, Ln = () => {
  const e = He(Ga);
  return e || Ua;
}, Be = (e, t, a) => {
  $e(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.addEventListener(t, a);
  }), jt(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.removeEventListener(t, a);
  });
}, Wa = (e) => i(() => ({
  "form-check": e.plain === !1 && e.button === !1,
  "form-check-inline": e.inline === !0,
  "form-switch": e.switch === !0,
  [`form-control-${e.size}`]: e.size !== void 0 && e.size !== "md"
})), Ka = (e) => i(() => ({
  "form-check-input": e.plain === !1 && e.button === !1,
  "is-valid": e.state === !0,
  "is-invalid": e.state === !1,
  "btn-check": e.button === !0
})), Xa = (e) => i(() => ({
  "form-check-label": e.plain === !1 && e.button === !1,
  btn: e.button === !0,
  [`btn-${e.buttonVariant}`]: e.button === !0 && e.buttonVariant !== void 0,
  [`btn-${e.size}`]: e.button && e.size && e.size !== "md"
})), Ja = (e) => i(() => ({
  "aria-invalid": $t(e.ariaInvalid, e.state),
  "aria-required": e.required === !0 ? !0 : void 0
})), Ya = (e) => i(() => ({
  "was-validated": e.validated === !0,
  "btn-group": e.buttons === !0 && e.stacked === !1,
  "btn-group-vertical": e.stacked === !0,
  [`btn-group-${e.size}`]: e.size !== void 0
})), gt = (e, t, a) => e.reduce(
  (l, n) => n.type.toString() === "Symbol(Fragment)" ? l.concat(n.children) : l.concat([n]),
  []
).filter((l) => l.type.__name === t || l.type.name === t).map((l) => {
  const n = (l.children.default ? l.children.default() : []).find(
    (u) => u.type.toString() === "Symbol(Text)"
  );
  return {
    props: {
      disabled: a,
      ...l.props
    },
    text: n ? n.children : ""
  };
}), Za = (e, t) => typeof e == "string" ? {
  props: {
    value: e,
    disabled: t.disabled
  },
  text: e
} : {
  props: {
    value: e[t.valueField],
    disabled: t.disabled || e[t.disabledField],
    ...e.props
  },
  text: e[t.textField],
  html: e[t.htmlField]
}, Qa = (e, t, a, l, n) => ({
  ...e,
  props: {
    "button-variant": a.buttonVariant,
    form: a.form,
    name: l.value,
    id: `${n.value}_option_${t}`,
    button: a.buttons,
    state: a.state,
    plain: a.plain,
    size: a.size,
    inline: !a.stacked,
    required: a.required,
    ...e.props
  }
}), ke = (e, t) => i(() => (e == null ? void 0 : e.value) || Ee(t)), el = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, tl = (e, t) => {
  const a = W();
  let l = null, n = !0;
  const u = ke(s(e, "id"), "input"), f = (b, k, y = !1) => (b = String(b), typeof e.formatter == "function" && (!e.lazyFormatter || y) ? (n = !1, e.formatter(b, k)) : b), c = (b) => e.trim ? b.trim() : e.number ? Number.parseFloat(b) : b, v = () => {
    qe(() => {
      var b;
      e.autofocus && ((b = a.value) == null || b.focus());
    });
  };
  $e(v), $e(() => {
    a.value && (a.value.value = e.modelValue);
  }), Gt(v);
  const p = i(
    () => {
      var b;
      return $t(e.ariaInvalid, (b = e.state) != null ? b : void 0);
    }
  ), B = (b) => {
    const { value: k } = b.target, y = f(k, b);
    if (y === !1 || b.defaultPrevented) {
      b.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const C = c(y);
    e.modelValue !== C && (l = k, t("update:modelValue", C)), t("input", y);
  }, m = (b) => {
    const { value: k } = b.target, y = f(k, b);
    if (y === !1 || b.defaultPrevented) {
      b.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = k, t("update:modelValue", y);
    const C = c(y);
    e.modelValue !== C && t("change", y);
  }, $ = (b) => {
    if (t("blur", b), !e.lazy && !e.lazyFormatter)
      return;
    const { value: k } = b.target, y = f(k, b, !0);
    l = k, t("update:modelValue", y);
  }, V = () => {
    var b;
    e.disabled || (b = a.value) == null || b.focus();
  }, T = () => {
    var b;
    e.disabled || (b = a.value) == null || b.blur();
  };
  return ce(
    () => e.modelValue,
    (b) => {
      !a.value || (a.value.value = l && n ? l : b, l = null, n = !0);
    }
  ), {
    input: a,
    computedId: u,
    computedAriaInvalid: p,
    onInput: B,
    onChange: m,
    onBlur: $,
    focus: V,
    blur: T
  };
}, Ke = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return Ke(e[a[0]], a.splice(1).join("."));
}, It = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const n = Ke(e, l.valueField), u = Ke(e, l.textField), f = Ke(e, l.htmlField), c = Ke(e, l.disabledField), v = e[l.optionsField] || null;
    return v !== null ? {
      label: String(Ke(e, l.labelField) || u),
      options: Jt(v, a, l)
    } : {
      value: typeof n > "u" ? t || u : n,
      text: String(typeof u > "u" ? t : u),
      html: f,
      disabled: Boolean(c)
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, Jt = (e, t, a) => Array.isArray(e) ? e.map((l) => It(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const n = e[l];
  switch (typeof n) {
    case "object":
      return It(n.text, String(n.value), t, a);
    default:
      return It(n, String(l), t, a);
  }
})) : [], zn = ["id"], al = Symbol(), Nn = /* @__PURE__ */ A({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: null
  },
  setup(e) {
    const t = e, a = ke(s(t, "id"), "accordion"), l = r(s(t, "flush")), n = r(s(t, "free")), u = i(() => ({
      "accordion-flush": l.value
    }));
    return n.value || Je(al, a.value), (f, c) => (d(), g("div", {
      id: o(a),
      class: F(["accordion", o(u)])
    }, [
      h(f.$slots, "default")
    ], 10, zn));
  }
}), ll = /* @__PURE__ */ A({
  __name: "BCollapse",
  props: {
    accordion: null,
    id: { default: Ee() },
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "modelValue")), n = r(s(a, "toggle")), u = r(s(a, "visible")), f = r(s(a, "isNav")), c = W(), v = W(), p = i(() => ({
      show: l.value,
      "navbar-collapse": f.value
    })), B = () => t("update:modelValue", !1);
    return ce(
      () => l.value,
      (m) => {
        var $, V;
        m ? ($ = v.value) == null || $.show() : (V = v.value) == null || V.hide();
      }
    ), ce(
      () => u.value,
      (m) => {
        var $, V;
        m ? (t("update:modelValue", !!m), ($ = v.value) == null || $.show()) : (t("update:modelValue", !!m), (V = v.value) == null || V.hide());
      }
    ), Be(c, "show.bs.collapse", () => {
      t("show"), t("update:modelValue", !0);
    }), Be(c, "hide.bs.collapse", () => {
      t("hide"), t("update:modelValue", !1);
    }), Be(c, "shown.bs.collapse", () => t("shown")), Be(c, "hidden.bs.collapse", () => t("hidden")), $e(() => {
      var m;
      v.value = new en(c.value, {
        parent: a.accordion ? `#${a.accordion}` : void 0,
        toggle: n.value
      }), (u.value || l.value) && (t("update:modelValue", !0), (m = v.value) == null || m.show());
    }), (m, $) => (d(), O(Z(e.tag), {
      id: e.id,
      ref_key: "element",
      ref: c,
      class: F(["collapse", o(p)]),
      "data-bs-parent": e.accordion || null,
      "is-nav": o(f)
    }, {
      default: D(() => [
        h(m.$slots, "default", {
          visible: o(l),
          close: B
        })
      ]),
      _: 3
    }, 8, ["id", "class", "data-bs-parent", "is-nav"]));
  }
}), En = {
  mounted(e, t) {
    let a = t.value;
    Object.keys(t.modifiers).length > 0 && ([a] = Object.keys(t.modifiers)), e.setAttribute("data-bs-toggle", "modal"), e.setAttribute("data-bs-target", `#${a}`);
  }
}, Dn = {
  mounted(e, t) {
    let a = "right";
    const l = [];
    t.modifiers.left ? a = "left" : t.modifiers.right ? a = "right" : t.modifiers.bottom ? a = "bottom" : t.modifiers.top && (a = "top"), t.modifiers.manual ? l.push("manual") : (t.modifiers.click && l.push("click"), t.modifiers.hover && l.push("hover"), t.modifiers.focus && l.push("focus")), e.setAttribute("data-bs-toggle", "popover"), new Ft(e, {
      trigger: l.length === 0 ? "click" : l.join(" "),
      placement: a,
      content: t.value,
      html: t.modifiers.html
    });
  },
  unmounted(e) {
    const t = Ft.getInstance(e);
    t == null || t.dispose();
  }
}, Hn = (e) => {
  if (e.classList.contains("offcanvas"))
    return "offcanvas";
  if (e.classList.contains("collapse"))
    return "collapse";
  throw Error("Couldn't resolve toggle type");
}, Rn = (e, t) => {
  const { modifiers: a, arg: l, value: n } = e, u = Object.keys(a || {}), f = typeof n == "string" ? n.split(dt) : n;
  if (In(t.tagName, "a")) {
    const c = Kt(t, "href") || "";
    fn.test(c) && u.push(c.replace(cn, ""));
  }
  return Array.prototype.concat.apply([], [l, f]).forEach((c) => typeof c == "string" && u.push(c)), u.filter((c, v, p) => c && p.indexOf(c) === v);
}, Yt = {
  mounted(e, t) {
    const a = Rn(t, e), l = [];
    let n = "data-bs-target";
    e.tagName === "a" && (n = "href");
    for (let u = 0; u < a.length; u++) {
      const f = a[u], c = document.getElementById(f);
      c && (e.setAttribute("data-bs-toggle", Hn(c)), l.push(`#${f}`));
    }
    l.length > 0 && e.setAttribute(n, l.join(","));
  }
}, qn = (e, t) => {
  if (t != null && t.trigger)
    return t.trigger;
  if (e.manual)
    return "manual";
  const a = [];
  return e.click && a.push("click"), e.hover && a.push("hover"), e.focus && a.push("focus"), a.length > 0 ? a.join(" ") : "hover focus";
}, Mn = (e, t) => t != null && t.placement ? t.placement : e.left ? "left" : e.right ? "right" : e.bottom ? "bottom" : "top", jn = (e) => e != null && e.delay ? e.delay : 0, sa = (e) => typeof e > "u" ? (console.warn(
  "Review tooltip directive usage. Some uses are not defining a title in root component or a value like `v-b-tooltip='{title: \"my title\"}'` nor `v-b-tooltip=\"'my title'\"` to define a title"
), "") : typeof e == "object" ? e == null ? void 0 : e.title : e, Gn = {
  beforeMount(e, t) {
    e.setAttribute("data-bs-toggle", "tooltip"), e.getAttribute("title") || e.setAttribute("title", sa(t.value).toString());
    const a = /<("[^"]*"|'[^']*'|[^'">])*>/.test(e.title), l = qn(t.modifiers, t.value), n = Mn(t.modifiers, t.value), u = jn(t.value), f = e.getAttribute("title");
    new Vt(e, {
      trigger: l,
      placement: n,
      delay: u,
      html: a
    }), f && e.setAttribute("data-bs-original-title", f);
  },
  updated(e, t) {
    e.getAttribute("title") || e.setAttribute("title", sa(t.value).toString());
    const a = e.getAttribute("title"), l = e.getAttribute("data-bs-original-title"), n = Vt.getInstance(e);
    e.removeAttribute("title"), a && a !== l && (n == null || n.setContent({ ".tooltip-inner": a }), e.setAttribute("data-bs-original-title", a));
  },
  unmounted(e) {
    const t = Vt.getInstance(e);
    t == null || t.dispose();
  }
}, ct = /* @__PURE__ */ new Map(), nl = (e) => {
  if (ct.has(e)) {
    const t = ct.get(e);
    t && t.stop && t.stop(), ct.delete(e);
  }
}, ia = (e, t) => {
  const a = {
    margin: "0px",
    once: !1,
    callback: t.value
  };
  Object.keys(t.modifiers).forEach((n) => {
    Number.isInteger(n) ? a.margin = `${n}px` : n.toLowerCase() === "once" && (a.once = !0);
  }), nl(e);
  const l = new Wn(
    e,
    a.margin,
    a.once,
    a.callback,
    t.instance
  );
  ct.set(e, l);
}, Un = {
  beforeMount(e, t) {
    ia(e, t);
  },
  updated(e, t) {
    ia(e, t);
  },
  unmounted(e) {
    nl(e);
  }
};
class Wn {
  constructor(t, a, l, n, u) {
    be(this, "element");
    be(this, "margin");
    be(this, "once");
    be(this, "callback");
    be(this, "instance");
    be(this, "observer");
    be(this, "doneOnce");
    be(this, "visible");
    this.element = t, this.margin = a, this.once = l, this.callback = n, this.instance = u, this.createObserver();
  }
  createObserver() {
    if (this.observer && this.stop(), !(this.doneOnce || typeof this.callback != "function")) {
      try {
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          root: null,
          rootMargin: this.margin,
          threshold: 0
        });
      } catch {
        console.error("Intersection Observer not supported"), this.doneOnce = !0, this.observer = void 0, this.callback(null);
        return;
      }
      this.instance.$nextTick(() => {
        this.observer && this.observer.observe(this.element);
      });
    }
  }
  handler(t) {
    const [a] = t, l = Boolean(a.isIntersecting || a.intersectionRatio > 0);
    l !== this.visible && (this.visible = l, this.callback(l), this.once && this.visible && (this.doneOnce = !0, this.stop()));
  }
  stop() {
    this.observer && this.observer.disconnect(), this.observer = null;
  }
}
const Kn = {
  mounted(e, t) {
    t.value !== !1 && e.focus();
  }
}, Xn = {
  BModal: En,
  BPopover: Dn,
  BToggle: Yt,
  BTooltip: Gn,
  BVisible: Un,
  focus: Kn
}, Jn = { class: "accordion-item" }, Yn = ["id"], Zn = ["aria-expanded", "aria-controls"], Qn = { class: "accordion-body" }, eo = /* @__PURE__ */ A({
  __name: "BAccordionItem",
  props: {
    id: null,
    title: null,
    visible: { default: !1 }
  },
  setup(e) {
    const t = e, a = He(al, ""), l = ke(s(t, "id"), "accordion_item"), n = r(s(t, "visible"));
    return (u, f) => (d(), g("div", Jn, [
      M("h2", {
        id: `${o(l)}heading`,
        class: "accordion-header"
      }, [
        Ye((d(), g("button", {
          class: F(["accordion-button", { collapsed: !o(n) }]),
          type: "button",
          "aria-expanded": o(n) ? "true" : "false",
          "aria-controls": o(l)
        }, [
          h(u.$slots, "title", {}, () => [
            ee(G(e.title), 1)
          ])
        ], 10, Zn)), [
          [o(Yt), void 0, o(l)]
        ])
      ], 8, Yn),
      fe(ll, {
        id: o(l),
        class: "accordion-collapse",
        visible: e.visible,
        accordion: o(a),
        "aria-labelledby": `heading${o(l)}`
      }, {
        default: D(() => [
          M("div", Qn, [
            h(u.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["id", "visible", "accordion", "aria-labelledby"])
    ]));
  }
}), to = ["type", "disabled", "aria-label"], Ze = /* @__PURE__ */ A({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { default: !1 },
    white: { default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "disabled")), n = r(s(a, "white")), u = i(() => ({
      "btn-close-white": n.value
    }));
    return (f, c) => (d(), g("button", {
      type: e.type,
      class: F(["btn-close", o(u)]),
      disabled: o(l),
      "aria-label": e.ariaLabel,
      onClick: c[0] || (c[0] = (v) => t("click", v))
    }, null, 10, to));
  }
}), ao = /* @__PURE__ */ A({
  __name: "BAlert",
  props: {
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    show: { default: !1 },
    variant: { default: "info" }
  },
  emits: ["closed", "close-count-down", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "dismissible"));
    r(s(a, "fade"));
    const n = r(s(a, "show")), u = Ce();
    let f;
    const c = W(null), v = W(), p = i(() => !Ve(u.close)), B = i(() => !!a.modelValue || n.value), m = i(() => [
      [`alert-${a.variant}`],
      {
        show: !!a.modelValue,
        "alert-dismissible": l.value,
        fade: !!a.modelValue
      }
    ]), $ = (C) => {
      if (typeof C == "boolean")
        return 0;
      const q = Le(C, 0);
      return q > 0 ? q : 0;
    }, V = W(0), T = i(() => a.modelValue === !0 ? !0 : a.modelValue === !1 || Le(a.modelValue, 0) < 1 ? !1 : !!a.modelValue), b = () => {
      f !== void 0 && (clearTimeout(f), f = void 0);
    }, k = () => {
      V.value = $(a.modelValue), (T.value || n.value) && !v.value && (v.value = new tn(c.value));
    }, y = () => {
      typeof a.modelValue == "boolean" ? t("update:modelValue", !1) : t("update:modelValue", 0), t("closed");
    };
    return ce(() => a.modelValue, k), ce(() => n.value, k), ce(V, (C) => {
      b(), typeof a.modelValue != "boolean" && (t("close-count-down", C), C === 0 && a.modelValue > 0 && t("closed"), a.modelValue !== C && t("update:modelValue", C), C > 0 && (f = setTimeout(() => {
        V.value--;
      }, 1e3)));
    }), V.value = $(a.modelValue), jt(() => {
      var C;
      b(), (C = v.value) == null || C.dispose(), v.value = void 0;
    }), (C, q) => o(B) ? (d(), g("div", {
      key: 0,
      ref_key: "element",
      ref: c,
      class: F(["alert", o(m)]),
      role: "alert"
    }, [
      h(C.$slots, "default"),
      o(l) ? (d(), g(oe, { key: 0 }, [
        o(p) ? (d(), g("button", {
          key: 0,
          type: "button",
          "data-bs-dismiss": "alert",
          onClick: y
        }, [
          h(C.$slots, "close")
        ])) : (d(), O(Ze, {
          key: 1,
          "aria-label": e.dismissLabel,
          "data-bs-dismiss": "alert",
          onClick: y
        }, null, 8, ["aria-label"]))
      ], 64)) : U("", !0)
    ], 2)) : U("", !0);
  }
}), ol = Symbol(), lo = /* @__PURE__ */ A({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: null,
    square: { default: !1 },
    tag: { default: "div" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "square")), l = i(() => zt(t.size)), n = i(
      () => Math.min(Math.max(f(t.overlap), 0), 1) / 2
    ), u = i(() => {
      const c = l.value ? `calc(${l.value} * ${n.value})` : null;
      return c ? { paddingLeft: c, paddingRight: c } : {};
    }), f = (c) => typeof c == "string" && Pa(c) ? tt(c, 0) : c || 0;
    return Je(ol, {
      overlapScale: n,
      size: t.size,
      square: a.value,
      rounded: t.rounded,
      variant: t.variant
    }), (c, v) => (d(), O(Z(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: D(() => [
        M("div", {
          class: "b-avatar-group-inner",
          style: Pe(o(u))
        }, [
          h(c.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), no = {
  key: 0,
  class: "b-avatar-custom"
}, oo = {
  key: 1,
  class: "b-avatar-img"
}, so = ["src", "alt"], zt = (e) => {
  const t = typeof e == "string" && Pa(e) ? tt(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, io = /* @__PURE__ */ A({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: null,
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: null,
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: null,
    rounded: { type: [Boolean, String], default: "circle" },
    size: null,
    square: { default: !1 },
    src: null,
    text: null,
    textVariant: null,
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = He(ol, null), u = ["sm", null, "lg"], f = 0.4, c = f * 0.7, v = r(s(a, "badgeLeft")), p = r(s(a, "badgeTop")), B = r(s(a, "button")), m = r(s(a, "disabled")), $ = r(s(a, "square")), V = i(() => !Ve(l.default)), T = i(() => !Ve(l.badge)), b = i(() => !!a.badge || a.badge === "" || T.value), k = i(
      () => n != null && n.size ? n.size : zt(a.size)
    ), y = i(
      () => n != null && n.variant ? n.variant : a.variant
    ), C = i(
      () => n != null && n.rounded ? n.rounded : a.rounded
    ), q = i(() => ({
      type: B.value ? a.buttonType : void 0,
      "aria-label": a.ariaLabel || null,
      disabled: m.value || null
    })), E = i(() => [`bg-${a.badgeVariant}`]), I = i(() => a.badge === !0 ? "" : a.badge), _ = i(() => [[`text-${ie(a.badgeVariant)}`]]), z = i(() => ({
      [`b-avatar-${a.size}`]: !!a.size && u.indexOf(zt(a.size)) !== -1,
      [`bg-${y.value}`]: !!y.value,
      badge: !B.value && y.value && V.value,
      rounded: C.value === "" || C.value === !0,
      ["rounded-circle"]: !$.value && C.value === "circle",
      ["rounded-0"]: $.value || C.value === "0",
      ["rounded-1"]: !$.value && C.value === "sm",
      ["rounded-3"]: !$.value && C.value === "lg",
      ["rounded-top"]: !$.value && C.value === "top",
      ["rounded-bottom"]: !$.value && C.value === "bottom",
      ["rounded-start"]: !$.value && C.value === "left",
      ["rounded-end"]: !$.value && C.value === "right",
      btn: B.value,
      [`btn-${y.value}`]: B.value ? !!y.value : !1
    })), x = i(() => [
      [`text-${a.textVariant || ie(y.value)}`]
    ]), w = i(() => {
      const ae = a.badgeOffset || "0px";
      return {
        fontSize: (u.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${c})` : "") || "",
        top: p.value ? ae : "",
        bottom: p.value ? "" : ae,
        left: v.value ? ae : "",
        right: v.value ? "" : ae
      };
    }), P = i(() => {
      const ae = u.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${f})` : null;
      return ae ? { fontSize: ae } : {};
    }), L = i(() => {
      var ye;
      const ae = ((ye = n == null ? void 0 : n.overlapScale) == null ? void 0 : ye.value) || 0, ge = k.value && ae ? `calc(${k.value} * -${ae})` : null;
      return ge ? { marginLeft: ge, marginRight: ge } : {};
    }), te = i(() => B.value ? "button" : "span"), Q = i(() => ({
      ...L.value,
      width: k.value,
      height: k.value
    })), ie = (ae) => ae === "light" || ae === "warning" ? "dark" : "light", K = (ae) => {
      !m.value && B.value && t("click", ae);
    }, me = (ae) => t("img-error", ae);
    return (ae, ge) => (d(), O(Z(o(te)), J({
      class: ["b-avatar", o(z)],
      style: o(Q)
    }, o(q), { onClick: K }), {
      default: D(() => [
        o(V) ? (d(), g("span", no, [
          h(ae.$slots, "default")
        ])) : e.src ? (d(), g("span", oo, [
          M("img", {
            src: e.src,
            alt: e.alt,
            onError: me
          }, null, 40, so)
        ])) : e.text ? (d(), g("span", {
          key: 2,
          class: F(["b-avatar-text", o(x)]),
          style: Pe(o(P))
        }, G(e.text), 7)) : U("", !0),
        o(b) ? (d(), g("span", {
          key: 3,
          class: F(["b-avatar-badge", o(E)]),
          style: Pe(o(w))
        }, [
          o(T) ? h(ae.$slots, "badge", { key: 0 }) : (d(), g("span", {
            key: 1,
            class: F(o(_))
          }, G(o(I)), 3))
        ], 6)) : U("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), Ge = {
  active: { type: [Boolean, String], default: !1 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  exact: { type: [Boolean, String], default: !1 },
  exactActiveClass: { type: String, default: "router-link-exact-active" },
  href: { type: String },
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, ro = A({
  props: Ge,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = r(s(e, "active")), n = r(s(e, "append")), u = r(s(e, "disabled")), f = r(s(e, "exact")), c = r(s(e, "replace")), v = jl(), p = W(null), B = i(() => {
      const b = e.routerComponentName.split("-").map((y) => y.charAt(0).toUpperCase() + y.slice(1)).join("");
      return !((v == null ? void 0 : v.appContext.app.component(b)) !== void 0) || u.value || !e.to ? "a" : e.routerComponentName;
    }), m = i(() => {
      const b = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || b;
      const k = e.to;
      if (Object.prototype.toString.call(k) === "[object Object]" && (k.path || k.query || k.hash)) {
        const y = k.path || "", C = k.query ? `?${Object.keys(k.query).map((E) => `${E}=${k.query[E]}`).join("=")}` : "", q = !k.hash || k.hash.charAt(0) === "#" ? k.hash || "" : `#${k.hash}`;
        return `${y}${C}${q}` || b;
      }
      return b;
    }), $ = i(() => ({
      to: e.to,
      href: m.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: u.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": u.value ? "true" : null
    }));
    return {
      computedLinkClasses: i(() => ({
        active: l.value,
        disabled: u.value
      })),
      tag: B,
      routerAttr: $,
      link: p,
      clicked: (b) => {
        if (u.value) {
          b.preventDefault(), b.stopImmediatePropagation();
          return;
        }
        t("click", b);
      },
      activeBoolean: l,
      appendBoolean: n,
      disabledBoolean: u,
      replaceBoolean: c,
      exactBoolean: f
    };
  }
}), _e = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, n] of t)
    a[l] = n;
  return a;
};
function uo(e, t, a, l, n, u) {
  return e.tag === "router-link" ? (d(), O(Z(e.tag), J({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: D(({ href: f, navigate: c, isActive: v, isExactActive: p }) => [
      (d(), O(Z(e.routerTag), J({
        ref: "link",
        href: f,
        class: [
          (v || e.activeBoolean) && e.activeClass,
          (p || e.exactBoolean) && e.exactActiveClass
        ]
      }, e.$attrs, { onClick: c }), {
        default: D(() => [
          h(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (d(), O(Z(e.tag), J({
    key: 1,
    ref: "link",
    class: e.computedLinkClasses
  }, e.routerAttr, { onClick: e.clicked }), {
    default: D(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const Ae = /* @__PURE__ */ _e(ro, [["render", uo]]), ra = kt(Ge, ["event", "routerTag"]), co = A({
  components: { BLink: Ae },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...ra
  },
  setup(e) {
    const t = r(s(e, "pill")), a = r(s(e, "textIndicator")), l = r(s(e, "dotIndicator")), n = r(s(e, "active")), u = r(s(e, "disabled")), f = i(() => at(e)), c = i(
      () => f.value ? Ae : e.tag
    ), v = i(() => [
      [`bg-${e.variant}`],
      {
        active: n.value,
        disabled: u.value,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": t.value,
        "position-absolute top-0 start-100 translate-middle": a.value || l.value,
        "p-2 border border-light rounded-circle": l.value,
        "text-decoration-none": f.value
      }
    ]), p = i(
      () => f.value ? Xt(e, ra) : {}
    );
    return {
      computedClasses: v,
      computedLinkProps: p,
      computedTag: c
    };
  }
});
function fo(e, t, a, l, n, u) {
  return d(), O(Z(e.computedTag), J({
    class: ["badge", e.computedClasses]
  }, e.computedLinkProps), {
    default: D(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const vo = /* @__PURE__ */ _e(co, [["render", fo]]), ua = kt(Ge, ["event", "routerTag"]), mo = A({
  components: { BLink: Ae },
  props: {
    ...ua,
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, required: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = r(s(e, "active")), l = r(s(e, "disabled")), n = i(() => ({
      active: a.value
    })), u = i(
      () => a.value ? "span" : Ae
    ), f = i(
      () => a.value ? e.ariaCurrent : void 0
    );
    return {
      computedLinkProps: i(
        () => u.value !== "span" ? Xt(e, ua) : {}
      ),
      computedClasses: n,
      computedTag: u,
      computedAriaCurrent: f,
      clicked: (p) => {
        if (l.value || a.value) {
          p.preventDefault(), p.stopImmediatePropagation();
          return;
        }
        l.value || t("click", p);
      }
    };
  }
});
function bo(e, t, a, l, n, u) {
  return d(), g("li", {
    class: F(["breadcrumb-item", e.computedClasses])
  }, [
    (d(), O(Z(e.computedTag), J({ "aria-current": e.computedAriaCurrent }, e.computedLinkProps, { onClick: e.clicked }), {
      default: D(() => [
        h(e.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const sl = /* @__PURE__ */ _e(mo, [["render", bo]]), go = { "aria-label": "breadcrumb" }, po = { class: "breadcrumb" }, ho = /* @__PURE__ */ A({
  __name: "BBreadcrumb",
  props: {
    items: null
  },
  setup(e) {
    const t = e, a = Ln(), l = i(() => {
      const n = t.items || (a == null ? void 0 : a.items) || [];
      let u = !1;
      return n.map((c, v) => (typeof c == "string" && (c = { text: c }, v < n.length - 1 && (c.href = "#")), c.active && (u = !0), !c.active && !u && (c.active = v + 1 === n.length), c));
    });
    return (n, u) => (d(), g("nav", go, [
      M("ol", po, [
        h(n.$slots, "prepend"),
        (d(!0), g(oe, null, ve(o(l), (f, c) => (d(), O(sl, J({ key: c }, f), {
          default: D(() => [
            ee(G(f.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        h(n.$slots, "default"),
        h(n.$slots, "append")
      ])
    ]));
  }
}), yo = {
  key: 0,
  class: "visually-hidden"
}, Ct = /* @__PURE__ */ A({
  __name: "BSpinner",
  props: {
    label: null,
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: null
  },
  setup(e) {
    const t = e, a = Ce(), l = r(s(t, "small")), n = i(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && l.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && l.value,
      [`text-${t.variant}`]: t.variant !== void 0
    })), u = i(() => !Ve(a.label));
    return (f, c) => (d(), O(Z(e.tag), {
      class: F(o(n)),
      role: e.label || o(u) ? e.role : null,
      "aria-hidden": e.label || o(u) ? null : !0
    }, {
      default: D(() => [
        e.label || o(u) ? (d(), g("span", yo, [
          h(f.$slots, "label", {}, () => [
            ee(G(e.label), 1)
          ])
        ])) : U("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), Bo = A({
  components: { BLink: Ae, BSpinner: Ct },
  props: {
    ...Ge,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, required: !1 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: !1 },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = r(s(e, "active")), l = r(s(e, "disabled")), n = r(s(e, "pill")), u = r(s(e, "pressed")), f = r(s(e, "squared")), c = r(s(e, "loading")), v = i(() => u.value === !0), p = i(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), B = i(() => at(e)), m = i(() => e.to !== null), $ = i(
      () => e.href !== void 0 ? !1 : !p.value
    ), V = i(() => [
      [`btn-${e.variant}`],
      [`btn-${e.size}`],
      {
        active: a.value || u.value,
        "rounded-pill": n.value,
        "rounded-0": f.value,
        disabled: l.value
      }
    ]), T = i(() => ({
      "aria-disabled": $.value ? l.value : null,
      "aria-pressed": v.value ? u.value : null,
      autocomplete: v.value ? "off" : null,
      disabled: p.value ? l.value : null,
      href: e.href,
      rel: B.value ? e.rel : null,
      role: $.value || B.value ? "button" : null,
      target: B.value ? e.target : null,
      type: p.value ? e.type : null,
      to: p.value ? null : e.to,
      append: B.value ? e.append : null,
      activeClass: m.value ? e.activeClass : null,
      event: m.value ? e.event : null,
      exact: m.value ? e.exact : null,
      exactActiveClass: m.value ? e.exactActiveClass : null,
      replace: m.value ? e.replace : null,
      routerComponentName: m.value ? e.routerComponentName : null,
      routerTag: m.value ? e.routerTag : null
    })), b = i(
      () => m.value ? Ae : e.href ? "a" : e.tag
    );
    return {
      computedClasses: V,
      computedAttrs: T,
      computedTag: b,
      clicked: (y) => {
        if (l.value) {
          y.preventDefault(), y.stopPropagation();
          return;
        }
        t("click", y), v.value && t("update:pressed", !u.value);
      },
      loadingBoolean: c
    };
  }
});
function $o(e, t, a, l, n, u) {
  const f = xa("b-spinner");
  return d(), O(Z(e.computedTag), J({
    class: ["btn", e.computedClasses]
  }, e.computedAttrs, { onClick: e.clicked }), {
    default: D(() => [
      e.loadingBoolean ? (d(), g("div", {
        key: 0,
        class: F(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        h(e.$slots, "loading", {}, () => [
          fe(f, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : U("", !0),
      M("div", {
        class: F(["btn-content", { "btn-loading-fill": e.loadingBoolean && e.loadingMode === "fill" }])
      }, [
        h(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const lt = /* @__PURE__ */ _e(Bo, [["render", $o]]), ko = /* @__PURE__ */ A({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: null,
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "vertical")), l = i(() => ({
      "btn-group": !a.value,
      [`btn-group-${t.size}`]: t.size !== void 0,
      "btn-group-vertical": a.value
    }));
    return (n, u) => (d(), O(Z(e.tag), {
      class: F(o(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: D(() => [
        h(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), Co = ["role", "aria-label"], So = /* @__PURE__ */ A({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const a = r(s(e, "justify")), l = i(() => ({
      "justify-content-between": a.value
    }));
    return (n, u) => (d(), g("div", {
      class: F([o(l), "btn-toolbar"]),
      role: e.role,
      "aria-label": e.ariaLabel
    }, [
      h(n.$slots, "default")
    ], 10, Co));
  }
}), Zt = /* @__PURE__ */ A({
  __name: "BImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    thumbnail: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', n = r(s(a, "lazy")), u = r(s(a, "blank")), f = r(s(a, "block")), c = r(s(a, "center")), v = r(s(a, "fluid")), p = r(s(a, "fluidGrow")), B = r(s(a, "left")), m = r(s(a, "start")), $ = r(s(a, "right")), V = r(s(a, "end")), T = r(s(a, "thumbnail")), b = i(
      () => typeof a.srcset == "string" ? a.srcset.split(",").filter((z) => z).join(",") : Array.isArray(a.srcset) ? a.srcset.filter((z) => z).join(",") : void 0
    ), k = i(
      () => typeof a.sizes == "string" ? a.sizes.split(",").filter((z) => z).join(",") : Array.isArray(a.sizes) ? a.sizes.filter((z) => z).join(",") : void 0
    ), y = i(() => {
      const z = (P) => P === void 0 ? void 0 : typeof P == "number" ? P : Number.parseInt(P, 10) || void 0, x = z(a.width), w = z(a.height);
      if (u.value) {
        if (x !== void 0 && w === void 0)
          return { height: x, width: x };
        if (x === void 0 && w !== void 0)
          return { height: w, width: w };
        if (x === void 0 && w === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: x,
        height: w
      };
    }), C = i(
      () => _(y.value.width, y.value.height, a.blankColor)
    ), q = i(() => ({
      src: u.value ? C.value : a.src,
      alt: a.alt,
      width: y.value.width || void 0,
      height: y.value.height || void 0,
      srcset: u.value ? void 0 : b.value,
      sizes: u.value ? void 0 : k.value,
      loading: n.value ? "lazy" : "eager"
    })), E = i(
      () => B.value || m.value ? "float-start" : $.value || V.value ? "float-end" : c.value ? "mx-auto" : void 0
    ), I = i(() => ({
      "img-thumbnail": T.value,
      "img-fluid": v.value || p.value,
      "w-100": p.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${E.value}`]: E.value !== void 0,
      "d-block": f.value || c.value
    })), _ = (z, x, w) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      l.replace("%{w}", String(z)).replace("%{h}", String(x)).replace("%{f}", w)
    )}`;
    return (z, x) => (d(), g("img", J({ class: o(I) }, o(q), {
      onLoad: x[0] || (x[0] = (w) => t("load", w))
    }), null, 16));
  }
}), pt = /* @__PURE__ */ A({
  __name: "BCardImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: null,
    bottom: { default: !1 },
    lazy: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    top: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "bottom")), n = r(s(a, "end")), u = r(s(a, "left")), f = r(s(a, "right")), c = r(s(a, "start")), v = r(s(a, "top")), p = i(
      () => v.value ? "card-img-top" : f.value || n.value ? "card-img-right" : l.value ? "card-img-bottom" : u.value || c.value ? "card-img-left" : "card-img"
    ), B = i(() => ({
      alt: a.alt,
      height: a.height,
      src: a.src,
      lazy: a.lazy,
      width: a.width,
      blank: a.blank,
      blankColor: a.blankColor,
      sizes: a.sizes,
      srcset: a.srcset
    }));
    return (m, $) => (d(), O(Zt, J({ class: o(p) }, o(B), {
      onLoad: $[0] || ($[0] = (V) => t("load", V))
    }), null, 16, ["class"]));
  }
}), wo = ["innerHTML"], il = /* @__PURE__ */ A({
  __name: "BCardHeadFoot",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0
    }));
    return (l, n) => (d(), O(Z(e.tag), {
      class: F(o(a))
    }, {
      default: D(() => [
        e.html ? (d(), g("div", {
          key: 0,
          innerHTML: e.html
        }, null, 8, wo)) : h(l.$slots, "default", { key: 1 }, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), rl = /* @__PURE__ */ A({
  __name: "BCardHeader",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), O(il, J({ class: "card-header" }, t), {
      default: D(() => [
        h(a.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ul = /* @__PURE__ */ A({
  __name: "BCardTitle",
  props: {
    text: null,
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (d(), O(Z(e.tag), { class: "card-title" }, {
      default: D(() => [
        h(t.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), dl = /* @__PURE__ */ A({
  __name: "BCardSubtitle",
  props: {
    text: null,
    tag: { default: "h6" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = i(() => [`text-${t.textVariant}`]);
    return (l, n) => (d(), O(Z(e.tag), {
      class: F(["card-subtitle mb-2", o(a)])
    }, {
      default: D(() => [
        h(l.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), cl = /* @__PURE__ */ A({
  __name: "BCardBody",
  props: {
    bodyBgVariant: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h4" },
    subtitleTextVariant: null,
    title: null,
    titleTag: { default: "h4" },
    text: null
  },
  setup(e) {
    const t = e, a = Ce(), l = r(s(t, "overlay")), n = i(() => !Ve(a.title)), u = i(() => !Ve(a.subtitle)), f = i(() => ({
      "card-img-overlay": l.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (c, v) => (d(), O(Z(e.bodyTag), {
      class: F(["card-body", o(f)])
    }, {
      default: D(() => [
        !!e.title || o(n) ? (d(), O(ul, {
          key: 0,
          tag: e.titleTag
        }, {
          default: D(() => [
            h(c.$slots, "title", {}, () => [
              ee(G(e.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : U("", !0),
        !!e.subtitle || o(u) ? (d(), O(dl, {
          key: 1,
          tag: e.subtitleTag,
          "text-variant": e.subtitleTextVariant
        }, {
          default: D(() => [
            h(c.$slots, "subtitle", {}, () => [
              ee(G(e.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : U("", !0),
        h(c.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), fl = /* @__PURE__ */ A({
  __name: "BCardFooter",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), O(il, J({ class: "card-footer" }, t), {
      default: D(() => [
        h(a.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), vl = /* @__PURE__ */ A({
  __name: "BCard",
  props: {
    align: null,
    bgVariant: null,
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    borderVariant: null,
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: null,
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: null,
    imgAlt: null,
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: null,
    imgLeft: { default: !1 },
    imgRight: { default: !1 },
    imgSrc: null,
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: null,
    noBody: { default: !1 },
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: null,
    title: null,
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, a = Ce(), l = r(s(t, "imgBottom")), n = r(s(t, "imgEnd")), u = r(s(t, "imgLeft")), f = r(s(t, "imgRight")), c = r(s(t, "imgStart")), v = r(s(t, "noBody")), p = i(() => !Ve(a.header)), B = i(() => !Ve(a.footer)), m = i(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": u.value || c.value,
      "flex-row-reverse": n.value || f.value
    })), $ = i(() => ({
      bgVariant: t.headerBgVariant,
      borderVariant: t.headerBorderVariant,
      html: t.headerHtml,
      tag: t.headerTag,
      textVariant: t.headerTextVariant
    })), V = i(() => ({
      overlay: t.overlay,
      bodyBgVariant: t.bodyBgVariant,
      bodyTag: t.bodyTag,
      bodyTextVariant: t.bodyTextVariant,
      subtitle: t.subtitle,
      subtitleTag: t.subtitleTag,
      subtitleTextVariant: t.subtitleTextVariant,
      title: t.title,
      titleTag: t.titleTag
    })), T = i(() => ({
      bgVariant: t.footerBgVariant,
      borderVariant: t.footerBorderVariant,
      html: t.footerHtml,
      tag: t.footerTag,
      textVariant: t.footerTextVariant
    })), b = i(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      left: t.imgLeft,
      right: t.imgRight,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (k, y) => (d(), O(Z(e.tag), {
      class: F(["card", o(m)])
    }, {
      default: D(() => [
        o(l) ? U("", !0) : h(k.$slots, "img", { key: 0 }, () => [
          e.imgSrc ? (d(), O(pt, he(J({ key: 0 }, o(b))), null, 16)) : U("", !0)
        ]),
        e.header || o(p) || e.headerHtml ? (d(), O(rl, J({ key: 1 }, o($), { class: e.headerClass }), {
          default: D(() => [
            h(k.$slots, "header", {}, () => [
              ee(G(e.header), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : U("", !0),
        o(v) ? h(k.$slots, "default", { key: 3 }, () => [
          ee(G(e.bodyText), 1)
        ]) : (d(), O(cl, J({ key: 2 }, o(V), { class: e.bodyClass }), {
          default: D(() => [
            h(k.$slots, "default", {}, () => [
              ee(G(e.bodyText), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])),
        e.footer || o(B) || e.footerHtml ? (d(), O(fl, J({ key: 4 }, o(T), { class: e.footerClass }), {
          default: D(() => [
            h(k.$slots, "footer", {}, () => [
              ee(G(e.footer), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : U("", !0),
        o(l) ? h(k.$slots, "img", { key: 5 }, () => [
          e.imgSrc ? (d(), O(pt, he(J({ key: 0 }, o(b))), null, 16)) : U("", !0)
        ]) : U("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), To = /* @__PURE__ */ A({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(s(t, "columns")), l = r(s(t, "deck")), n = i(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    ), u = i(() => [n.value]);
    return (f, c) => (d(), O(Z(e.tag), {
      class: F(o(u))
    }, {
      default: D(() => [
        h(f.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), _o = /* @__PURE__ */ A({
  __name: "BCardText",
  props: {
    text: null,
    tag: { default: "p" }
  },
  setup(e) {
    return (t, a) => (d(), O(Z(e.tag), { class: "card-text" }, {
      default: D(() => [
        h(t.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Vo = ["id"], Ao = {
  key: 0,
  class: "carousel-indicators"
}, xo = ["data-bs-target", "data-bs-slide-to", "aria-label"], Io = { class: "carousel-inner" }, Fo = ["data-bs-target"], Po = /* @__PURE__ */ M("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), Oo = { class: "visually-hidden" }, Lo = ["data-bs-target"], zo = /* @__PURE__ */ M("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), No = { class: "visually-hidden" }, ml = Symbol(), Eo = /* @__PURE__ */ A({
  __name: "BCarousel",
  props: {
    startingSlide: { default: 0 },
    id: null,
    imgHeight: null,
    imgWidth: null,
    background: null,
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" }
  },
  emits: ["sliding-start", "sliding-end"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = ke(s(a, "id"), "carousel"), u = r(s(a, "controls")), f = r(s(a, "indicators")), c = r(s(a, "noTouch"));
    r(s(a, "noWrap"));
    const v = W(), p = W(), B = W([]);
    return Be(v, "slide.bs.carousel", (m) => t("sliding-start", m)), Be(v, "slid.bs.carousel", (m) => t("sliding-end", m)), $e(() => {
      p.value = new an(v.value, {
        wrap: !c.value,
        interval: a.interval,
        touch: !c.value
      }), l.default && (B.value = l.default().filter((m) => {
        var $;
        return (($ = m.type) == null ? void 0 : $.__name) === "BCarouselSlide";
      }));
    }), Je(ml, {
      background: a.background,
      width: a.imgWidth,
      height: a.imgHeight
    }), (m, $) => (d(), g("div", {
      id: o(n),
      ref_key: "element",
      ref: v,
      class: "carousel slide",
      "data-bs-ride": "carousel"
    }, [
      o(f) ? (d(), g("div", Ao, [
        (d(!0), g(oe, null, ve(B.value, (V, T) => (d(), g("button", {
          key: T,
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide-to": T,
          class: F(T === e.startingSlide ? "active" : ""),
          "aria-current": "true",
          "aria-label": `${e.indicatorsButtonLabel} ${T}`
        }, null, 10, xo))), 128))
      ])) : U("", !0),
      M("div", Io, [
        h(m.$slots, "default")
      ]),
      o(u) ? (d(), g(oe, { key: 1 }, [
        M("button", {
          class: "carousel-control-prev",
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide": "prev"
        }, [
          Po,
          M("span", Oo, G(e.controlsPrevText), 1)
        ], 8, Fo),
        M("button", {
          class: "carousel-control-next",
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide": "next"
        }, [
          zo,
          M("span", No, G(e.controlsNextText), 1)
        ], 8, Lo)
      ], 64)) : U("", !0)
    ], 8, Vo));
  }
}), Do = ["data-bs-interval"], Ho = ["innerHTML"], Ro = { key: 1 }, qo = ["innerHTML"], Mo = { key: 1 }, jo = /* @__PURE__ */ A({
  __name: "BCarouselSlide",
  props: {
    imgSrc: null,
    imgHeight: null,
    imgWidth: null,
    interval: null,
    active: { default: !1 },
    background: null,
    caption: null,
    captionHtml: null,
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: null,
    id: null,
    imgAlt: null,
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: null,
    textHtml: null,
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = Ce(), l = He(ml, {}), n = r(s(t, "active")), u = i(() => !Ve(a.default)), f = i(() => ({
      background: `${t.background || l.background || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), c = i(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    })), v = i(() => l.width), p = i(() => l.height);
    return (B, m) => (d(), g("div", {
      class: F(["carousel-item", { active: o(n) }]),
      "data-bs-interval": e.interval,
      style: Pe(o(f))
    }, [
      h(B.$slots, "img", {}, () => [
        fe(Zt, {
          class: "d-block w-100",
          alt: e.imgAlt,
          src: e.imgSrc,
          width: e.imgWidth || o(v),
          height: e.imgHeight || o(p),
          blank: e.imgBlank,
          "blank-color": e.imgBlankColor
        }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
      ]),
      e.caption || e.captionHtml || e.text || e.textHtml || o(u) ? (d(), O(Z(e.contentTag), {
        key: 0,
        class: F(["carousel-caption", o(c)])
      }, {
        default: D(() => [
          e.caption || e.captionHtml ? (d(), O(Z(e.captionTag), { key: 0 }, {
            default: D(() => [
              e.captionHtml ? (d(), g("span", {
                key: 0,
                innerHTML: e.captionHtml
              }, null, 8, Ho)) : (d(), g("span", Ro, G(e.caption), 1))
            ]),
            _: 1
          })) : U("", !0),
          e.text || e.textHtml ? (d(), O(Z(e.textTag), { key: 1 }, {
            default: D(() => [
              e.textHtml ? (d(), g("span", {
                key: 0,
                innerHTML: e.textHtml
              }, null, 8, qo)) : (d(), g("span", Mo, G(e.text), 1))
            ]),
            _: 1
          })) : U("", !0),
          h(B.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : U("", !0)
    ], 14, Do));
  }
}), da = Bt("", [], { type: [Boolean, String, Number], default: !1 }), ca = Bt("offset", [""], { type: [String, Number], default: null }), fa = Bt("order", [""], { type: [String, Number], default: null }), Go = A({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    cols: { type: [String, Number], default: null },
    ...da,
    offset: { type: [String, Number], default: null },
    ...ca,
    order: { type: [String, Number], default: null },
    ...fa,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = [
      { content: da, propPrefix: "cols", classPrefix: "col" },
      { content: ca, propPrefix: "offset" },
      { content: fa, propPrefix: "order" }
    ], a = r(s(e, "col")), l = i(
      () => t.flatMap((u) => ja(e, u.content, u.propPrefix, u.classPrefix))
    );
    return {
      computedClasses: i(() => [
        l.value,
        {
          col: a.value || !l.value.some((u) => /^col-/.test(u)) && !e.cols,
          [`col-${e.cols}`]: !!e.cols,
          [`offset-${e.offset}`]: !!e.offset,
          [`order-${e.order}`]: !!e.order,
          [`align-self-${e.alignSelf}`]: !!e.alignSelf
        }
      ])
    };
  }
});
function Uo(e, t, a, l, n, u) {
  return d(), O(Z(e.tag), {
    class: F(e.computedClasses)
  }, {
    default: D(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const et = /* @__PURE__ */ _e(Go, [["render", Uo]]), We = {
  autoHide: !0,
  delay: 5e3,
  noCloseButton: !1,
  pos: "top-right",
  value: !0
};
class va {
  constructor(t) {
    be(this, "vm");
    be(this, "containerPositions");
    Gl(t) ? this.vm = t : this.vm = De(t), this.containerPositions = i(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? i(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : i(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    var t;
    return (t = this.vm.root) != null ? t : !1;
  }
  show(t, a = We) {
    const l = { id: Ee(), ...We, ...a }, n = {
      options: De(l),
      content: t
    };
    return this.vm.toasts.push(n), n;
  }
  info(t, a = We) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = We) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = We) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = We) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class Wo {
  constructor() {
    be(this, "vms");
    be(this, "rootInstance");
    be(this, "useToast", gl);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const Nt = Symbol(), bl = Symbol(), Ko = {
  container: void 0,
  toasts: [],
  root: !1
};
function Xo() {
  return He(bl);
}
function gl(e, t = Nt) {
  const a = He(Xo());
  if (!e)
    return new va(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, n = { ...Ko, ...l, ...e }, u = a.getOrCreateViewModel(n);
  return new va(u);
}
const Jo = {
  install: (e, t = {}) => {
    var a, l, n, u;
    e.provide(bl, (l = (a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) != null ? l : Nt), e.provide((u = (n = t == null ? void 0 : t.BToast) == null ? void 0 : n.injectkey) != null ? u : Nt, new Wo());
  }
}, St = /* @__PURE__ */ A({
  __name: "BTransition",
  props: {
    appear: { default: !1 },
    mode: null,
    noFade: { default: !1 },
    transProps: null
  },
  setup(e) {
    const t = e, a = r(s(t, "appear")), l = r(s(t, "noFade")), n = i(() => {
      const c = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, v = {
        ...c,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return l.value ? c : v;
    }), u = i(() => ({ mode: t.mode, css: !0, ...n.value })), f = i(
      () => t.transProps !== void 0 ? {
        ...u.value,
        ...t.transProps
      } : a.value ? {
        ...u.value,
        appear: !0,
        appearActiveClass: n.value.enterActiveClass,
        appearToClass: n.value.enterToClass
      } : u.value
    );
    return (c, v) => (d(), O(Ul, he(we(o(f))), {
      default: D(() => [
        h(c.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Yo = "toast-title", ma = 1e3, pl = A({
  components: { BLink: Ae },
  props: {
    ...Ge,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String },
    body: { type: [Object, String] },
    headerClass: { type: String },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String },
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    static: { type: [Boolean, String], default: !1 },
    title: { type: String },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array },
    variant: { type: String }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    r(s(e, "animation"));
    const l = r(s(e, "isStatus")), n = r(s(e, "autoHide")), u = r(s(e, "noCloseButton")), f = r(s(e, "noFade")), c = r(s(e, "noHoverPause"));
    r(s(e, "solid")), r(s(e, "static"));
    const v = r(s(e, "modelValue")), p = W(!1), B = W(!1), m = W(!1), $ = i(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: m.value || p.value
    }));
    let V, T, b;
    const k = () => {
      typeof V > "u" || (clearTimeout(V), V = void 0);
    }, y = i(
      () => Math.max(Le(e.delay, 0), ma)
    ), C = () => {
      v.value && (T = b = 0, k(), B.value = !0, it(() => {
        m.value = !1;
      }));
    }, q = () => {
      k(), t("update:modelValue", !0), T = b = 0, B.value = !1, qe(() => {
        it(() => {
          m.value = !0;
        });
      });
    }, E = () => {
      if (!n.value || c.value || !V || b)
        return;
      const te = Date.now() - T;
      te > 0 && (k(), b = Math.max(y.value - te, ma));
    }, I = () => {
      (!n.value || c.value || !b) && (b = T = 0), _();
    };
    ce(
      () => v.value,
      (te) => {
        te ? q() : C();
      }
    );
    const _ = () => {
      k(), n.value && (V = setTimeout(C, b || y.value), T = Date.now(), b = 0);
    }, z = () => {
      p.value = !0, t("update:modelValue", !0);
    }, x = () => {
      p.value = !1, _();
    }, w = () => {
      p.value = !0;
    }, P = () => {
      p.value = !1, b = T = 0, t("update:modelValue", !1);
    };
    Wl(() => {
      k(), n.value && t("destroyed", e.id);
    }), $e(() => {
      qe(() => {
        v.value && it(() => {
          q();
        });
      });
    });
    const L = () => {
      qe(() => {
        it(() => {
          C();
        });
      });
    };
    return () => {
      const te = () => {
        const Q = [], ie = Fe(Yo, { hide: C }, a);
        ie ? Q.push(le(ie)) : e.title && Q.push(le("strong", { class: "me-auto" }, e.title)), !u.value && Q.length !== 0 && Q.push(
          le(Ze, {
            class: ["btn-close"],
            onClick: () => {
              C();
            }
          })
        );
        const K = [];
        if (Q.length > 0 && K.push(
          le(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => Q }
          )
        ), Fe("default", { hide: C }, a) || e.body) {
          const me = le(
            at(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: at(e) ? { click: L } : {}
            },
            Fe("default", { hide: C }, a) || e.body
          );
          K.push(me);
        }
        return le(
          "div",
          {
            class: ["toast", e.toastClass, $.value],
            tabindex: "0"
          },
          K
        );
      };
      return le(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: B.value ? null : l.value ? "status" : "alert",
          "aria-live": B.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": B.value ? null : "true",
          onmouseenter: E,
          onmouseleave: I
        },
        [
          le(
            St,
            {
              noFade: f.value,
              onAfterEnter: x,
              onBeforeEnter: z,
              onAfterLeave: P,
              onBeforeLeave: w
            },
            () => [m.value ? te() : ""]
          )
        ]
      );
    };
  }
}), Et = /* @__PURE__ */ A({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: null
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = i(() => a[t.position]), n = (u) => {
      var f;
      (f = t.instance) == null || f.remove(u);
    };
    return (u, f) => {
      var c;
      return d(), g("div", {
        class: F([[o(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (d(!0), g(oe, null, ve((c = e.instance) == null ? void 0 : c.toasts(e.position).value, (v) => (d(), O(pl, {
          id: v.options.id,
          key: v.options.id,
          modelValue: v.options.value,
          "onUpdate:modelValue": (p) => v.options.value = p,
          "auto-hide": v.options.autoHide,
          delay: v.options.delay,
          "no-close-button": v.options.noCloseButton,
          title: v.content.title,
          body: v.content.body,
          component: v.content.body,
          variant: v.options.variant,
          onDestroyed: n
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "auto-hide", "delay", "no-close-button", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), Zo = A({
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object },
    position: { type: String, required: !1 }
  },
  setup(e, { slots: t, expose: a }) {
    const l = W();
    let n;
    const u = i(() => ({
      container: !e.fluid,
      ["container-fluid"]: typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return $e(() => {
      e.toast;
    }), e.toast && (n = gl({ container: l, root: e.toast.root }), a({})), () => {
      var c;
      const f = [];
      return n == null || n.containerPositions.value.forEach((v) => {
        f.push(le(Et, { key: v, instance: n, position: v }));
      }), le("div", { class: [u.value, e.position], ref: l }, [
        ...f,
        (c = t.default) == null ? void 0 : c.call(t)
      ]);
    };
  },
  methods: {}
}), Qo = { class: "visually-hidden" }, es = ["aria-labelledby", "role"], hl = /* @__PURE__ */ A({
  __name: "BDropdown",
  props: {
    id: null,
    menuClass: null,
    size: null,
    splitClass: null,
    splitVariant: null,
    text: null,
    toggleClass: null,
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    boundary: { default: "clippingParents" },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropright: { default: !1 },
    dropleft: { default: !1 },
    noFlip: { default: !1 },
    offset: { default: 0 },
    popperOpts: { default: () => ({}) },
    right: { default: !1 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" }
  },
  emits: ["show", "shown", "hide", "hidden", "click", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = ke(s(l, "id"), "dropdown"), u = r(s(l, "block")), f = r(s(l, "dark")), c = r(s(l, "dropup")), v = r(s(l, "dropright")), p = r(s(l, "isNav")), B = r(s(l, "dropleft")), m = r(s(l, "right")), $ = r(s(l, "split")), V = r(s(l, "noCaret")), T = W(), b = W(), k = W(), y = i(() => ({
      "d-grid": u.value,
      "d-flex": u.value && $.value
    })), C = i(() => [
      $.value ? l.splitClass : l.toggleClass,
      {
        "nav-link": p.value,
        "dropdown-toggle": !$.value,
        "dropdown-toggle-no-caret": V.value && !$.value,
        "w-100": $.value && u.value
      }
    ]), q = i(() => [
      l.menuClass,
      {
        "dropdown-menu-dark": f.value,
        "dropdown-menu-end": m.value
      }
    ]), E = i(() => ({
      "data-bs-toggle": $.value ? void 0 : "dropdown",
      "aria-expanded": $.value ? void 0 : !1,
      ref: $.value ? void 0 : b,
      href: $.value ? l.splitHref : void 0
    })), I = i(() => ({
      ref: $.value ? b : void 0
    })), _ = () => {
      var x;
      (x = k.value) == null || x.hide();
    }, z = (x) => {
      $.value && a("click", x);
    };
    return Be(T, "show.bs.dropdown", () => a("show")), Be(T, "shown.bs.dropdown", () => a("shown")), Be(T, "hide.bs.dropdown", () => a("hide")), Be(T, "hidden.bs.dropdown", () => a("hidden")), $e(() => {
      var x;
      k.value = new ln((x = b.value) == null ? void 0 : x.$el, {
        autoClose: l.autoClose,
        boundary: l.boundary,
        offset: l.offset ? l.offset.toString() : "",
        reference: l.offset || $.value ? "parent" : "toggle",
        popperConfig: (w) => {
          const P = {
            placement: "bottom-start",
            modifiers: l.noFlip ? [
              {
                name: "flip",
                options: {
                  fallbackPlacements: []
                }
              }
            ] : []
          };
          return c.value ? P.placement = m.value ? "top-end" : "top-start" : v.value ? P.placement = "right-start" : B.value ? P.placement = "left-start" : m.value && (P.placement = "bottom-end"), Ot(w, Ot(P, l.popperOpts));
        }
      });
    }), t({
      hide: _
    }), (x, w) => (d(), g("div", {
      ref_key: "parent",
      ref: T,
      class: F([o(y), "btn-group"])
    }, [
      fe(lt, J({
        id: o(n),
        variant: e.splitVariant || e.variant,
        size: e.size,
        class: o(C),
        disabled: e.disabled,
        type: e.splitButtonType
      }, o(E), { onClick: z }), {
        default: D(() => [
          h(x.$slots, "button-content", {}, () => [
            ee(G(e.text), 1)
          ])
        ]),
        _: 3
      }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
      o($) ? (d(), O(lt, J({
        key: 0,
        variant: e.variant,
        size: e.size,
        disabled: e.disabled
      }, o(I), {
        class: [e.toggleClass, "dropdown-toggle-split dropdown-toggle"],
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false",
        onClick: w[0] || (w[0] = (P) => a("toggle"))
      }), {
        default: D(() => [
          M("span", Qo, [
            h(x.$slots, "toggle-text", {}, () => [
              ee(G(e.toggleText), 1)
            ])
          ])
        ]),
        _: 3
      }, 16, ["variant", "size", "disabled", "class"])) : U("", !0),
      M("ul", {
        class: F(["dropdown-menu", o(q)]),
        "aria-labelledby": o(n),
        role: e.role
      }, [
        h(x.$slots, "default")
      ], 10, es)
    ], 2));
  }
}), ts = { role: "presentation" }, as = /* @__PURE__ */ A({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (d(), g("li", ts, [
      (d(), O(Z(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), ls = {}, ns = { role: "presentation" }, os = { class: "px-4 py-3" };
function ss(e, t) {
  return d(), g("li", ns, [
    M("form", os, [
      h(e.$slots, "default")
    ])
  ]);
}
const is = /* @__PURE__ */ _e(ls, [["render", ss]]), rs = { role: "presentation" }, us = ["id", "aria-describedby"], ds = {
  inheritAttrs: !1
}, cs = /* @__PURE__ */ A({
  ...ds,
  __name: "BDropdownGroup",
  props: {
    id: null,
    ariaDescribedby: null,
    header: null,
    headerClass: null,
    headerTag: { default: "header" },
    headerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), l = i(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), n = i(() => [
      t.headerClass,
      {
        [`text-${t.headerVariant}`]: t.headerVariant !== void 0
      }
    ]);
    return (u, f) => (d(), g("li", rs, [
      (d(), O(Z(e.headerTag), {
        id: o(a),
        class: F(["dropdown-header", o(n)]),
        role: o(l)
      }, {
        default: D(() => [
          h(u.$slots, "header", {}, () => [
            ee(G(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      M("ul", J({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, u.$attrs, {
        "aria-describedby": e.ariaDescribedby || o(a)
      }), [
        h(u.$slots, "default")
      ], 16, us)
    ]));
  }
}), fs = {}, vs = { class: "dropdown-header" };
function ms(e, t) {
  return d(), g("li", null, [
    M("h6", vs, [
      h(e.$slots, "default")
    ])
  ]);
}
const bs = /* @__PURE__ */ _e(fs, [["render", ms]]), gs = {
  inheritAttrs: !1
}, ps = /* @__PURE__ */ A({
  ...gs,
  __name: "BDropdownItem",
  props: {
    href: null,
    linkClass: null,
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "active")), n = r(s(a, "disabled")), u = Ia(), f = i(() => [
      a.linkClass,
      {
        active: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), c = i(
      () => a.href ? "a" : u.to ? Ae : "button"
    ), v = i(() => ({
      disabled: n.value,
      "aria-current": l.value ? "true" : null,
      href: c.value === "a" ? a.href : null,
      rel: a.rel,
      type: c.value === "button" ? "button" : null,
      target: a.target,
      ...u.to ? { activeClass: "active", ...u } : {}
    })), p = (B) => t("click", B);
    return (B, m) => (d(), g("li", {
      role: "presentation",
      class: F(B.$attrs.class)
    }, [
      (d(), O(Z(o(c)), J({
        class: ["dropdown-item", o(f)]
      }, o(v), { onClick: p }), {
        default: D(() => [
          h(B.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ], 2));
  }
}), hs = ["disabled"], ys = {
  inheritAttrs: !1
}, Bs = /* @__PURE__ */ A({
  ...ys,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: null,
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "active")), n = r(s(a, "disabled")), u = i(() => [
      a.buttonClass,
      {
        [a.activeClass]: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), f = (c) => t("click", c);
    return (c, v) => (d(), g("li", {
      role: "presentation",
      class: F(c.$attrs.class)
    }, [
      M("button", {
        role: "menu",
        type: "button",
        class: F(["dropdown-item", o(u)]),
        disabled: o(n),
        onClick: f
      }, [
        h(c.$slots, "default")
      ], 10, hs)
    ], 2));
  }
}), $s = { role: "presentation" }, ks = { class: "px-4 py-1 mb-0 text-muted" }, Cs = /* @__PURE__ */ A({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, a) => (d(), g("li", $s, [
      M("p", ks, [
        h(t.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ])
    ]));
  }
}), Ss = ["id", "novalidate", "onSubmit"], yl = /* @__PURE__ */ A({
  __name: "BForm",
  props: {
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "floating")), n = r(s(a, "novalidate")), u = r(s(a, "validated")), f = i(() => ({
      "form-floating": l.value,
      "was-validated": u.value
    })), c = (v) => t("submit", v);
    return (v, p) => (d(), g("form", {
      id: e.id,
      novalidate: o(n),
      class: F(o(f)),
      onSubmit: Ut(c, ["prevent"])
    }, [
      h(v.$slots, "default")
    ], 42, Ss));
  }
}), ws = { class: "form-floating" }, Ts = ["for"], _s = /* @__PURE__ */ A({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: null,
    label: null,
    text: null
  },
  setup(e) {
    return (t, a) => (d(), g("div", ws, [
      h(t.$slots, "default", {}, () => [
        ee(G(e.text), 1)
      ]),
      M("label", { for: e.labelFor }, [
        h(t.$slots, "label", {}, () => [
          ee(G(e.label), 1)
        ])
      ], 8, Ts)
    ]));
  }
}), Dt = /* @__PURE__ */ A({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    text: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "forceShow")), l = r(s(t, "state")), n = r(s(t, "tooltip")), u = i(
      () => a.value === !0 || l.value === !1
    ), f = i(() => ({
      "d-block": u.value,
      "invalid-feedback": !n.value,
      "invalid-tooltip": n.value
    })), c = i(() => ({
      id: t.id,
      role: t.role,
      "aria-live": t.ariaLive,
      "aria-atomic": t.ariaLive ? "true" : void 0
    }));
    return (v, p) => (d(), O(Z(e.tag), J({ class: o(f) }, o(c)), {
      default: D(() => [
        h(v.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), ft = /* @__PURE__ */ A({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (d(), O(Z(e.tag), { class: "row d-flex flex-wrap" }, {
      default: D(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Ht = /* @__PURE__ */ A({
  __name: "BFormText",
  props: {
    id: null,
    inline: { default: !1 },
    tag: { default: "small" },
    text: null,
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = r(s(t, "inline")), l = i(() => [
      [`text-${t.textVariant}`],
      {
        "form-text": !a.value
      }
    ]);
    return (n, u) => (d(), O(Z(e.tag), {
      id: e.id,
      class: F(o(l))
    }, {
      default: D(() => [
        h(n.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Rt = /* @__PURE__ */ A({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    text: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "forceShow")), l = r(s(t, "state")), n = r(s(t, "tooltip")), u = i(
      () => a.value === !0 || l.value === !0
    ), f = i(() => ({
      "d-block": u.value,
      "valid-feedback": !n.value,
      "valid-tooltip": n.value
    })), c = i(() => t.ariaLive ? "true" : void 0);
    return (v, p) => (d(), O(Z(e.tag), {
      id: e.id,
      role: e.role,
      "aria-live": e.ariaLive,
      "aria-atomic": o(c),
      class: F(o(f))
    }, {
      default: D(() => [
        h(v.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), Vs = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], As = ["for"], xs = {
  inheritAttrs: !1
}, Bl = /* @__PURE__ */ A({
  ...xs,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    indeterminate: null,
    name: null,
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: "md" },
    state: { default: void 0 },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = ke(s(a, "id"), "form-check"), u = r(s(a, "indeterminate")), f = r(s(a, "autofocus")), c = r(s(a, "plain")), v = r(s(a, "button")), p = r(s(a, "switch")), B = r(s(a, "disabled")), m = r(s(a, "inline")), $ = r(s(a, "required")), V = r(s(a, "state")), T = W(null), b = W(!1), k = i(() => !Ve(l.default)), y = i({
      get: () => a.uncheckedValue ? Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : a.modelValue === a.value : a.modelValue,
      set: (z) => {
        let x = z;
        Array.isArray(a.modelValue) ? a.uncheckedValue && (x = a.modelValue, z ? (x.indexOf(a.uncheckedValue) > -1 && x.splice(x.indexOf(a.uncheckedValue), 1), x.push(a.value)) : (x.indexOf(a.value) > -1 && x.splice(x.indexOf(a.value), 1), x.push(a.uncheckedValue))) : x = z ? a.value : a.uncheckedValue, t("input", x), t("update:modelValue", x), t("change", x);
      }
    }), C = i(() => Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), q = De({
      plain: s(c, "value"),
      button: s(v, "value"),
      inline: s(m, "value"),
      switch: s(p, "value"),
      size: s(a, "size"),
      state: s(V, "value"),
      buttonVariant: s(a, "buttonVariant")
    }), E = Wa(q), I = Ka(q), _ = Xa(q);
    return $e(() => {
      f.value && T.value.focus();
    }), (z, x) => (d(), g("div", {
      class: F(o(E))
    }, [
      Ye(M("input", J({ id: o(n) }, z.$attrs, {
        ref_key: "input",
        ref: T,
        "onUpdate:modelValue": x[0] || (x[0] = (w) => nt(y) ? y.value = w : null),
        class: o(I),
        type: "checkbox",
        disabled: o(B),
        required: !!e.name && !!o($),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-required": e.name && o($) ? "true" : void 0,
        value: e.value,
        indeterminate: o(u),
        onFocus: x[1] || (x[1] = (w) => b.value = !0),
        onBlur: x[2] || (x[2] = (w) => b.value = !1)
      }), null, 16, Vs), [
        [Kl, o(y)]
      ]),
      o(k) || !o(c) ? (d(), g("label", {
        key: 0,
        for: o(n),
        class: F([o(_), { active: o(C), focus: b.value }])
      }, [
        h(z.$slots, "default")
      ], 10, As)) : U("", !0)
    ], 2));
  }
}), Is = ["id"], Fs = ["innerHTML"], Ps = ["textContent"], Os = /* @__PURE__ */ A({
  __name: "BFormCheckboxGroup",
  props: {
    id: null,
    form: null,
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: null,
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: null,
    stacked: { default: !1 },
    state: { default: void 0 },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = "BFormCheckbox", u = ke(s(a, "id"), "checkbox"), f = ke(s(a, "name"), "checkbox");
    r(s(a, "autofocus"));
    const c = r(s(a, "buttons")), v = r(s(a, "disabled"));
    r(s(a, "plain"));
    const p = r(s(a, "required")), B = r(s(a, "stacked")), m = r(s(a, "state")), $ = r(s(a, "switches")), V = r(s(a, "validated")), T = i({
      get: () => a.modelValue,
      set: (q) => {
        if (JSON.stringify(q) === JSON.stringify(a.modelValue))
          return;
        const E = a.options.filter(
          (I) => q.map((_) => JSON.stringify(_)).includes(JSON.stringify(typeof I == "string" ? I : I[a.valueField]))
        ).map((I) => typeof I == "string" ? I : I[a.valueField]);
        t("input", E), t("update:modelValue", E), t("change", E);
      }
    }), b = i(
      () => (l.first ? gt(l.first(), n, v.value) : []).concat(a.options.map((q) => Za(q, a))).concat(l.default ? gt(l.default(), n, v.value) : []).map((q, E) => Qa(q, E, a, f, u)).map((q) => ({
        ...q,
        props: {
          switch: $.value,
          ...q.props
        }
      }))
    ), k = De({
      required: s(p, "value"),
      ariaInvalid: s(a, "ariaInvalid"),
      state: s(m, "value"),
      validated: s(V, "value"),
      buttons: s(c, "value"),
      stacked: s(B, "value"),
      size: s(a, "size")
    }), y = Ja(k), C = Ya(k);
    return (q, E) => (d(), g("div", J(o(y), {
      id: o(u),
      role: "group",
      class: [o(C), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), g(oe, null, ve(o(b), (I, _) => (d(), O(Bl, J({
        key: _,
        modelValue: o(T),
        "onUpdate:modelValue": E[0] || (E[0] = (z) => nt(T) ? T.value = z : null)
      }, I.props), {
        default: D(() => [
          I.html ? (d(), g("span", {
            key: 0,
            innerHTML: I.html
          }, null, 8, Fs)) : (d(), g("span", {
            key: 1,
            textContent: G(I.text)
          }, null, 8, Ps))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, Is));
  }
}), $l = ["input", "select", "textarea"], Ls = $l.map((e) => `${e}:not([disabled])`).join(), zs = [...$l, "a", "button", "label"], Ns = "label", Es = "invalid-feedback", Ds = "valid-feedback", Hs = "description", Rs = "default", qs = A({
  components: { BCol: et, BFormInvalidFeedback: Dt, BFormRow: ft, BFormText: Ht, BFormValidFeedback: Rt },
  props: {
    contentCols: { type: [Boolean, String, Number], required: !1 },
    contentColsLg: { type: [Boolean, String, Number], required: !1 },
    contentColsMd: { type: [Boolean, String, Number], required: !1 },
    contentColsSm: { type: [Boolean, String, Number], required: !1 },
    contentColsXl: { type: [Boolean, String, Number], required: !1 },
    description: { type: [String], required: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, required: !1 },
    invalidFeedback: { type: String, required: !1 },
    label: { type: String, required: !1 },
    labelAlign: { type: [Boolean, String, Number], required: !1 },
    labelAlignLg: { type: [Boolean, String, Number], required: !1 },
    labelAlignMd: { type: [Boolean, String, Number], required: !1 },
    labelAlignSm: { type: [Boolean, String, Number], required: !1 },
    labelAlignXl: { type: [Boolean, String, Number], required: !1 },
    labelClass: { type: [Array, Object, String], required: !1 },
    labelCols: { type: [Boolean, String, Number], required: !1 },
    labelColsLg: { type: [Boolean, String, Number], required: !1 },
    labelColsMd: { type: [Boolean, String, Number], required: !1 },
    labelColsSm: { type: [Boolean, String, Number], required: !1 },
    labelColsXl: { type: [Boolean, String, Number], required: !1 },
    labelFor: { type: String, required: !1 },
    labelSize: { type: String, required: !1 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, required: !1 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = r(s(e, "disabled")), l = r(s(e, "labelSrOnly")), n = r(s(e, "state")), u = r(s(e, "tooltip")), f = r(s(e, "validated")), c = r(s(e, "floating")), v = null, p = ["xs", "sm", "md", "lg", "xl"], B = (_, z) => p.reduce((x, w) => {
      const P = oa(w === "xs" ? "" : w, `${z}Align`), L = _[P] || null;
      return L && (w === "xs" ? x.push(`text-${L}`) : x.push(`text-${w}-${L}`)), x;
    }, []), m = (_, z) => p.reduce((x, w) => {
      const P = oa(w === "xs" ? "" : w, `${z}Cols`);
      let L = _[P];
      return L = L === "" ? !0 : L || !1, typeof L != "boolean" && L !== "auto" && (L = Qe(L, 0), L = L > 0 ? L : !1), L && (w === "xs" ? x.cols = L : x[w || (typeof L == "boolean" ? "col" : "cols")] = L), x;
    }, {}), $ = W(), V = (_, z = null) => {
      if (za && e.labelFor) {
        const x = qa(`#${bn(e.labelFor)}`, $);
        if (x) {
          const w = "aria-describedby", P = (_ || "").split(dt), L = (z || "").split(dt), te = (Kt(x, w) || "").split(dt).filter((Q) => !L.includes(Q)).concat(P).filter((Q, ie, K) => K.indexOf(Q) === ie).filter((Q) => Q).join(" ").trim();
          te ? An(x, w, te) : xn(x, w);
        }
      }
    }, T = i(() => m(e, "content")), b = i(() => B(e, "label")), k = i(() => m(e, "label")), y = i(
      () => Object.keys(T.value).length > 0 || Object.keys(k.value).length > 0
    ), C = i(
      () => typeof n.value == "boolean" ? n.value : null
    ), q = i(() => {
      const _ = C.value;
      return _ === !0 ? "is-valid" : _ === !1 ? "is-invalid" : null;
    }), E = i(
      () => $t(t.ariaInvalid, n.value)
    );
    return ce(
      () => v,
      (_, z) => {
        _ !== z && V(_, z);
      }
    ), $e(() => {
      qe(() => {
        V(v);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: n,
      tooltipBoolean: u,
      validatedBoolean: f,
      floatingBoolean: c,
      ariaDescribedby: v,
      computedAriaInvalid: E,
      contentColProps: T,
      isHorizontal: y,
      labelAlignClasses: b,
      labelColProps: k,
      onLegendClick: (_) => {
        if (e.labelFor)
          return;
        const { target: z } = _, x = z ? z.tagName : "";
        if (zs.indexOf(x) !== -1)
          return;
        const w = _n(Ls, $).filter(Tn);
        w.length === 1 && Sn(w[0]);
      },
      stateClass: q
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = ke(), l = !e.labelFor;
    let n = null;
    const u = Fe(Ns, {}, t) || e.label, f = u ? Ee("_BV_label_") : null;
    if (u || this.isHorizontal) {
      const E = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        u && (n = le(
          E,
          {
            class: "visually-hidden",
            id: f,
            for: e.labelFor || null
          },
          u
        )), this.isHorizontal ? n = le(et, this.labelColProps, { default: () => n }) : n = le("div", {}, [n]);
      else {
        const I = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? E : null,
          id: f,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? n = le(et, I, { default: () => u }) : n = le(E, I, u);
      }
    }
    let c = null;
    const v = Fe(Es, {}, t) || this.invalidFeedback, p = v ? Ee("_BV_feedback_invalid_") : void 0;
    v && (c = le(
      Dt,
      {
        ariaLive: e.feedbackAriaLive,
        id: p,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
    ));
    let B = null;
    const m = Fe(Ds, {}, t) || this.validFeedback, $ = m ? Ee("_BV_feedback_valid_") : void 0;
    m && (B = le(
      Rt,
      {
        ariaLive: e.feedbackAriaLive,
        id: $,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => m }
    ));
    let V = null;
    const T = Fe(Hs, {}, t) || this.description, b = T ? Ee("_BV_description_") : void 0;
    T && (V = le(
      Ht,
      {
        id: b
      },
      { default: () => T }
    ));
    const k = this.ariaDescribedby = [
      b,
      this.stateBoolean === !1 ? p : null,
      this.stateBoolean === !0 ? $ : null
    ].filter((E) => E).join(" ") || null, y = [
      Fe(Rs, { ariaDescribedby: k, descriptionId: b, id: a, labelId: f }, t) || "",
      c,
      B,
      V
    ];
    !this.isHorizontal && this.floatingBoolean && y.push(n);
    let C = le(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      y
    );
    this.isHorizontal && (C = le(et, { ref: "content", ...this.contentColProps }, { default: () => y }));
    const q = {
      class: [
        "mb-3",
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: ke(s(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      "aria-labelledby": l && this.isHorizontal ? f : null
    };
    return this.isHorizontal && !l ? le(ft, q, { default: () => [n, C] }) : le(
      l ? "fieldset" : "div",
      q,
      this.isHorizontal && l ? [le(ft, {}, { default: () => [n, C] })] : this.isHorizontal || !this.floatingBoolean ? [n, C] : [C]
    );
  }
}), ba = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color"
], Ms = A({
  props: {
    ...el,
    max: { type: [String, Number], required: !1 },
    min: { type: [String, Number], required: !1 },
    step: { type: [String, Number], required: !1 },
    type: {
      type: String,
      default: "text",
      validator: (e) => ba.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: u, onChange: f, onBlur: c, focus: v, blur: p } = tl(e, t), B = W(!1), m = i(() => {
      const T = e.type === "range", b = e.type === "color";
      return {
        "form-control-highlighted": B.value,
        "form-range": T,
        "form-control": b || !e.plaintext && !T,
        "form-control-color": b,
        "form-control-plaintext": e.plaintext && !T && !b,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), $ = i(
      () => ba.includes(e.type) ? e.type : "text"
    );
    return {
      computedClasses: m,
      localType: $,
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: u,
      onChange: f,
      onBlur: c,
      focus: v,
      blur: p,
      highlight: () => {
        B.value !== !0 && (B.value = !0, setTimeout(() => {
          B.value = !1;
        }, 2e3));
      }
    };
  }
}), js = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function Gs(e, t, a, l, n, u) {
  return d(), g("input", J({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (f) => e.onInput(f)),
    onChange: t[1] || (t[1] = (f) => e.onChange(f)),
    onBlur: t[2] || (t[2] = (f) => e.onBlur(f))
  }), null, 16, js);
}
const Us = /* @__PURE__ */ _e(Ms, [["render", Gs]]), Ws = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], Ks = ["for"], kl = /* @__PURE__ */ A({
  __name: "BFormRadio",
  props: {
    ariaLabel: null,
    ariaLabelledby: null,
    form: null,
    id: null,
    name: null,
    size: null,
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: void 0 },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = ke(s(a, "id"), "form-check"), u = r(s(a, "autofocus")), f = r(s(a, "plain")), c = r(s(a, "button")), v = r(s(a, "switch")), p = r(s(a, "disabled")), B = r(s(a, "inline")), m = r(s(a, "required")), $ = r(s(a, "state")), V = W(null), T = W(!1), b = i({
      get: () => Array.isArray(a.modelValue) ? a.modelValue[0] : a.modelValue,
      set: (_) => {
        const z = _ ? a.value : !1, x = Array.isArray(a.modelValue) ? [z] : z;
        t("input", x), t("change", x), t("update:modelValue", x);
      }
    }), k = i(() => Array.isArray(a.modelValue) ? (a.modelValue || []).find((_) => _ === a.value) : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), y = i(() => !Ve(l.default)), C = De({
      plain: s(f, "value"),
      button: s(c, "value"),
      inline: s(B, "value"),
      switch: s(v, "value"),
      size: s(a, "size"),
      state: s($, "value"),
      buttonVariant: s(a, "buttonVariant")
    }), q = Wa(C), E = Ka(C), I = Xa(C);
    return $e(() => {
      u.value && V.value !== null && V.value.focus();
    }), (_, z) => (d(), g("div", {
      class: F(o(q))
    }, [
      Ye(M("input", J({ id: o(n) }, _.$attrs, {
        ref_key: "input",
        ref: V,
        "onUpdate:modelValue": z[0] || (z[0] = (x) => nt(b) ? b.value = x : null),
        class: o(E),
        type: "radio",
        disabled: o(p),
        required: !!e.name && o(m),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledby,
        value: e.value,
        "aria-required": !!e.name && o(m) ? !0 : void 0,
        onFocus: z[1] || (z[1] = (x) => T.value = !0),
        onBlur: z[2] || (z[2] = (x) => T.value = !1)
      }), null, 16, Ws), [
        [Xl, o(b)]
      ]),
      o(y) || o(f) === !1 ? (d(), g("label", {
        key: 0,
        for: o(n),
        class: F([o(I), { active: o(k), focus: T.value }])
      }, [
        h(_.$slots, "default")
      ], 10, Ks)) : U("", !0)
    ], 2));
  }
}), Xs = ["id"], Js = ["innerHTML"], Ys = ["textContent"], Zs = /* @__PURE__ */ A({
  __name: "BFormRadioGroup",
  props: {
    size: null,
    form: null,
    id: null,
    name: null,
    modelValue: { type: [String, Boolean, Array, Object, Number], default: "" },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: void 0 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = "BFormRadio", u = ke(s(a, "id"), "radio"), f = ke(s(a, "name"), "checkbox");
    r(s(a, "autofocus"));
    const c = r(s(a, "buttons")), v = r(s(a, "disabled"));
    r(s(a, "plain"));
    const p = r(s(a, "required")), B = r(s(a, "stacked")), m = r(s(a, "state")), $ = r(s(a, "validated")), V = i({
      get: () => a.modelValue,
      set: (C) => {
        t("input", C), t("update:modelValue", C), t("change", C);
      }
    }), T = i(
      () => (l.first ? gt(l.first(), n, v.value) : []).concat(a.options.map((C) => Za(C, a))).concat(l.default ? gt(l.default(), n, v.value) : []).map((C, q) => Qa(C, q, a, f, u)).map((C) => ({
        ...C
      }))
    ), b = De({
      required: s(p, "value"),
      ariaInvalid: s(a, "ariaInvalid"),
      state: s(m, "value"),
      validated: s($, "value"),
      buttons: s(c, "value"),
      stacked: s(B, "value"),
      size: s(a, "size")
    }), k = Ja(b), y = Ya(b);
    return (C, q) => (d(), g("div", J(o(k), {
      id: o(u),
      role: "radiogroup",
      class: [o(y), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), g(oe, null, ve(o(T), (E, I) => (d(), O(kl, J({
        key: I,
        modelValue: o(V),
        "onUpdate:modelValue": q[0] || (q[0] = (_) => nt(V) ? V.value = _ : null)
      }, E.props), {
        default: D(() => [
          E.html ? (d(), g("span", {
            key: 0,
            innerHTML: E.html
          }, null, 8, Js)) : (d(), g("span", {
            key: 1,
            textContent: G(E.text)
          }, null, 8, Ys))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, Xs));
  }
}), Qs = ["value", "disabled"], Qt = /* @__PURE__ */ A({
  __name: "BFormSelectOption",
  props: {
    value: null,
    disabled: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "disabled"));
    return (l, n) => (d(), g("option", {
      value: e.value,
      disabled: o(a)
    }, [
      h(l.$slots, "default")
    ], 8, Qs));
  }
}), ei = ["label"], Cl = /* @__PURE__ */ A({
  __name: "BFormSelectOptionGroup",
  props: {
    label: null,
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = i(
      () => Jt(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, n) => (d(), g("optgroup", { label: e.label }, [
      h(l.$slots, "first"),
      (d(!0), g(oe, null, ve(o(a), (u, f) => (d(), O(Qt, J({
        key: f,
        value: u.value,
        disabled: u.disabled
      }, l.$attrs, {
        innerHTML: u.html || u.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      h(l.$slots, "default")
    ], 8, ei));
  }
}), ti = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], ai = /* @__PURE__ */ A({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: null,
    htmlField: { default: "html" },
    id: null,
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: null,
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: null,
    state: { default: void 0 },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = ke(s(l, "id"), "input"), u = r(s(l, "autofocus")), f = r(s(l, "disabled")), c = r(s(l, "multiple")), v = r(s(l, "plain")), p = r(s(l, "required")), B = r(s(l, "state")), m = W(), $ = i(() => ({
      "form-control": v.value,
      [`form-control-${l.size}`]: l.size && v.value,
      "form-select": !v.value,
      [`form-select-${l.size}`]: l.size && !v.value,
      "is-valid": B.value === !0,
      "is-invalid": B.value === !1
    })), V = i(() => {
      if (l.selectSize || v.value)
        return l.selectSize;
    }), T = i(
      () => $t(l.ariaInvalid, B.value)
    ), b = i(
      () => Jt(l.options, "BFormSelect", l)
    ), k = i({
      get() {
        return l.modelValue;
      },
      set(E) {
        a("change", E), a("update:modelValue", E), a("input", E);
      }
    }), y = () => {
      var E;
      f.value || (E = m.value) == null || E.focus();
    }, C = () => {
      var E;
      f.value || (E = m.value) == null || E.blur();
    }, q = () => {
      qe(() => {
        var E;
        u.value && ((E = m.value) == null || E.focus());
      });
    };
    return $e(q), Gt(q), t({
      blur: C,
      focus: y
    }), (E, I) => Ye((d(), g("select", J({
      id: o(n),
      ref_key: "input",
      ref: m
    }, E.$attrs, {
      "onUpdate:modelValue": I[0] || (I[0] = (_) => nt(k) ? k.value = _ : null),
      class: o($),
      name: e.name,
      form: e.form || void 0,
      multiple: o(c) || void 0,
      size: o(V),
      disabled: o(f),
      required: o(p),
      "aria-required": o(p) ? !0 : void 0,
      "aria-invalid": o(T)
    }), [
      h(E.$slots, "first"),
      (d(!0), g(oe, null, ve(o(b), (_, z) => (d(), g(oe, { key: z }, [
        Array.isArray(_.options) ? (d(), O(Cl, {
          key: 0,
          label: _.label,
          options: _.options
        }, null, 8, ["label", "options"])) : (d(), O(Qt, {
          key: 1,
          value: _.value,
          disabled: _.disabled,
          innerHTML: _.html || _.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 128)),
      h(E.$slots, "default")
    ], 16, ti)), [
      [Jl, o(k)]
    ]);
  }
}), li = ["id"], Sl = /* @__PURE__ */ A({
  __name: "BFormTag",
  props: {
    id: null,
    title: null,
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = ke(s(a, "id")), u = r(s(a, "disabled")), f = r(s(a, "noRemove")), c = r(s(a, "pill")), v = i(
      () => {
        var m, $, V;
        return (V = (($ = (m = l.default) == null ? void 0 : m.call(l)[0].children) != null ? $ : "").toString() || a.title) != null ? V : "";
      }
    ), p = i(() => `${n.value}taglabel__`), B = i(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": c.value,
        disabled: u.value
      }
    ]);
    return (m, $) => (d(), O(Z(e.tag), {
      id: o(n),
      title: o(v),
      class: F(["badge b-form-tag d-inline-flex align-items-center mw-100", o(B)]),
      "aria-labelledby": o(p)
    }, {
      default: D(() => [
        M("span", {
          id: o(p),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          h(m.$slots, "default", {}, () => [
            ee(G(o(v)), 1)
          ])
        ], 8, li),
        !o(u) && !o(f) ? (d(), O(Ze, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": e.removeLabel,
          class: "b-form-tag-remove",
          white: !["warning", "info", "light"].includes(e.variant),
          "aria-describedby": o(p),
          "aria-controls": e.id,
          onClick: $[0] || ($[0] = (V) => t("remove", o(v)))
        }, null, 8, ["aria-label", "white", "aria-describedby", "aria-controls"])) : U("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), ni = ["id"], oi = ["id", "for", "aria-live"], si = ["id", "aria-live"], ii = ["id"], ri = ["aria-controls"], ui = {
  role: "group",
  class: "d-flex"
}, di = ["id", "disabled", "value", "type", "placeholder", "form", "required"], ci = ["disabled"], fi = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, vi = {
  key: 0,
  class: "d-block invalid-feedback"
}, mi = {
  key: 1,
  class: "form-text text-muted"
}, bi = {
  key: 2,
  class: "form-text text-muted"
}, gi = ["name", "value"], pi = /* @__PURE__ */ A({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: null,
    inputClass: null,
    inputId: null,
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: null,
    limit: null,
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: null,
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: null,
    state: { default: void 0 },
    size: null,
    tagClass: null,
    tagPills: { default: !1 },
    tagRemoveLabel: null,
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = ke(), n = r(s(a, "addOnChange")), u = r(s(a, "autofocus")), f = r(s(a, "disabled")), c = r(s(a, "noAddOnEnter")), v = r(s(a, "noOuterFocus")), p = r(s(a, "noTagRemove")), B = r(s(a, "removeOnDelete")), m = r(s(a, "required")), $ = r(s(a, "state")), V = r(s(a, "tagPills")), T = W(null), b = i(() => a.inputId || `${l.value}input__`), k = W(a.modelValue), y = W(""), C = W(!1), q = W(!1), E = W(""), I = W([]), _ = W([]), z = W([]), x = i(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: f.value,
      focus: q.value,
      "is-invalid": $.value === !1,
      "is-valid": $.value === !0
    })), w = i(() => k.value.includes(y.value)), P = i(
      () => y.value === "" ? !1 : !a.tagValidator(y.value)
    ), L = i(() => k.value.length === a.limit), te = i(() => !P.value && !w.value), Q = i(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: re,
      disableAddButton: te.value,
      disabled: f.value,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: z.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: f.value,
        form: a.form,
        id: b,
        value: y
      },
      inputHandlers: {
        input: ge,
        keydown: pe,
        change: ye
      },
      inputId: b,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: _.value,
      isDuplicate: w.value,
      isInvalid: P.value,
      isLimitReached: L.value,
      limitTagsText: a.limitTagsText,
      limit: a.limit,
      noTagRemove: p.value,
      placeholder: a.placeholder,
      removeTag: H,
      required: m.value,
      separator: a.separator,
      size: a.size,
      state: $.value,
      tagClass: a.tagClass,
      tagPills: V.value,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: k.value
    }));
    ce(
      () => a.modelValue,
      (N) => {
        k.value = N;
      }
    );
    const ie = () => {
      var N;
      u.value && ((N = T.value) == null || N.focus());
    }, K = (N) => {
      if (f.value) {
        N.target.blur();
        return;
      }
      t("focusin", N);
    }, me = (N) => {
      f.value || v.value || (q.value = !0, t("focus", N));
    }, ae = (N) => {
      q.value = !1, t("blur", N);
    }, ge = (N) => {
      var ne, Y;
      const X = typeof N == "string" ? N : N.target.value;
      if (C.value = !1, ((ne = a.separator) == null ? void 0 : ne.includes(X.charAt(0))) && X.length > 0) {
        T.value && (T.value.value = "");
        return;
      }
      if (y.value = X, (Y = a.separator) != null && Y.includes(X.charAt(X.length - 1))) {
        re(X.slice(0, X.length - 1));
        return;
      }
      I.value = a.tagValidator(X) && !w.value ? [X] : [], _.value = a.tagValidator(X) ? [] : [X], z.value = w.value ? [X] : [], t("tag-state", I.value, _.value, z.value);
    }, ye = (N) => {
      n.value && (ge(N), w.value || re(y.value));
    }, pe = (N) => {
      if (N.key === "Enter" && !c.value) {
        re(y.value);
        return;
      }
      (N.key === "Backspace" || N.key === "Delete") && B.value && y.value === "" && C.value && k.value.length > 0 ? H(k.value[k.value.length - 1]) : C.value = !0;
    }, re = (N) => {
      var ne;
      if (N = (N || y.value).trim(), N === "" || w.value || !a.tagValidator(N) || a.limit && L.value)
        return;
      const X = [...a.modelValue, N];
      y.value = "", C.value = !0, t("update:modelValue", X), t("input", X), (ne = T.value) == null || ne.focus();
    }, H = (N) => {
      var ne;
      const X = k.value.indexOf((ne = N == null ? void 0 : N.toString()) != null ? ne : "");
      E.value = k.value.splice(X, 1).toString(), t("update:modelValue", k.value);
    };
    return $e(() => {
      ie(), a.modelValue.length > 0 && (C.value = !0);
    }), Gt(() => ie()), (N, X) => (d(), g("div", {
      id: o(l),
      class: F(["b-form-tags form-control h-auto", o(x)]),
      role: "group",
      tabindex: "-1",
      onFocusin: K,
      onFocusout: X[1] || (X[1] = (ne) => t("focusout", ne))
    }, [
      M("output", {
        id: `${o(l)}selected_tags__`,
        class: "visually-hidden",
        role: "status",
        for: o(b),
        "aria-live": q.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, G(k.value.join(", ")), 9, oi),
      M("div", {
        id: `${o(l)}removed_tags__`,
        role: "status",
        "aria-live": q.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + G(e.tagRemovedLabel) + ") " + G(E.value), 9, si),
      h(N.$slots, "default", he(we(o(Q))), () => [
        M("ul", {
          id: `${o(l)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (d(!0), g(oe, null, ve(k.value, (ne, Y) => h(N.$slots, "tag", he(J({ key: Y }, { tag: ne, tagClass: e.tagClass, tagVariant: e.tagVariant, tagPills: o(V), removeTag: H })), () => [
            fe(Sl, {
              class: F(e.tagClass),
              tag: "li",
              variant: e.tagVariant,
              pill: e.tagPills,
              onRemove: H
            }, {
              default: D(() => [
                ee(G(ne), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"])
          ])), 128)),
          M("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${o(l)}tag_list__`
          }, [
            M("div", ui, [
              M("input", J({
                id: o(b),
                ref_key: "input",
                ref: T,
                disabled: o(f),
                value: y.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: o(m),
                onInput: ge,
                onChange: ye,
                onKeydown: pe,
                onFocus: me,
                onBlur: ae
              }), null, 16, di),
              o(te) ? (d(), g("button", {
                key: 0,
                type: "button",
                class: F(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": y.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: o(f) || y.value.length === 0 || o(L),
                onClick: X[0] || (X[0] = (ne) => re(y.value))
              }, [
                h(N.$slots, "add-button-text", {}, () => [
                  ee(G(e.addButtonText), 1)
                ])
              ], 10, ci)) : U("", !0)
            ])
          ], 8, ri)
        ], 8, ii),
        M("div", fi, [
          o(P) ? (d(), g("div", vi, G(e.invalidTagText) + ": " + G(y.value), 1)) : U("", !0),
          o(w) ? (d(), g("small", mi, G(e.duplicateTagText) + ": " + G(y.value), 1)) : U("", !0),
          k.value.length === e.limit ? (d(), g("small", bi, "Tag limit reached")) : U("", !0)
        ])
      ]),
      e.name ? (d(!0), g(oe, { key: 0 }, ve(k.value, (ne, Y) => (d(), g("input", {
        key: Y,
        type: "hidden",
        name: e.name,
        value: ne
      }, null, 8, gi))), 128)) : U("", !0)
    ], 42, ni));
  }
}), hi = A({
  props: {
    ...el,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: u, onChange: f, onBlur: c, focus: v, blur: p } = tl(e, t), B = r(s(e, "noResize")), m = i(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), $ = i(
      () => B.value ? { resize: "none" } : void 0
    );
    return {
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: u,
      onChange: f,
      onBlur: c,
      focus: v,
      blur: p,
      computedClasses: m,
      computedStyles: $
    };
  }
}), yi = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Bi(e, t, a, l, n, u) {
  return d(), g("textarea", J({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: e.computedStyles,
    wrap: e.wrap || void 0
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (f) => e.onInput(f)),
    onChange: t[1] || (t[1] = (f) => e.onChange(f)),
    onBlur: t[2] || (t[2] = (f) => e.onBlur(f))
  }), null, 16, yi);
}
const $i = /* @__PURE__ */ _e(hi, [["render", Bi]]), ki = {
  key: 0,
  class: "input-group-text"
}, Ci = ["innerHTML"], Si = { key: 1 }, wi = {
  key: 0,
  class: "input-group-text"
}, Ti = ["innerHTML"], _i = { key: 1 }, Vi = /* @__PURE__ */ A({
  __name: "BInputGroup",
  props: {
    append: null,
    appendHtml: null,
    id: null,
    prepend: null,
    prependHtml: null,
    size: null,
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = i(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = i(() => !!t.append || !!t.appendHtml), n = i(() => !!t.prepend || !!t.prependHtml);
    return (u, f) => (d(), O(Z(e.tag), {
      id: e.id,
      class: F(["input-group", o(a)]),
      role: "group"
    }, {
      default: D(() => [
        h(u.$slots, "prepend", {}, () => [
          o(n) ? (d(), g("span", ki, [
            e.prependHtml ? (d(), g("span", {
              key: 0,
              innerHTML: e.prependHtml
            }, null, 8, Ci)) : (d(), g("span", Si, G(e.prepend), 1))
          ])) : U("", !0)
        ]),
        h(u.$slots, "default"),
        h(u.$slots, "append", {}, () => [
          o(l) ? (d(), g("span", wi, [
            e.appendHtml ? (d(), g("span", {
              key: 0,
              innerHTML: e.appendHtml
            }, null, 8, Ti)) : (d(), g("span", _i, G(e.append), 1))
          ])) : U("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), wl = /* @__PURE__ */ A({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: null
  },
  setup(e) {
    return (t, a) => (d(), O(Z(e.tag), { class: "input-group-text" }, {
      default: D(() => [
        h(t.$slots, "default", {}, () => [
          ee(G(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), ea = /* @__PURE__ */ A({
  __name: "BInputGroupAddon",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "isText"));
    return (l, n) => o(a) ? (d(), O(wl, { key: 0 }, {
      default: D(() => [
        h(l.$slots, "default")
      ]),
      _: 3
    })) : h(l.$slots, "default", { key: 1 });
  }
}), Ai = /* @__PURE__ */ A({
  __name: "BInputGroupAppend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), O(ea, { "is-text": e.isText }, {
      default: D(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), xi = /* @__PURE__ */ A({
  __name: "BInputGroupPrepend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), O(ea, { "is-text": e.isText }, {
      default: D(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), Tl = Symbol(), Ii = /* @__PURE__ */ A({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(s(t, "flush")), l = r(s(t, "numbered")), n = i(() => {
      const f = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": f === !0,
        [`list-group-horizontal-${f}`]: typeof f == "string",
        "list-group-numbered": l.value
      };
    }), u = i(() => l.value === !0 ? "ol" : t.tag);
    return Je(Tl, {
      numbered: l.value
    }), (f, c) => (d(), O(Z(o(u)), {
      class: F(["list-group", o(n)])
    }, {
      default: D(() => [
        h(f.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Fi = /* @__PURE__ */ A({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: null,
    tag: { default: "div" },
    target: { default: "_self" },
    to: null,
    variant: null
  },
  setup(e) {
    const t = e, a = Ia(), l = He(Tl, null), n = r(s(t, "action")), u = r(s(t, "active")), f = r(s(t, "button")), c = r(s(t, "disabled")), v = i(() => !f.value && (!!t.href || !!t.to)), p = i(
      () => l != null && l.numbered ? "li" : f.value ? "button" : v.value ? Ae : t.tag
    ), B = i(
      () => n.value || v.value || f.value || ["a", "router-link", "button", "b-link"].includes(t.tag)
    ), m = i(() => ({
      [`list-group-item-${t.variant}`]: t.variant !== void 0,
      "list-group-item-action": B.value,
      active: u.value,
      disabled: c.value
    })), $ = i(() => {
      const V = {};
      return f.value && ((!a || !a.type) && (V.type = "button"), c.value && (V.disabled = !0)), V;
    });
    return (V, T) => (d(), O(Z(o(p)), J({
      class: ["list-group-item", o(m)],
      "aria-current": o(u) ? !0 : void 0,
      "aria-disabled": o(c) ? !0 : void 0,
      target: o(v) ? e.target : void 0,
      href: o(f) ? void 0 : e.href,
      to: o(f) ? void 0 : e.to
    }, o($)), {
      default: D(() => [
        h(V.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), Pi = ["id", "aria-labelledby", "aria-describedby"], Oi = ["id"], Li = {
  inheritAttrs: !1
}, zi = /* @__PURE__ */ A({
  ...Li,
  __name: "BModal",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTextVariant: null,
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: null,
    dialogClass: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerTextVariant: null,
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: null,
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: null,
    modalClass: null,
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    noFocus: { default: !1 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: null,
    title: null,
    titleClass: null,
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" },
    static: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "ok", "cancel", "close"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = ke(s(a, "id"), "modal"), u = r(s(a, "busy")), f = r(s(a, "lazy")), c = r(s(a, "cancelDisabled")), v = r(s(a, "centered")), p = r(s(a, "hideBackdrop")), B = r(s(a, "hideFooter")), m = r(s(a, "hideHeader")), $ = r(s(a, "hideHeaderClose")), V = r(s(a, "modelValue")), T = r(s(a, "noCloseOnBackdrop")), b = r(s(a, "noCloseOnEsc")), k = r(s(a, "noFade")), y = r(s(a, "noFocus")), C = r(s(a, "okDisabled")), q = r(s(a, "okOnly")), E = r(s(a, "scrollable")), I = r(s(a, "titleSrOnly")), _ = r(s(a, "static")), z = W(!1), x = W(null), w = W(!1), P = i(() => [
      a.modalClass,
      {
        fade: !k.value,
        show: z.value
      }
    ]), L = i(() => !Ve(l["header-close"])), te = i(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== void 0,
        "modal-dialog-centered": v.value,
        "modal-dialog-scrollable": E.value
      }
    ]), Q = i(() => [
      a.bodyClass,
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant !== void 0,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant !== void 0
      }
    ]), ie = i(() => [
      a.headerClass,
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant !== void 0,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== void 0,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant !== void 0
      }
    ]), K = i(() => [
      a.footerClass,
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant !== void 0,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== void 0,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant !== void 0
      }
    ]), me = i(() => [
      a.titleClass,
      {
        ["visually-hidden"]: I.value
      }
    ]), ae = i(() => c.value || u.value), ge = i(() => C.value || u.value), ye = (Y, se = {}) => new sn(Y, {
      cancelable: !1,
      target: x.value || null,
      relatedTarget: null,
      trigger: null,
      ...se,
      componentId: n.value
    }), pe = (Y = "") => {
      const se = ye("hide", { cancelable: Y !== "", trigger: Y });
      if (Y === "ok" && t(Y, se), Y === "cancel" && t(Y, se), Y === "close" && t(Y, se), t("hide", se), se.defaultPrevented || Y === "backdrop" && T.value || Y === "esc" && b.value) {
        t("update:modelValue", !0), t("hide-prevented");
        return;
      }
      t("update:modelValue", !1);
    }, re = () => {
      const Y = ye("show", { cancelable: !0 });
      if (t("show", Y), Y.defaultPrevented) {
        t("update:modelValue", !1), t("show-prevented");
        return;
      }
      t("update:modelValue", !0);
    }, H = () => re(), N = () => {
      z.value = !0, t("shown", ye("shown")), f.value === !0 && (w.value = !0);
    }, X = () => {
      z.value = !1;
    }, ne = () => {
      t("hidden", ye("hidden")), f.value === !0 && (w.value = !1);
    };
    return ce(
      () => V.value,
      (Y) => {
        Y === !0 && !y.value && qe(() => {
          x.value !== null && x.value.focus();
        });
      }
    ), (Y, se) => (d(), O(Yl, {
      to: "body",
      disabled: o(_)
    }, [
      fe(St, {
        "no-fade": !0,
        "trans-props": { enterToClass: "show" },
        onBeforeEnter: H,
        onAfterEnter: N,
        onLeave: X,
        onAfterLeave: ne
      }, {
        default: D(() => [
          Ye(M("div", J({
            id: o(n),
            ref_key: "element",
            ref: x,
            class: ["modal", o(P)],
            role: "dialog",
            "aria-labelledby": `${o(n)}-label`,
            "aria-describedby": `${o(n)}-body`,
            tabindex: "-1"
          }, Y.$attrs, {
            onKeyup: se[5] || (se[5] = Zl((Te) => pe("esc"), ["esc"]))
          }), [
            M("div", {
              class: F(["modal-dialog", o(te)])
            }, [
              !o(f) || o(f) && w.value || o(f) && o(V) === !0 ? (d(), g("div", {
                key: 0,
                class: F(["modal-content", e.contentClass])
              }, [
                o(m) ? U("", !0) : (d(), g("div", {
                  key: 0,
                  class: F(["modal-header", o(ie)])
                }, [
                  h(Y.$slots, "header", {}, () => [
                    (d(), O(Z(e.titleTag), {
                      id: `${o(n)}-label`,
                      class: F(["modal-title", o(me)])
                    }, {
                      default: D(() => [
                        h(Y.$slots, "title", {}, () => [
                          ee(G(e.title), 1)
                        ], !0)
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    o($) ? U("", !0) : (d(), g(oe, { key: 0 }, [
                      o(L) ? (d(), g("button", {
                        key: 0,
                        type: "button",
                        onClick: se[0] || (se[0] = (Te) => pe("close"))
                      }, [
                        h(Y.$slots, "header-close", {}, void 0, !0)
                      ])) : (d(), O(Ze, {
                        key: 1,
                        "aria-label": e.headerCloseLabel,
                        white: e.headerCloseWhite,
                        onClick: se[1] || (se[1] = (Te) => pe("close"))
                      }, null, 8, ["aria-label", "white"]))
                    ], 64))
                  ], !0)
                ], 2)),
                M("div", {
                  id: `${o(n)}-body`,
                  class: F(["modal-body", o(Q)])
                }, [
                  h(Y.$slots, "default", {}, void 0, !0)
                ], 10, Oi),
                o(B) ? U("", !0) : (d(), g("div", {
                  key: 1,
                  class: F(["modal-footer", o(K)])
                }, [
                  h(Y.$slots, "footer", {}, () => [
                    h(Y.$slots, "cancel", {}, () => [
                      o(q) ? U("", !0) : (d(), O(lt, {
                        key: 0,
                        type: "button",
                        class: "btn",
                        disabled: o(ae),
                        size: e.buttonSize,
                        variant: e.cancelVariant,
                        onClick: se[2] || (se[2] = (Te) => pe("cancel"))
                      }, {
                        default: D(() => [
                          ee(G(e.cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ], !0),
                    h(Y.$slots, "ok", {}, () => [
                      fe(lt, {
                        type: "button",
                        class: "btn",
                        disabled: o(ge),
                        size: e.buttonSize,
                        variant: e.okVariant,
                        onClick: se[3] || (se[3] = (Te) => pe("ok"))
                      }, {
                        default: D(() => [
                          ee(G(e.okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ], !0)
                  ], !0)
                ], 2))
              ], 2)) : U("", !0)
            ], 2),
            o(p) ? U("", !0) : h(Y.$slots, "backdrop", { key: 0 }, () => [
              M("div", {
                class: "modal-backdrop fade show",
                onClick: se[4] || (se[4] = (Te) => pe("backdrop"))
              })
            ], !0)
          ], 16, Pi), [
            [Ql, o(V)]
          ])
        ]),
        _: 3
      })
    ], 8, ["disabled"]));
  }
});
const Ni = /* @__PURE__ */ _e(zi, [["__scopeId", "data-v-05140552"]]), Ei = /* @__PURE__ */ A({
  __name: "BNav",
  props: {
    align: null,
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "cardHeader")), l = r(s(t, "fill")), n = r(s(t, "justified")), u = r(s(t, "pills")), f = r(s(t, "small")), c = r(s(t, "tabs")), v = r(s(t, "vertical")), p = ot(s(t, "align")), B = i(() => ({
      "nav-tabs": c.value,
      "nav-pills": u.value && !c.value,
      "card-header-tabs": !v.value && a.value && c.value,
      "card-header-pills": !v.value && a.value && u.value && !c.value,
      "flex-column": v.value,
      "nav-fill": !v.value && l.value,
      "nav-justified": !v.value && n.value,
      [p.value]: !v.value && t.align !== void 0,
      small: f.value
    }));
    return (m, $) => (d(), O(Z(e.tag), {
      class: F(["nav", o(B)])
    }, {
      default: D(() => [
        h(m.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Di = /* @__PURE__ */ A({
  __name: "BNavForm",
  props: {
    role: null,
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = i(() => ({
      floating: a.floating,
      role: a.role,
      id: a.id,
      novalidate: a.novalidate,
      validated: a.validated
    })), n = (u) => t("submit", u);
    return (u, f) => (d(), O(yl, J(o(l), {
      class: "d-flex",
      onSubmit: Ut(n, ["prevent"])
    }), {
      default: D(() => [
        h(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["onSubmit"]));
  }
}), Hi = A({
  components: { BLink: Ae },
  props: {
    ...kt(Ge, ["event", "routerTag"])
  },
  setup(e) {
    return { disabledBoolean: r(s(e, "disabled")) };
  }
}), Ri = { class: "nav-item" };
function qi(e, t, a, l, n, u) {
  const f = xa("b-link");
  return d(), g("li", Ri, [
    fe(f, J({ class: "nav-link" }, e.$props, {
      "active-class": "active",
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: D(() => [
        h(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const Mi = /* @__PURE__ */ _e(Hi, [["render", qi]]), ji = { class: "nav-item dropdown" }, Gi = /* @__PURE__ */ A({
  __name: "BNavItemDropdown",
  props: {
    id: null,
    text: null,
    toggleClass: null,
    size: null,
    offset: null,
    autoClose: { type: [Boolean, String], default: !0 },
    dark: { type: Boolean, default: !1 },
    dropleft: { type: Boolean, default: !1 },
    dropright: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    right: { type: Boolean, default: !1 },
    left: { type: [Boolean, String], default: !1 },
    split: { type: Boolean, default: !1 },
    splitVariant: null,
    noCaret: { type: Boolean, default: !1 },
    variant: { default: "link" }
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), g("li", ji, [
      fe(hl, J(t, { "is-nav": "" }), Fa({ _: 2 }, [
        ve(a.$slots, (n, u, f) => ({
          name: u,
          fn: D((c) => [
            h(a.$slots, u, he(we(c || {})))
          ])
        }))
      ]), 1040)
    ]));
  }
}), Ui = { class: "navbar-text" }, Wi = /* @__PURE__ */ A({
  __name: "BNavText",
  props: {
    text: null
  },
  setup(e) {
    return (t, a) => (d(), g("li", Ui, [
      h(t.$slots, "default", {}, () => [
        ee(G(e.text), 1)
      ])
    ]));
  }
}), Ki = /* @__PURE__ */ A({
  __name: "BNavbar",
  props: {
    fixed: null,
    print: { default: !1 },
    sticky: null,
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: null,
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = r(s(t, "print")), l = r(s(t, "dark")), n = i(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), u = i(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), f = i(
      () => t.container === !0 ? "container" : "container-fluid"
    ), c = i(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${u.value}`]: u.value !== void 0
    }));
    return (v, p) => (d(), O(Z(e.tag), {
      class: F(["navbar", o(c)]),
      role: o(n)
    }, {
      default: D(() => [
        e.container !== !1 ? (d(), g("div", {
          key: 0,
          class: F(o(f))
        }, [
          h(v.$slots, "default")
        ], 2)) : h(v.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), ga = kt(Ge, ["event", "routerTag"]), Xi = A({
  components: {
    BLink: Ae
  },
  props: {
    tag: { type: String, default: "div" },
    ...ga
  },
  setup(e) {
    const t = i(() => at(e)), a = i(
      () => t.value ? Ae : e.tag
    );
    return {
      computedLinkProps: i(
        () => t.value ? Xt(e, ga) : {}
      ),
      computedTag: a
    };
  }
});
function Ji(e, t, a, l, n, u) {
  return d(), O(Z(e.computedTag), J({ class: "navbar-brand" }, e.computedLinkProps), {
    default: D(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const Yi = /* @__PURE__ */ _e(Xi, [["render", Ji]]), Zi = /* @__PURE__ */ A({
  __name: "BNavbarNav",
  props: {
    align: null,
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = r(s(t, "fill")), l = r(s(t, "justified")), n = r(s(t, "small")), u = ot(s(t, "align")), f = i(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [u.value]: t.align !== void 0,
      small: n.value
    }));
    return (c, v) => (d(), g("ul", {
      class: F(["navbar-nav", o(f)])
    }, [
      h(c.$slots, "default")
    ], 2));
  }
}), Qi = /* @__PURE__ */ M("span", { class: "navbar-toggler-icon" }, null, -1), er = /* @__PURE__ */ A({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "disabled")), n = i(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), u = i(() => ({
      disabled: l.value
    })), f = (c) => {
      l.value || t("click", c);
    };
    return (c, v) => Ye((d(), g("button", J({
      class: ["navbar-toggler", o(u)],
      type: "button"
    }, o(n), { onClick: f }), [
      h(c.$slots, "default", {}, () => [
        Qi
      ])
    ], 16)), [
      [o(Yt), o(l) ? void 0 : e.target]
    ]);
  }
}), tr = ["data-bs-backdrop", "data-bs-scroll"], ar = {
  key: 0,
  class: "offcanvas-header"
}, lr = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, nr = { class: "offcanvas-body" }, or = { key: 1 }, sr = /* @__PURE__ */ A({
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    placement: { default: "start" },
    title: null,
    noHeaderClose: { default: !1 },
    noHeader: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "modelValue")), n = r(s(a, "bodyScrolling")), u = r(s(a, "backdrop")), f = r(s(a, "noHeaderClose")), c = r(s(a, "noHeader")), v = Ce(), p = W(), B = W(), m = i(() => !Ve(v.footer)), $ = i(() => [`offcanvas-${a.placement}`]), V = () => {
      t("show"), t("update:modelValue", !0);
    }, T = () => {
      t("hide"), t("update:modelValue", !1);
    };
    return ce(
      () => l.value,
      (b) => {
        var k, y;
        b ? (k = B.value) == null || k.show(p.value) : (y = B.value) == null || y.hide();
      }
    ), Be(p, "shown.bs.offcanvas", () => t("shown")), Be(p, "hidden.bs.offcanvas", () => t("hidden")), Be(p, "show.bs.offcanvas", () => {
      V();
    }), Be(p, "hide.bs.offcanvas", () => {
      T();
    }), $e(() => {
      var b;
      B.value = new nn(p.value), l.value && ((b = B.value) == null || b.show(p.value));
    }), (b, k) => (d(), g("div", {
      ref_key: "element",
      ref: p,
      class: F(["offcanvas", o($)]),
      tabindex: "-1",
      "aria-labelledby": "offcanvasLabel",
      "data-bs-backdrop": o(u),
      "data-bs-scroll": o(n)
    }, [
      o(c) ? U("", !0) : (d(), g("div", ar, [
        h(b.$slots, "header", he(we({ visible: o(l), placement: e.placement, hide: T })), () => [
          M("h5", lr, [
            h(b.$slots, "title", {}, () => [
              ee(G(e.title), 1)
            ])
          ]),
          o(f) ? U("", !0) : (d(), O(Ze, {
            key: 0,
            class: "text-reset",
            "data-bs-dismiss": "offcanvas",
            "aria-label": e.dismissLabel
          }, null, 8, ["aria-label"]))
        ])
      ])),
      M("div", nr, [
        h(b.$slots, "default")
      ]),
      o(m) ? (d(), g("div", or, [
        h(b.$slots, "footer", he(we({ visible: o(l), placement: e.placement, hide: T })))
      ])) : U("", !0)
    ], 10, tr));
  }
}), ir = /* @__PURE__ */ A({
  __name: "BOverlay",
  props: {
    bgColor: null,
    blur: { default: "2px" },
    fixed: { default: !1 },
    noCenter: { default: !1 },
    noFade: { default: !1 },
    noWrap: { default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { default: !1 },
    spinnerSmall: { default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: null,
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { emit: t }) {
    const a = e, l = { top: 0, left: 0, bottom: 0, right: 0 }, n = r(s(a, "fixed")), u = r(s(a, "noCenter")), f = r(s(a, "noWrap")), c = r(s(a, "show")), v = r(s(a, "spinnerSmall")), p = i(
      () => a.rounded === !0 || a.rounded === "" ? "rounded" : a.rounded === !1 ? "" : `rounded-${a.rounded}`
    ), B = i(
      () => a.variant && !a.bgColor ? `bg-${a.variant}` : ""
    ), m = i(() => c.value ? "true" : null), $ = i(() => ({
      type: a.spinnerType || void 0,
      variant: a.spinnerVariant || void 0,
      small: v.value
    })), V = i(() => ({
      ...l,
      zIndex: a.zIndex || 10
    })), T = i(() => [
      "b-overlay",
      {
        "position-absolute": !f.value || !n.value,
        "position-fixed": f.value && n.value
      }
    ]), b = i(() => [B.value, p.value]), k = i(() => ({
      ...l,
      opacity: a.opacity,
      backgroundColor: a.bgColor || void 0,
      backdropFilter: blur ? `blur(${blur})` : void 0
    })), y = i(
      () => u.value ? l : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (C, q) => (d(), O(Z(e.wrapTag), {
      class: "b-overlay-wrap position-relative",
      "aria-busy": o(m)
    }, {
      default: D(() => [
        h(C.$slots, "default"),
        fe(St, {
          "no-fade": e.noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onOnAfterEnter: q[1] || (q[1] = (E) => t("shown")),
          onOnAfterLeave: q[2] || (q[2] = (E) => t("hidden"))
        }, {
          default: D(() => [
            o(c) ? (d(), O(Z(e.overlayTag), {
              key: 0,
              class: F(o(T)),
              style: Pe(o(V)),
              onClick: q[0] || (q[0] = (E) => t("click", E))
            }, {
              default: D(() => [
                M("div", {
                  class: F(["position-absolute", o(b)]),
                  style: Pe(o(k))
                }, null, 6),
                M("div", {
                  class: "position-absolute",
                  style: Pe(o(y))
                }, [
                  h(C.$slots, "overlay", he(we(o($))), () => [
                    fe(Ct, he(we(o($))), null, 16)
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : U("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["aria-busy"]));
  }
}), rr = 5, _l = 20, Vl = 0, Oe = 3, ur = "ellipsis-text", dr = "first-text", cr = "last-text", fr = "next-text", vr = "page", mr = "prev-text", pa = (e) => Math.max(Le(e) || _l, 1), ha = (e) => Math.max(Le(e) || Vl, 0), br = (e, t) => {
  const a = Le(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, gr = A({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "\u2026" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "\xAB" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "\xBB" },
    limit: { type: Number, default: rr },
    modelValue: { type: Number, default: 1 },
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "\u203A" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: _l },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "\u2039" },
    size: { type: String, required: !1 },
    totalRows: { type: Number, default: Vl }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = r(s(e, "disabled")), n = r(s(e, "firstNumber")), u = r(s(e, "hideEllipsis")), f = r(s(e, "hideGotoEndButtons")), c = r(s(e, "lastNumber")), v = r(s(e, "pills")), p = i(
      () => e.align === "fill" ? "start" : e.align
    ), B = ot(s(p, "value")), m = i(
      () => Math.ceil(ha(e.totalRows) / pa(e.perPage))
    ), $ = i(() => {
      let I;
      return m.value - e.modelValue + 2 < e.limit && e.limit > Oe ? I = m.value - T.value + 1 : I = e.modelValue - Math.floor(T.value / 2), I < 1 ? I = 1 : I > m.value - T.value && (I = m.value - T.value + 1), e.limit <= Oe && c.value && m.value === I + T.value - 1 && (I = Math.max(I - 1, 1)), I;
    }), V = i(() => {
      const I = m.value - e.modelValue;
      let _ = !1;
      return I + 2 < e.limit && e.limit > Oe ? e.limit > Oe && (_ = !0) : e.limit > Oe && (_ = !!(!u.value || n.value)), $.value <= 1 && (_ = !1), _ && n.value && $.value < 4 && (_ = !1), _;
    }), T = i(() => {
      let I = e.limit;
      return m.value <= e.limit ? I = m.value : e.modelValue < e.limit - 1 && e.limit > Oe ? ((!u.value || c.value) && (I = e.limit - (n.value ? 0 : 1)), I = Math.min(I, e.limit)) : m.value - e.modelValue + 2 < e.limit && e.limit > Oe ? (!u.value || n.value) && (I = e.limit - (c.value ? 0 : 1)) : e.limit > Oe && (I = e.limit - (u.value ? 0 : 2)), I;
    }), b = i(() => {
      const I = m.value - T.value;
      let _ = !1;
      e.modelValue < e.limit - 1 && e.limit > Oe ? (!u.value || c.value) && (_ = !0) : e.limit > Oe && (_ = !!(!u.value || c.value)), $.value > I && (_ = !1);
      const z = $.value + T.value - 1;
      return _ && c.value && z > m.value - 3 && (_ = !1), _;
    }), k = De({
      pageSize: pa(e.perPage),
      totalRows: ha(e.totalRows),
      numberOfPages: m.value
    }), y = (I, _) => {
      if (_ === e.modelValue)
        return;
      const { target: z } = I, x = new Xe("page-click", {
        cancelable: !0,
        target: z
      });
      t("page-click", x, _), !x.defaultPrevented && t("update:modelValue", _);
    }, C = i(() => e.size ? `pagination-${e.size}` : ""), q = i(() => v.value ? "b-pagination-pills" : "");
    ce(
      () => e.modelValue,
      (I) => {
        const _ = br(I, m.value);
        _ !== e.modelValue && t("update:modelValue", _);
      }
    ), ce(k, (I, _) => {
      I != null && (_.pageSize !== I.pageSize && _.totalRows === I.totalRows || _.numberOfPages !== I.numberOfPages && e.modelValue > _.numberOfPages) && t("update:modelValue", 1);
    });
    const E = i(() => {
      const I = [];
      for (let _ = 0; _ < T.value; _++)
        I.push({ number: $.value + _, classes: null });
      return I;
    });
    return () => {
      const I = [], _ = E.value.map((K) => K.number), z = (K) => K === e.modelValue, x = e.modelValue < 1, w = e.align === "fill", P = (K, me, ae, ge, ye, pe) => {
        const re = l.value || z(pe) || x || K < 1 || K > m.value, H = K < 1 ? 1 : K > m.value ? m.value : K, N = { disabled: re, page: H, index: H - 1 }, X = Fe(ae, N, a) || ge || "";
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: re,
                "flex-fill": w,
                "d-flex": w && !re
              },
              ye
            ]
          },
          le(
            re ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !re && w }],
              "aria-label": me,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": re ? "true" : null,
              role: "menuitem",
              type: re ? null : "button",
              tabindex: re ? null : "-1",
              onClick: (ne) => {
                re || y(ne, H);
              }
            },
            X
          )
        );
      }, L = (K) => le(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            w ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${K ? "last" : "first"}`
        },
        [
          le(
            "span",
            { class: ["page-link"] },
            Fe(ur, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), te = (K, me) => {
        const ae = z(K.number) && !x, ge = l.value ? null : ae || x && me === 0 ? "0" : "-1", ye = {
          active: ae,
          disabled: l.value,
          page: K.number,
          index: K.number - 1,
          content: K.number
        }, pe = Fe(vr, ye, a) || K.number, re = le(
          l.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !l.value && w }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": l.value ? "true" : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${K.number}` : null,
            role: "menuitemradio",
            type: l.value ? null : "button",
            tabindex: ge,
            onClick: (H) => {
              l.value || y(H, K.number);
            }
          },
          pe
        );
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: l.value,
                active: ae,
                "flex-fill": w,
                "d-flex": w && !l.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${K.number}`
          },
          re
        );
      };
      if (!f.value && !n.value) {
        const K = P(
          1,
          e.labelFirstPage,
          dr,
          e.firstText,
          e.firstClass,
          1
        );
        I.push(K);
      }
      const Q = P(
        e.modelValue - 1,
        e.labelFirstPage,
        mr,
        e.prevText,
        e.prevClass,
        1
      );
      I.push(Q), n.value && _[0] !== 1 && I.push(te({ number: 1 }, 0)), V.value && I.push(L(!1)), E.value.forEach((K, me) => {
        const ae = V.value && n.value && _[0] !== 1 ? 1 : 0;
        I.push(te(K, me + ae));
      }), b.value && I.push(L(!0)), c.value && _[_.length - 1] !== m.value && I.push(te({ number: m.value }, -1));
      const ie = P(
        e.modelValue + 1,
        e.labelNextPage,
        fr,
        e.nextText,
        e.nextClass,
        m.value
      );
      if (I.push(ie), !c.value && !f.value) {
        const K = P(
          m.value,
          e.labelLastPage,
          cr,
          e.lastText,
          e.lastClass,
          m.value
        );
        I.push(K);
      }
      return le(
        "ul",
        {
          class: ["pagination", C.value, B.value, q.value],
          role: "menubar",
          "aria-disabled": l.value,
          "aria-label": e.ariaLabel || null
        },
        I
      );
    };
  }
}), Ie = /* @__PURE__ */ A({
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    width: null,
    cols: null,
    variant: null,
    size: null,
    animation: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.includes("%") ? t.width.replaceAll("%", "") : t.width
    ), l = i(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), n = i(() => ({
      [`col-${l.value}`]: l.value !== void 0 && a.value === void 0,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`placeholder-${t.size}`]: t.size !== void 0,
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), u = i(
      () => a.value === void 0 ? void 0 : `width: ${a.value}%;`
    );
    return (f, c) => (d(), O(Z(e.tag), {
      class: F(["placeholder", o(n)]),
      style: Pe(o(u))
    }, null, 8, ["class", "style"]));
  }
}), Al = /* @__PURE__ */ A({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: null,
    cols: null,
    variant: { default: "primary" },
    animation: null
  },
  setup(e) {
    const t = e, a = i(() => ["btn", `btn-${t.variant}`, "disabled"]), l = i(() => ({
      animation: t.animation,
      width: t.width,
      cols: t.cols,
      tag: t.tag
    }));
    return (n, u) => (d(), O(Ie, J({ class: o(a) }, o(l)), null, 16, ["class"]));
  }
}), pr = /* @__PURE__ */ A({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { default: !1 },
    headerWidth: { default: 100 },
    headerVariant: null,
    headerAnimation: null,
    headerSize: null,
    noFooter: { default: !1 },
    footerWidth: { default: 100 },
    footerVariant: null,
    footerAnimation: null,
    footerSize: null,
    animation: null,
    size: null,
    variant: null,
    noButton: { default: !1 },
    imgBottom: { default: !1 },
    imgSrc: null,
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "noButton")), l = r(s(t, "noHeader")), n = r(s(t, "noFooter")), u = r(s(t, "noImg")), f = i(() => ({
      width: t.headerWidth,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      size: t.headerSize
    })), c = i(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: a.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), v = i(() => ({
      blank: !t.imgSrc,
      blankColor: t.imgBlankColor,
      height: t.imgSrc ? void 0 : t.imgHeight,
      src: t.imgSrc,
      top: !t.imgBottom,
      bottom: t.imgBottom
    }));
    return (p, B) => (d(), O(vl, { "img-bottom": e.imgBottom }, Fa({
      default: D(() => [
        h(p.$slots, "default", {}, () => [
          fe(Ie, { cols: "7" }),
          fe(Ie, { cols: "4" }),
          fe(Ie, { cols: "4" }),
          fe(Ie, { cols: "6" }),
          fe(Ie, { cols: "8" })
        ])
      ]),
      _: 2
    }, [
      o(u) ? void 0 : {
        name: "img",
        fn: D(() => [
          h(p.$slots, "img", {}, () => [
            fe(pt, he(we(o(v))), null, 16)
          ])
        ]),
        key: "0"
      },
      o(l) ? void 0 : {
        name: "header",
        fn: D(() => [
          h(p.$slots, "header", {}, () => [
            fe(Ie, he(we(o(f))), null, 16)
          ])
        ]),
        key: "1"
      },
      o(n) ? void 0 : {
        name: "footer",
        fn: D(() => [
          h(p.$slots, "footer", {}, () => [
            o(a) ? (d(), O(Ie, he(J({ key: 1 }, o(c))), null, 16)) : (d(), O(Al, he(J({ key: 0 }, o(c))), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), wt = /* @__PURE__ */ A({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: null,
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: null,
    tableVariant: null,
    stickyHeader: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "captionTop")), l = r(s(t, "borderless")), n = r(s(t, "bordered")), u = r(s(t, "dark")), f = r(s(t, "hover")), c = r(s(t, "small")), v = r(s(t, "striped")), p = r(s(t, "stickyHeader")), B = i(() => [
      "table",
      "b-table",
      {
        "table-bordered": n.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": u.value,
        "table-hover": f.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": v.value,
        "table-sm": c.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), m = i(() => [
      {
        "table-responsive": t.responsive === !0,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
        "b-table-sticky-header": p.value
      }
    ]);
    return ($, V) => e.responsive ? (d(), g("div", {
      key: 1,
      class: F(o(m))
    }, [
      M("table", {
        role: "table",
        class: F(o(B))
      }, [
        h($.$slots, "default")
      ], 2)
    ], 2)) : (d(), g("table", {
      key: 0,
      role: "table",
      class: F(o(B))
    }, [
      h($.$slots, "default")
    ], 2));
  }
}), hr = /* @__PURE__ */ A({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: null,
    animation: null,
    variant: null,
    headerColumns: null,
    hideHeader: { default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: null,
    headerAnimation: null,
    headerVariant: null,
    footerColumns: null,
    showFooter: { default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: null,
    footerAnimation: null,
    footerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => typeof t.columns == "string" ? Qe(t.columns, 5) : t.columns
    ), l = i(
      () => typeof t.rows == "string" ? Qe(t.rows, 3) : t.rows
    ), n = i(
      () => t.headerColumns === void 0 ? a.value : typeof t.headerColumns == "string" ? Qe(t.headerColumns, a.value) : t.headerColumns
    ), u = i(
      () => t.footerColumns === void 0 ? a.value : typeof t.footerColumns == "string" ? Qe(t.footerColumns, a.value) : t.footerColumns
    ), f = i(() => ({
      size: t.size,
      variant: t.variant,
      animation: t.animation,
      width: t.cellWidth
    })), c = i(() => ({
      size: t.headerSize,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      width: t.headerCellWidth
    })), v = i(() => ({
      size: t.footerSize,
      variant: t.footerVariant,
      animation: t.footerAnimation,
      width: t.footerCellWidth
    })), p = r(s(t, "hideHeader")), B = r(s(t, "showFooter"));
    return (m, $) => (d(), O(wt, null, {
      default: D(() => [
        o(p) ? U("", !0) : h(m.$slots, "thead", { key: 0 }, () => [
          M("thead", null, [
            M("tr", null, [
              (d(!0), g(oe, null, ve(o(n), (V, T) => (d(), g("th", { key: T }, [
                fe(Ie, he(we(o(c))), null, 16)
              ]))), 128))
            ])
          ])
        ]),
        h(m.$slots, "default", {}, () => [
          M("tbody", null, [
            (d(!0), g(oe, null, ve(o(l), (V, T) => (d(), g("tr", { key: T }, [
              (d(!0), g(oe, null, ve(o(a), (b, k) => (d(), g("td", { key: k }, [
                fe(Ie, he(we(o(f))), null, 16)
              ]))), 128))
            ]))), 128))
          ])
        ]),
        o(B) ? h(m.$slots, "tfoot", { key: 1 }, () => [
          M("tfoot", null, [
            M("tr", null, [
              (d(!0), g(oe, null, ve(o(u), (V, T) => (d(), g("th", { key: T }, [
                fe(Ie, he(we(o(v))), null, 16)
              ]))), 128))
            ])
          ])
        ]) : U("", !0)
      ]),
      _: 3
    }));
  }
}), yr = /* @__PURE__ */ A({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "loading"));
    return (l, n) => o(a) ? h(l.$slots, "loading", { key: 0 }) : h(l.$slots, "default", { key: 1 });
  }
}), Br = A({
  props: {
    container: {
      type: [String, Object],
      default: "body"
    },
    content: { type: String },
    id: { type: String },
    customClass: { type: String, default: "" },
    noninteractive: { type: [Boolean, String], default: !1 },
    placement: { type: String, default: "right" },
    target: {
      type: [String, Object],
      default: void 0
    },
    title: { type: String },
    delay: { type: [Number, Object], default: 0 },
    triggers: { type: String, default: "click" },
    show: { type: [Boolean, String], default: !1 },
    variant: { type: String, default: void 0 },
    html: { type: [Boolean, String], default: !0 },
    sanitize: { type: [Boolean, String], default: !1 },
    offset: { type: String, default: "0" }
  },
  emits: ["show", "shown", "hide", "hidden", "inserted"],
  setup(e, { emit: t, slots: a }) {
    r(s(e, "noninteractive"));
    const l = r(s(e, "show")), n = r(s(e, "html")), u = r(s(e, "sanitize")), f = W(), c = W(), v = W(), p = W(), B = W(), m = i(() => ({
      [`b-popover-${e.variant}`]: e.variant !== void 0
    })), $ = (b) => {
      if (typeof b == "string")
        return b;
      if (b instanceof HTMLElement)
        return b;
      if (typeof b < "u")
        return b.$el;
    }, V = (b) => {
      if (!!b) {
        if (typeof b == "string") {
          const k = document.getElementById(b);
          return k || void 0;
        }
        return b;
      }
    }, T = (b) => {
      c.value = V($(b)), c.value && (v.value = new Ft(c.value, {
        customClass: e.customClass,
        container: $(e.container),
        trigger: e.triggers,
        placement: e.placement,
        title: e.title || a.title ? p.value : "",
        content: B.value,
        html: n.value,
        delay: e.delay,
        sanitize: u.value,
        offset: e.offset
      }));
    };
    return ce(
      () => e.target,
      (b) => {
        var k;
        (k = v.value) == null || k.dispose(), T(b);
      }
    ), ce(
      () => l.value,
      (b, k) => {
        var y, C;
        b !== k && (b ? (y = v.value) == null || y.show() : (C = v.value) == null || C.hide());
      }
    ), Be(c, "show.bs.popover", () => t("show")), Be(c, "shown.bs.popover", () => t("shown")), Be(c, "hide.bs.popover", () => t("hide")), Be(c, "hidden.bs.popover", () => t("hidden")), Be(c, "inserted.bs.popover", () => t("inserted")), $e(() => {
      var b, k, y;
      qe(() => {
        T(e.target);
      }), (k = (b = f.value) == null ? void 0 : b.parentNode) == null || k.removeChild(f.value), l.value && ((y = v.value) == null || y.show());
    }), jt(() => {
      var b;
      (b = v.value) == null || b.dispose();
    }), {
      element: f,
      titleRef: p,
      contentRef: B,
      computedClasses: m
    };
  }
}), $r = ["id"], kr = { ref: "titleRef" }, Cr = { ref: "contentRef" };
function Sr(e, t, a, l, n, u) {
  return d(), g("div", {
    id: e.id,
    ref: "element",
    class: F(["popover b-popover", e.computedClasses]),
    role: "tooltip",
    tabindex: "-1"
  }, [
    M("div", kr, [
      h(e.$slots, "title", {}, () => [
        ee(G(e.title), 1)
      ])
    ], 512),
    M("div", Cr, [
      h(e.$slots, "default", {}, () => [
        ee(G(e.content), 1)
      ])
    ], 512)
  ], 10, $r);
}
const wr = /* @__PURE__ */ _e(Br, [["render", Sr]]), Tr = ["aria-valuenow", "aria-valuemax"], xl = /* @__PURE__ */ A({
  __name: "BProgressBar",
  props: {
    animated: { default: !1 },
    label: null,
    labelHtml: null,
    max: null,
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 },
    variant: null
  },
  setup(e) {
    const t = e, a = He(Il), l = r(s(t, "animated")), n = r(s(t, "showProgress")), u = r(s(t, "showValue")), f = r(s(t, "striped")), c = i(() => ({
      "progress-bar-animated": l.value || (a == null ? void 0 : a.animated),
      "progress-bar-striped": f.value || (a == null ? void 0 : a.striped) || l.value || (a == null ? void 0 : a.animated),
      [`bg-${t.variant}`]: t.variant !== void 0
    })), v = i(
      () => typeof t.precision == "number" ? t.precision : Number.parseFloat(t.precision)
    ), p = i(
      () => typeof t.value == "number" ? t.value : Number.parseFloat(t.value)
    ), B = i(
      () => typeof t.max == "number" ? t.max : t.max === void 0 ? void 0 : Number.parseFloat(t.max)
    ), m = i(
      () => t.labelHtml !== void 0 ? t.labelHtml : u.value || (a == null ? void 0 : a.showValue) ? p.value.toFixed(v.value) : n.value || (a == null ? void 0 : a.showProgress) ? (p.value * 100 / (B.value || 100)).toFixed(v.value) : t.label !== void 0 ? t.label : ""
    ), $ = i(
      () => a != null && a.max ? `${p.value * 100 / (typeof a.max == "number" ? a.max : Number.parseInt(a.max))}%` : t.max ? `${p.value * 100 / (typeof t.max == "number" ? t.max : Number.parseInt(t.max))}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (V, T) => (d(), g("div", {
      class: F(["progress-bar", o(c)]),
      role: "progressbar",
      "aria-valuenow": e.value,
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      style: Pe({ width: o($) })
    }, [
      h(V.$slots, "default", {}, () => [
        ee(G(o(m)), 1)
      ])
    ], 14, Tr));
  }
}), Il = Symbol(), _r = /* @__PURE__ */ A({
  __name: "BProgress",
  props: {
    variant: null,
    max: null,
    height: null,
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = r(s(t, "animated")), l = r(s(t, "showProgress")), n = r(s(t, "showValue")), u = r(s(t, "striped")), f = i(() => ({
      animated: t.animated,
      max: t.max,
      precision: t.precision,
      showProgress: t.showProgress,
      showValue: t.showValue,
      striped: t.striped,
      value: t.value,
      variant: t.variant
    }));
    return Je(Il, {
      animated: a.value,
      max: t.max,
      showProgress: l.value,
      showValue: n.value,
      striped: u.value
    }), (c, v) => (d(), g("div", {
      class: "progress",
      style: Pe({ height: e.height })
    }, [
      h(c.$slots, "default", {}, () => [
        fe(xl, he(we(o(f))), null, 16)
      ])
    ], 4));
  }
}), ya = Bt("cols", [""], { type: [String, Number], default: null }), Vr = A({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...ya
  },
  setup(e) {
    const t = r(s(e, "noGutters")), a = ot(s(e, "alignH")), l = i(() => ja(e, ya, "cols", "row-cols"));
    return {
      computedClasses: i(() => [
        l.value,
        {
          [`gx-${e.gutterX}`]: e.gutterX !== null,
          [`gy-${e.gutterY}`]: e.gutterY !== null,
          "g-0": t.value,
          [`align-items-${e.alignV}`]: e.alignV !== null,
          [a.value]: e.alignH !== null,
          [`align-content-${e.alignContent}`]: e.alignContent !== null
        }
      ])
    };
  }
});
function Ar(e, t, a, l, n, u) {
  return d(), O(Z(e.tag), {
    class: F(["row", e.computedClasses])
  }, {
    default: D(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const xr = /* @__PURE__ */ _e(Vr, [["render", Ar]]), vt = /* @__PURE__ */ A({
  __name: "BSkeleton",
  props: {
    height: null,
    width: null,
    size: null,
    animation: { default: "wave" },
    type: { default: "text" },
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => [
      `b-skeleton-${t.type}`,
      {
        [`b-skeleton-animate-${t.animation}`]: typeof t.animation == "boolean" ? !1 : t.animation,
        [`bg-${t.variant}`]: t.variant !== void 0
      }
    ]), l = i(() => ({
      width: t.size || t.width,
      height: t.size || t.height
    }));
    return (n, u) => (d(), g("div", {
      class: F(["b-skeleton", o(a)]),
      style: Pe(o(l))
    }, null, 6));
  }
}), Ir = /* @__PURE__ */ A({
  __name: "BSkeletonIcon",
  props: {
    animation: { default: "wave" }
  },
  setup(e) {
    const t = e, a = i(() => [`b-skeleton-animate-${t.animation}`]);
    return (l, n) => (d(), g("div", {
      class: F(["b-skeleton-icon-wrapper position-relative d-inline-block overflow-hidden", o(a)])
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), Fr = { key: 0 }, Pr = { key: 1 }, Or = /* @__PURE__ */ A({
  __name: "BSkeletonTable",
  props: {
    animation: { default: "wave" },
    columns: { default: 5 },
    hideHeader: { default: !1 },
    rows: { default: 3 },
    showFooter: { default: !1 },
    tableProps: null
  },
  setup(e) {
    const t = e, a = r(s(t, "hideHeader")), l = r(s(t, "showFooter"));
    return (n, u) => (d(), O(wt, he(we(e.tableProps)), {
      default: D(() => [
        o(a) ? U("", !0) : (d(), g("thead", Fr, [
          M("tr", null, [
            (d(!0), g(oe, null, ve(e.columns, (f, c) => (d(), g("th", { key: c }, [
              fe(vt)
            ]))), 128))
          ])
        ])),
        M("tbody", null, [
          (d(!0), g(oe, null, ve(e.rows, (f, c) => (d(), g("tr", { key: c }, [
            (d(!0), g(oe, null, ve(e.columns, (v, p) => (d(), g("td", { key: p }, [
              fe(vt, { width: "75%" })
            ]))), 128))
          ]))), 128))
        ]),
        o(l) ? (d(), g("tfoot", Pr, [
          M("tr", null, [
            (d(!0), g(oe, null, ve(e.columns, (f, c) => (d(), g("th", { key: c }, [
              fe(vt)
            ]))), 128))
          ])
        ])) : U("", !0)
      ]),
      _: 1
    }, 16));
  }
}), Lr = /* @__PURE__ */ A({
  __name: "BSkeletonWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "loading"));
    return (l, n) => o(a) ? h(l.$slots, "loading", { key: 0 }) : h(l.$slots, "default", { key: 1 });
  }
}), Ba = [
  "ar",
  "az",
  "ckb",
  "fa",
  "he",
  "ks",
  "lrc",
  "mzn",
  "ps",
  "sd",
  "te",
  "ug",
  "ur",
  "yi"
].map((e) => e.toLowerCase()), zr = (e) => {
  const t = mt(e).toLowerCase().replace(vn, "").split("-"), a = t.slice(0, 2).join("-"), l = t[0];
  return Ba.includes(a) || Ba.includes(l);
}, Nr = (e) => hn ? Pt(e) ? e : { capture: !!e || !1 } : !!(Pt(e) ? e.capture : e), Er = (e, t, a, l) => {
  e && e.addEventListener && e.addEventListener(t, a, Nr(l));
}, Dr = (e, t, a, l) => {
  e && e.removeEventListener && e.removeEventListener(t, a, l);
}, $a = (e, t) => {
  (e ? Er : Dr)(...t);
}, rt = (e, { preventDefault: t = !0, propagation: a = !0, immediatePropagation: l = !1 } = {}) => {
  t && e.preventDefault(), a && e.stopPropagation(), l && e.stopImmediatePropagation();
}, qt = "ArrowDown", Fl = "End", Pl = "Home", Ol = "PageDown", Ll = "PageUp", Mt = "ArrowUp", ka = 1, Ca = 100, Sa = 1, wa = 500, Ta = 100, _a = 10, Va = 4, Aa = [Mt, qt, Pl, Fl, Ll, Ol], Hr = A({
  props: {
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, required: !1 },
    labelIncrement: { type: String, default: "Increment" },
    labelDecrement: { type: String, default: "Decrement" },
    modelValue: { type: Number, default: null },
    name: { type: String, default: "BFormSpinbutton" },
    disabled: { type: [Boolean, String], default: !1 },
    placeholder: { type: String, required: !1 },
    locale: { type: String, default: "locale" },
    form: { type: String, required: !1 },
    inline: { type: Boolean, default: !1 },
    size: { type: String, required: !1 },
    formatterFn: {
      type: Function
    },
    readonly: { type: Boolean, default: !1 },
    vertical: { type: Boolean, default: !1 },
    repeatDelay: {
      type: [String, Number],
      default: wa
    },
    repeatInterval: {
      type: [String, Number],
      default: Ta
    },
    repeatStepMultiplier: {
      type: [String, Number],
      default: Va
    },
    repeatThreshold: {
      type: [String, Number],
      default: _a
    },
    required: { type: [Boolean, String], default: !1 },
    step: { type: [String, Number], default: Sa },
    min: { type: [String, Number], default: ka },
    max: { type: [String, Number], default: Ca },
    wrap: { type: Boolean, default: !1 },
    state: { type: [Boolean, String], default: null }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = W(!1), l = i(() => 1), n = () => {
      t("change", f.value);
    }, u = W(null), f = i({
      get() {
        return Ne(e.modelValue) ? u.value : e.modelValue;
      },
      set(H) {
        Ne(e.modelValue) ? u.value = H : t("update:modelValue", H);
      }
    });
    let c, v, p = !1;
    const B = i(() => tt(e.step, Sa)), m = i(() => tt(e.min, ka)), $ = i(() => {
      const H = tt(e.max, Ca), N = B.value, X = m.value;
      return Math.floor((H - X) / N) * N + X;
    }), V = i(() => {
      const H = Le(e.repeatDelay, 0);
      return H > 0 ? H : wa;
    }), T = i(() => {
      const H = Le(e.repeatInterval, 0);
      return H > 0 ? H : Ta;
    }), b = i(
      () => Math.max(Le(e.repeatThreshold, _a), 1)
    ), k = i(
      () => Math.max(Le(e.repeatStepMultiplier, Va), 1)
    ), y = i(() => {
      const H = B.value;
      return Math.floor(H) === H ? 0 : (H.toString().split(".")[1] || "").length;
    }), C = i(() => Math.pow(10, y.value || 0)), q = i(() => {
      const { value: H } = f;
      return H === null ? "" : H.toFixed(y.value);
    }), E = i(() => {
      const H = [e.locale];
      return new Intl.NumberFormat(H).resolvedOptions().locale;
    }), I = i(
      () => zr(E.value)
    ), _ = () => {
      const H = y.value;
      return new Intl.NumberFormat(E.value, {
        style: "decimal",
        useGrouping: !1,
        minimumIntegerDigits: 1,
        minimumFractionDigits: H,
        maximumFractionDigits: H,
        notation: "standard"
      }).format;
    }, z = i(
      () => e.formatterFn ? e.formatterFn : _()
    ), x = i(() => ({
      role: "group",
      lang: E.value,
      tabindex: e.disabled ? null : "-1",
      title: e.ariaLabel
    })), w = i(() => !Ne(e.modelValue) || !Ne(u.value)), P = i(() => ({
      dir: I.value,
      spinId: l.value,
      tabindex: e.disabled ? null : "0",
      role: "spinbutton",
      "aria-live": "off",
      "aria-label": e.ariaLabel || null,
      "aria-controls": e.ariaControls || null,
      "aria-invalid": e.state === !1 || !w.value && e.required ? "true" : null,
      "aria-required": e.required ? "true" : null,
      "aria-valuemin": m.value,
      "aria-valuemax": $.value,
      "aria-valuenow": Ne(f.value) ? null : f.value,
      "aria-valuetext": Ne(f.value) ? null : z.value(f.value)
    })), L = (H) => {
      let { value: N } = f;
      if (!e.disabled && !Ne(N)) {
        const X = B.value * H, ne = m.value, Y = $.value, se = C.value, { wrap: Te } = e;
        N = Math.round((N - ne) / X) * X + ne + X, N = Math.round(N * se) / se, f.value = N > Y ? Te ? ne : Y : N < ne ? Te ? Y : ne : N;
      }
    }, te = (H = 1) => {
      Ne(f.value) ? f.value = m.value : L(1 * H);
    }, Q = (H = 1) => {
      Ne(f.value) ? f.value = e.wrap ? $.value : m.value : L(-1 * H);
    }, ie = (H) => {
      const { code: N, altKey: X, ctrlKey: ne, metaKey: Y } = H;
      if (!(e.disabled || e.readonly || X || ne || Y) && Aa.includes(N)) {
        if (rt(H, { propagation: !1 }), p)
          return;
        pe(), [Mt, qt].includes(N) ? (p = !0, N === Mt ? me(H, te) : N === qt && me(H, Q)) : N === Ll ? te(k.value) : N === Ol ? Q(k.value) : N === Pl ? f.value = m.value : N === Fl && (f.value = $.value);
      }
    }, K = (H) => {
      const { code: N, altKey: X, ctrlKey: ne, metaKey: Y } = H;
      e.disabled || e.readonly || X || ne || Y || Aa.includes(N) && (rt(H, { propagation: !1 }), pe(), p = !1, n());
    }, me = (H, N) => {
      const { type: X } = H || {};
      if (!e.disabled && !e.readonly) {
        if (ae(H) && X === "mousedown" && H.button)
          return;
        pe(), N(1);
        const ne = b.value, Y = k.value, se = V.value, Te = T.value;
        c = setTimeout(() => {
          let Ue = 0;
          v = setInterval(() => {
            N(Ue < ne ? 1 : Y), Ue++;
          }, Te);
        }, se);
      }
    };
    function ae(H) {
      return H.type === "mouseup" || H.type === "mousedown";
    }
    const ge = (H) => {
      ae(H) && H.type === "mouseup" && H.button || (rt(H, { propagation: !1 }), pe(), ye(!1), n());
    }, ye = (H) => {
      try {
        $a(H, [document.body, "mouseup", ge, !1]), $a(H, [document.body, "touchend", ge, !1]);
      } catch {
        return 0;
      }
    }, pe = () => {
      clearTimeout(c), clearInterval(v), c = void 0, v = void 0;
    }, re = (H, N, X, ne, Y, se, Te) => {
      const Ue = le(X, {
        props: { scale: a.value ? 1.5 : 1.25 },
        attrs: { "aria-hidden": "true" }
      }), Tt = { hasFocus: a.value }, st = (Re) => {
        !e.disabled && !e.readonly && (rt(Re, { propagation: !1 }), ye(!0), me(Re, H));
      };
      return le(
        "button",
        {
          class: [{ "py-0": !e.vertical }, "btn", "btn-sm", "border-0", "rounded-0"],
          tabindex: "-1",
          type: "button",
          disabled: e.disabled || e.readonly || se,
          "aria-disabled": e.disabled || e.readonly || se ? "true" : null,
          "aria-controls": l.value,
          "aria-label": N || null,
          "aria-keyshortcuts": Y || null,
          onmousedown: st,
          ontouchstart: st
        },
        [Fe(Te, Tt) || Ue]
      );
    };
    return () => {
      const H = re(
        te,
        e.labelIncrement,
        le(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-plus",
            viewBox: "0 0 16 16"
          },
          le("path", {
            d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"
          })
        ),
        "inc",
        "ArrowUp",
        !1,
        "increment"
      ), N = re(
        Q,
        e.labelDecrement,
        le(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-dash",
            viewBox: "0 0 16 16"
          },
          le("path", { d: "M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" })
        ),
        "dec",
        "ArrowDown",
        !1,
        "decrement"
      ), X = [];
      e.name && !e.disabled && X.push(
        le("input", {
          type: "hidden",
          name: e.name,
          form: e.form || null,
          value: q.value,
          key: "hidden"
        })
      );
      const ne = le(
        "output",
        {
          class: [
            { "d-flex": e.vertical },
            { "align-self-center": !e.vertical },
            { "align-items-center": e.vertical },
            { "border-top": e.vertical },
            { "border-bottom": e.vertical },
            { "border-start": !e.vertical },
            { "border-end": !e.vertical },
            "flex-grow-1"
          ],
          ...P.value,
          key: "output"
        },
        [
          le(
            "bdi",
            w.value ? z.value(f.value) : e.placeholder || ""
          )
        ]
      );
      return le(
        "div",
        {
          class: [
            "b-form-spinbutton form-control",
            { disabled: e.disabled },
            { readonly: e.readonly },
            { focus: a },
            { "d-inline-flex": e.inline || e.vertical },
            { "d-flex": !e.inline && !e.vertical },
            { "align-items-stretch": !e.vertical },
            { "flex-column": e.vertical },
            e.size ? `form-control-${e.size}` : null
          ],
          ...x.value,
          onkeydown: ie,
          onkeyup: K
        },
        e.vertical ? [H, X, ne, N] : [N, X, ne, H]
      );
    };
  }
}), Rr = ["TD", "TH", "TR"], qr = [
  "a",
  "a *",
  "button",
  "button *",
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), ut = (e) => {
  if (!e || !e.target)
    return !1;
  const t = e.target;
  if ("disabled" in t && t.disabled || Rr.indexOf(t.tagName) !== -1)
    return !1;
  if (na(".dropdown-menu", t))
    return !0;
  const a = t.tagName === "LABEL" ? t : na("label", t);
  if (a) {
    const l = Kt(a, "for"), n = l ? Vn(l) : qa("input, select, textarea", a);
    if (n && !n.disabled)
      return !0;
  }
  return Ma(t, qr);
}, Mr = () => {
  const e = (v, p) => {
    const B = [];
    return !(v != null && v.length) && (p == null ? void 0 : p.length) ? (Object.keys(p[0]).forEach((m) => B.push({ key: m, label: ta(m) })), B) : (Array.isArray(v) && v.forEach((m) => {
      typeof m == "string" ? B.push({ key: m, label: ta(m) }) : Pt(m) && m.key && typeof m.key == "string" && B.push({ ...m });
    }), B);
  }, t = W([]), a = (v, p, B, m) => (t.value = bt(p), "isFilterableTable" in m && m.isFilterableTable.value === !0 && B.filter && (t.value = u(t.value, B.filter, B.filterable)), "isSortable" in m && m.isSortable.value === !0 && (t.value = n(
    v,
    t.value,
    {
      key: B.sortBy,
      desc: m.sortDescBoolean.value
    },
    B.sortCompare
  )), t.value), l = W(void 0), n = (v, p, B, m) => {
    if (!B || !B.key)
      return p;
    const $ = B.key;
    return p.sort((V, T) => {
      if (m !== void 0)
        return m(V, T, B.key, B.desc);
      const b = (C) => typeof C == "object" ? JSON.stringify(C) : C;
      return b(V[$]) > b(T[$]) ? B.desc ? -1 : 1 : b(T[$]) > b(V[$]) ? B.desc ? 1 : -1 : 0;
    });
  }, u = (v, p, B) => v.filter(
    (m) => Object.entries(m).filter(($) => {
      const [V, T] = $;
      return !T || V[0] === "_" || B.length > 0 && !B.includes(V) ? !1 : (typeof T == "object" ? JSON.stringify(Object.values(T)) : typeof T == "string" ? T : T.toString()).toLowerCase().includes(p.toLowerCase());
    }).length > 0
  );
  return {
    normaliseFields: e,
    mapItems: a,
    internalItems: t,
    updateInternalItems: async (v) => {
      try {
        return t.value = await Lt(v), t.value;
      } catch {
        return;
      }
    },
    filterEvent: l,
    notifyFilteredItems: () => {
      l.value && l.value(t.value);
    }
  };
}, jr = ["title", "abbr", "onClick"], Gr = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, Ur = { key: 1 }, Wr = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], Kr = {
  key: 0,
  class: "b-table-stacked-label"
}, Xr = ["colspan"], Jr = ["colspan"], Yr = { class: "d-flex align-items-center justify-content-center gap-2" }, Zr = /* @__PURE__ */ M("strong", null, "Loading...", -1), Qr = {
  key: 1,
  class: "b-table-empty-slot"
}, eu = ["colspan"], tu = { key: 0 }, au = ["title", "abbr", "onClick"], lu = { key: 1 }, nu = { key: 2 }, ou = { key: 3 }, su = /* @__PURE__ */ A({
  __name: "BTable",
  props: {
    align: null,
    caption: null,
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: null,
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    provider: null,
    sortCompare: null,
    noProvider: null,
    noProviderPaging: null,
    noProviderSorting: null,
    noProviderFiltering: null,
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    labelStacked: { type: Boolean, default: !1 },
    variant: null,
    sortBy: null,
    sortDesc: { default: !1 },
    sortInternal: { default: !0 },
    selectable: { default: !1 },
    stickySelect: { default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    stickyHeader: { default: !1 },
    busy: { default: !1 },
    showEmpty: { default: !1 },
    perPage: null,
    currentPage: { default: 1 },
    filter: null,
    filterable: null,
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" }
  },
  emits: ["headClicked", "rowClicked", "rowDblClicked", "rowHovered", "rowUnhovered", "rowSelected", "rowUnselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = Ce(), u = Mr(), f = r(s(l, "footClone")), c = r(s(l, "sortDesc")), v = r(s(l, "sortInternal")), p = r(s(l, "selectable")), B = r(s(l, "stickySelect")), m = r(s(l, "labelStacked")), $ = r(s(l, "busy")), V = r(s(l, "showEmpty")), T = r(s(l, "noProviderPaging")), b = r(s(l, "noProviderSorting")), k = r(s(l, "noProviderFiltering")), y = W($.value);
    u.filterEvent.value = async (S) => {
      if (w.value) {
        await N();
        return;
      }
      const j = await Lt(S);
      a("filtered", j);
    };
    const C = W(/* @__PURE__ */ new Set([])), q = i(() => C.value.size > 0), E = i(() => ({
      [`align-${l.align}`]: l.align !== void 0,
      "b-table-selectable": p.value,
      [`b-table-select-${l.selectMode}`]: p.value,
      "b-table-selecting user-select-none": p.value && q.value,
      "b-table-busy": y.value,
      "b-table-sortable": L.value,
      "b-table-sort-desc": L.value && c.value === !0,
      "b-table-sort-asc": L.value && c.value === !1
    })), I = i(() => ({
      bordered: l.bordered,
      borderless: l.borderless,
      borderVariant: l.borderVariant,
      captionTop: l.captionTop,
      dark: l.dark,
      hover: l.hover,
      responsive: l.responsive,
      striped: l.striped,
      stacked: l.stacked,
      small: l.small,
      tableClass: E.value,
      tableVariant: l.variant,
      stickyHeader: l.stickyHeader
    })), _ = i(() => u.normaliseFields(l.fields, l.items)), z = i(
      () => _.value.length + (p.value ? 1 : 0)
    ), x = i(() => l.filter !== void 0 && l.filter !== ""), w = i(() => l.provider !== void 0), P = i(
      () => p.value && (!!l.selectHead || n.selectHead !== void 0)
    ), L = i(
      () => l.fields.filter((S) => typeof S == "string" ? !1 : S.sortable).length > 0
    ), te = i(() => L.value && v.value === !0), Q = i(() => {
      const S = w.value ? u.internalItems.value : te.value ? u.mapItems(l.fields, l.items, l, {
        isSortable: L,
        isFilterableTable: x,
        sortDescBoolean: c
      }) : l.items;
      if (l.perPage !== void 0) {
        const j = (l.currentPage - 1) * l.perPage;
        return S.splice(j, l.perPage);
      }
      return S;
    }), ie = (S) => typeof S == "string" ? aa(S) : S.label !== void 0 ? S.label : typeof S.key == "string" ? aa(S.key) : S.key, K = (S, j, ue = !1) => {
      const R = typeof S == "string" ? S : S.key;
      a("headClicked", R, S, j, ue), pe(S);
    }, me = (S, j, ue) => {
      a("rowClicked", S, j, ue), H(S, j, ue.shiftKey);
    }, ae = (S, j, ue) => a("rowDblClicked", S, j, ue), ge = (S, j, ue) => a("rowHovered", S, j, ue), ye = (S, j, ue) => a("rowUnhovered", S, j, ue), pe = (S) => {
      if (!L.value)
        return;
      const j = typeof S == "string" ? S : S.key, ue = typeof S == "string" ? !1 : S.sortable;
      if (L.value === !0 && ue === !0) {
        const R = !c.value;
        j !== l.sortBy && a("update:sortBy", j), a("update:sortDesc", R), a("sorted", j, R);
      }
    }, re = () => {
      !p.value || a("selection", Array.from(C.value));
    }, H = (S, j, ue = !1) => {
      if (!!p.value) {
        if (C.value.has(S))
          C.value.delete(S), a("rowUnselected", S);
        else if (l.selectMode === "single" && C.value.size > 0 && (C.value.forEach((R) => a("rowUnselected", R)), C.value.clear()), l.selectMode === "range" && C.value.size > 0 && ue) {
          const R = Array.from(C.value).pop(), Se = Q.value.findIndex((Me) => Me === R), de = Math.min(Se, j), _t = Math.max(Se, j);
          Q.value.slice(de, _t + 1).forEach((Me) => {
            C.value.has(Me) || (C.value.add(Me), a("rowSelected", Me));
          });
        } else
          C.value.add(S), a("rowSelected", S);
        re();
      }
    }, N = async () => {
      if (!w.value || !l.provider || y.value)
        return;
      y.value = !0;
      const S = new Proxy(
        {
          currentPage: l.currentPage,
          filter: l.filter,
          sortBy: l.sortBy,
          sortDesc: l.sortDesc,
          perPage: l.perPage
        },
        {
          get(ue, R) {
            return R in ue ? ue[R] : void 0;
          },
          set() {
            return console.error("BTable provider context is a read-only object."), !0;
          }
        }
      ), j = l.provider(S, u.updateInternalItems);
      if (j !== void 0) {
        if (j instanceof Promise)
          try {
            const ue = await j;
            return Array.isArray(ue) ? await u.updateInternalItems(ue) : void 0;
          } finally {
            y.value && (y.value = !1);
          }
        try {
          return await u.updateInternalItems(j);
        } finally {
          y.value && (y.value = !1);
        }
      }
    }, X = (S) => {
      S._showDetails = !S._showDetails;
    }, ne = (S) => [
      S.class,
      S.thClass,
      S.variant ? `table-${S.variant}` : void 0,
      {
        "b-table-sortable-column": L.value && S.sortable,
        "b-table-sticky-column": S.stickyColumn
      }
    ], Y = (S, j) => [
      S.class,
      S.tdClass,
      S.variant ? `table-${S.variant}` : void 0,
      (j == null ? void 0 : j._cellVariants) && (j == null ? void 0 : j._cellVariants[S.key]) ? `table-${j == null ? void 0 : j._cellVariants[S.key]}` : void 0,
      {
        "b-table-sticky-column": S.stickyColumn
      }
    ], se = (S) => [
      S._rowVariant ? `table-${S._rowVariant}` : null,
      S._rowVariant ? `table-${S._rowVariant}` : null,
      p.value && C.value.has(S) ? `selected table-${l.selectionVariant}` : null
    ], Te = () => {
      if (!p.value)
        return;
      const S = C.value.size > 0 ? Array.from(C.value) : [];
      C.value = /* @__PURE__ */ new Set([...Q.value]), C.value.forEach((j) => {
        S.includes(j) || a("rowSelected", j);
      }), re();
    }, Ue = () => {
      !p.value || (C.value.forEach((S) => {
        a("rowUnselected", S);
      }), C.value = /* @__PURE__ */ new Set([]), re());
    }, Tt = (S) => {
      if (!p.value)
        return;
      const j = Q.value[S];
      !j || C.value.has(j) || (C.value.add(j), a("rowSelected", j), re());
    }, st = (S) => {
      if (!p.value)
        return;
      const j = Q.value[S];
      !j || !C.value.has(j) || (C.value.delete(j), a("rowUnselected", j), re());
    }, Re = async (S, j, ue) => {
      if (j === ue)
        return;
      const R = (Nl) => l.noProvider && l.noProvider.includes(Nl), Se = !["currentPage", "perPage"].includes(S), de = ["currentPage", "perPage"].includes(S) && (R("paging") || T.value === !0), _t = ["filter"].includes(S) && (R("filtering") || k.value === !0), Me = ["sortBy", "sortDesc"].includes(S) && (R("sorting") || b.value === !0);
      de || _t || Me || (await N(), Se && u.notifyFilteredItems());
    };
    return ce(
      () => l.filter,
      (S, j) => {
        S === j || w.value || S || Lt(l.items).then((ue) => a("filtered", ue));
      }
    ), ce(
      () => y.value,
      () => y.value !== $.value && a("update:busy", y.value)
    ), ce(
      () => $.value,
      () => y.value !== $.value && (y.value = $.value)
    ), ce(
      () => l.filter,
      (S, j) => Re("filter", S, j)
    ), ce(
      () => l.currentPage,
      (S, j) => Re("currentPage", S, j)
    ), ce(
      () => l.perPage,
      (S, j) => Re("perPage", S, j)
    ), ce(
      () => l.sortBy,
      (S, j) => Re("sortBy", S, j)
    ), ce(
      () => l.sortDesc,
      (S, j) => Re("sortDesc", S, j)
    ), $e(() => {
      w.value && N();
    }), t({
      selectAllRows: Te,
      clearSelected: Ue,
      selectRow: Tt,
      unselectRow: st
    }), (S, j) => (d(), O(wt, he(we(o(I))), {
      default: D(() => {
        var ue;
        return [
          M("thead", null, [
            S.$slots["thead-top"] ? h(S.$slots, "thead-top", { key: 0 }) : U("", !0),
            M("tr", null, [
              o(P) ? (d(), g("th", {
                key: 0,
                class: F(["b-table-selection-column", {
                  "b-table-sticky-column": o(B)
                }])
              }, [
                h(S.$slots, "select-head", {}, () => [
                  ee(G(typeof e.selectHead == "boolean" ? "Selected" : e.selectHead), 1)
                ])
              ], 2)) : U("", !0),
              (d(!0), g(oe, null, ve(o(_), (R) => (d(), g("th", J({
                key: R.key,
                scope: "col",
                class: ne(R),
                title: R.headerTitle,
                abbr: R.headerAbbr,
                style: R.thStyle
              }, R.thAttr, {
                onClick: (Se) => K(R, Se)
              }), [
                M("div", Gr, [
                  h(S.$slots, "sort-icon", {
                    field: R,
                    sortBy: e.sortBy,
                    selected: R.key === e.sortBy,
                    isDesc: o(c),
                    direction: o(c) ? "desc" : "asc"
                  }, () => [
                    o(L) && R.sortable ? (d(), g("span", {
                      key: 0,
                      class: F(["b-table-sort-icon", {
                        sorted: R.key === e.sortBy,
                        [`sorted-${o(c) ? "desc" : "asc"}`]: R.key === e.sortBy
                      }])
                    }, null, 2)) : U("", !0)
                  ]),
                  M("div", null, [
                    S.$slots["head(" + R.key + ")"] || S.$slots["head()"] ? h(S.$slots, S.$slots["head(" + R.key + ")"] ? "head(" + R.key + ")" : "head()", {
                      key: 0,
                      label: R.label
                    }) : (d(), g(oe, { key: 1 }, [
                      ee(G(ie(R)), 1)
                    ], 64))
                  ])
                ])
              ], 16, jr))), 128))
            ]),
            S.$slots["thead-sub"] ? (d(), g("tr", Ur, [
              (d(!0), g(oe, null, ve(o(_), (R) => (d(), g("td", {
                key: R.key,
                scope: "col",
                class: F([R.class, R.thClass, R.variant ? `table-${R.variant}` : ""])
              }, [
                S.$slots["thead-sub"] ? h(S.$slots, "thead-sub", J({
                  key: 0,
                  items: o(_)
                }, R)) : (d(), g(oe, { key: 1 }, [
                  ee(G(R.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : U("", !0)
          ]),
          M("tbody", null, [
            (d(!0), g(oe, null, ve(o(Q), (R, Se) => (d(), g(oe, { key: Se }, [
              M("tr", {
                class: F(se(R)),
                onClick: (de) => !o(ut)(de) && me(R, Se, de),
                onDblclick: (de) => !o(ut)(de) && ae(R, Se, de),
                onMouseenter: (de) => !o(ut)(de) && ge(R, Se, de),
                onMouseleave: (de) => !o(ut)(de) && ye(R, Se, de)
              }, [
                o(P) ? (d(), g("td", {
                  key: 0,
                  class: F(["b-table-selection-column", {
                    "b-table-sticky-column": o(B)
                  }])
                }, [
                  h(S.$slots, "select-cell", {}, () => [
                    M("span", {
                      class: F(C.value.has(R) ? "text-primary" : "")
                    }, "\u{1F5F9}", 2)
                  ])
                ], 2)) : U("", !0),
                (d(!0), g(oe, null, ve(o(_), (de) => (d(), g("td", J({
                  key: de.key
                }, de.tdAttr, {
                  class: Y(de, R)
                }), [
                  e.stacked && o(m) ? (d(), g("label", Kr, G(ie(de)), 1)) : U("", !0),
                  S.$slots["cell(" + de.key + ")"] || S.$slots["cell()"] ? h(S.$slots, S.$slots["cell(" + de.key + ")"] ? "cell(" + de.key + ")" : "cell()", {
                    key: 1,
                    value: R[de.key],
                    index: Se,
                    item: R,
                    field: de,
                    items: e.items,
                    toggleDetails: () => X(R),
                    detailsShowing: R._showDetails
                  }) : (d(), g(oe, { key: 2 }, [
                    ee(G(R[de.key]), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, Wr),
              R._showDetails === !0 && S.$slots["row-details"] ? (d(), g("tr", {
                key: 0,
                class: F(se(R))
              }, [
                M("td", { colspan: o(z) }, [
                  h(S.$slots, "row-details", {
                    item: R,
                    toggleDetails: () => X(R)
                  })
                ], 8, Xr)
              ], 2)) : U("", !0)
            ], 64))), 128)),
            y.value ? (d(), g("tr", {
              key: 0,
              class: F(["b-table-busy-slot", { "b-table-static-busy": o(Q).length == 0 }])
            }, [
              M("td", { colspan: o(z) }, [
                h(S.$slots, "table-busy", {}, () => [
                  M("div", Yr, [
                    fe(Ct, { class: "align-middle" }),
                    Zr
                  ])
                ])
              ], 8, Jr)
            ], 2)) : U("", !0),
            o(V) && o(Q).length === 0 ? (d(), g("tr", Qr, [
              M("td", { colspan: o(z) }, [
                h(S.$slots, "empty", {
                  items: o(Q),
                  filtered: o(x)
                }, () => [
                  ee(G(o(x) ? e.emptyFilteredText : e.emptyText), 1)
                ])
              ], 8, eu)
            ])) : U("", !0)
          ]),
          o(f) ? (d(), g("tfoot", tu, [
            M("tr", null, [
              (d(!0), g(oe, null, ve(o(_), (R) => (d(), g("th", J({
                key: R.key
              }, R.thAttr, {
                scope: "col",
                class: [R.class, R.thClass, R.variant ? `table-${R.variant}` : ""],
                title: R.headerTitle,
                abbr: R.headerAbbr,
                style: R.thStyle,
                onClick: (Se) => K(R, Se, !0)
              }), G(R.label), 17, au))), 128))
            ])
          ])) : S.$slots["custom-foot"] ? (d(), g("tfoot", lu, [
            h(S.$slots, "custom-foot", {
              fields: o(_),
              items: e.items,
              columns: (ue = o(_)) == null ? void 0 : ue.length
            })
          ])) : U("", !0),
          S.$slots["table-caption"] ? (d(), g("caption", nu, [
            h(S.$slots, "table-caption")
          ])) : e.caption ? (d(), g("caption", ou, G(e.caption), 1)) : U("", !0)
        ];
      }),
      _: 3
    }, 16));
  }
}), iu = /* @__PURE__ */ A({
  __name: "BTbody",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), g("tbody", {
      role: "rowgroup",
      class: F(o(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), ru = ["scope", "colspan", "rowspan", "data-label"], uu = { key: 0 }, du = /* @__PURE__ */ A({
  __name: "BTd",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (u, f) => (d(), g("td", {
      role: "cell",
      scope: o(n),
      class: F(o(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (d(), g("div", uu, [
        h(u.$slots, "default")
      ])) : h(u.$slots, "default", { key: 1 })
    ], 10, ru));
  }
}), cu = /* @__PURE__ */ A({
  __name: "BTfoot",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), g("tfoot", {
      role: "rowgroup",
      class: F(o(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), fu = ["scope", "colspan", "rowspan", "data-label"], vu = { key: 0 }, mu = /* @__PURE__ */ A({
  __name: "BTh",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (u, f) => (d(), g("th", {
      role: "columnheader",
      scope: o(n),
      class: F(o(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (d(), g("div", vu, [
        h(u.$slots, "default")
      ])) : h(u.$slots, "default", { key: 1 })
    ], 10, fu));
  }
}), bu = /* @__PURE__ */ A({
  __name: "BThead",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), g("thead", {
      role: "rowgroup",
      class: F(o(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), gu = /* @__PURE__ */ A({
  __name: "BTr",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), g("tr", {
      role: "row",
      class: F(o(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), pu = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], zl = Symbol(), hu = /* @__PURE__ */ A({
  __name: "BTabs",
  props: {
    activeNavItemClass: null,
    activeTabClass: null,
    align: null,
    card: { default: !1 },
    contentClass: null,
    end: { default: !1 },
    fill: { default: !1 },
    id: null,
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: null,
    navWrapperClass: null,
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = Ce(), n = r(s(a, "card")), u = r(s(a, "end")), f = r(s(a, "fill")), c = r(s(a, "justified")), v = r(s(a, "lazy")), p = r(s(a, "noFade")), B = r(s(a, "noNavStyle")), m = r(s(a, "pills")), $ = r(s(a, "small")), V = r(s(a, "vertical")), T = W(a.modelValue), b = W(""), k = i({
      get: () => T.value,
      set: (w) => {
        T.value = w, y.value.length > 0 && w >= 0 && w < y.value.length ? b.value = y.value[w].buttonId : b.value = "", t("update:modelValue", w);
      }
    }), y = i(() => {
      let w = [];
      return l.default && (w = x(l).map((P, L) => {
        P.props || (P.props = {});
        const te = P.props["button-id"] || Ee("tab"), Q = P.props.id || Ee(), ie = k.value > -1 ? L === k.value : P.props.active === "", K = P.props["title-item-class"], me = P.props["title-link-attributes"];
        return {
          buttonId: te,
          contentId: Q,
          active: ie,
          disabled: P.props.disabled === "" || P.props.disabled === !0,
          navItemClasses: [
            {
              active: ie,
              disabled: P.props.disabled === "" || P.props.disabled === !0
            },
            ie && a.activeNavItemClass ? a.activeNavItemClass : null,
            P.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !p.value
            },
            ie && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${Q}`,
          title: P.props.title,
          titleItemClass: K,
          titleLinkAttributes: me,
          onClick: P.props.onClick,
          tab: P,
          tabComponent: () => x(l)[L]
        };
      })), w;
    }), C = i(() => !((y == null ? void 0 : y.value) && y.value.length > 0)), q = i(() => ({
      "d-flex": V.value,
      "align-items-start": V.value
    })), E = ot(s(a, "align")), I = i(() => ({
      "nav-pills": m.value,
      "flex-column me-3": V.value,
      [E.value]: a.align !== void 0,
      "nav-fill": f.value,
      "card-header-tabs": n.value,
      "nav-justified": c.value,
      "nav-tabs": !B.value && !m.value,
      small: $.value
    })), _ = (w) => {
      let P = !1;
      if (w !== void 0 && w > -1 && w < y.value.length && !y.value[w].disabled && (k.value < 0 || y.value[w].buttonId !== b.value)) {
        const L = new Xe("activate-tab", { cancelable: !0 });
        t("activate-tab", w, k.value, L), L.defaultPrevented || (k.value = w, P = !0);
      }
      return !P && a.modelValue !== k.value && t("update:modelValue", k.value), P;
    }, z = (w, P) => {
      var L;
      _(P), P >= 0 && !y.value[P].disabled && ((L = y.value[P]) == null ? void 0 : L.onClick) && typeof y.value[P].onClick == "function" && y.value[P].onClick(w);
    }, x = (w) => !w || !w.default ? [] : w.default().reduce((P, L) => (typeof L.type == "symbol" ? P = P.concat(L.children) : P.push(L), P), []).filter((P) => {
      var L;
      return ((L = P.type) == null ? void 0 : L.__name) === "BTab";
    });
    return _(T.value), ce(
      () => a.modelValue,
      (w, P) => {
        if (w === P)
          return;
        if (w = Math.max(w, -1), P = Math.max(P, -1), y.value.length <= 0) {
          k.value = -1;
          return;
        }
        const L = w > P;
        let te = w;
        const Q = y.value.length - 1;
        for (; te >= 0 && te <= Q && y.value[te].disabled; )
          te += L ? 1 : -1;
        if (te < 0) {
          _(0);
          return;
        }
        if (te >= y.value.length) {
          _(y.value.length - 1);
          return;
        }
        _(te);
      }
    ), ce(
      () => y.value,
      () => {
        let w = y.value.map((P) => P.active && !P.disabled).lastIndexOf(!0);
        w < 0 && (k.value >= y.value.length ? w = y.value.map((P) => !P.disabled).lastIndexOf(!0) : y.value[k.value] && !y.value[k.value].disabled && (w = k.value)), w < 0 && (w = y.value.map((P) => !P.disabled).indexOf(!0)), y.value.forEach((P, L) => P.active = L === w), _(w);
      }
    ), $e(() => {
      if (k.value < 0 && y.value.length > 0 && !y.value.some((w) => w.active)) {
        const w = y.value.map((P) => !P.disabled).indexOf(!0);
        _(w >= 0 ? w : -1);
      }
    }), Je(zl, {
      lazy: v.value,
      card: n.value
    }), (w, P) => (d(), O(Z(e.tag), {
      id: e.id,
      class: F(["tabs", o(q)])
    }, {
      default: D(() => [
        o(u) ? (d(), g("div", {
          key: 0,
          class: F(["tab-content", e.contentClass])
        }, [
          (d(!0), g(oe, null, ve(o(y), ({ tabComponent: L, contentId: te, tabClasses: Q, active: ie }, K) => (d(), O(Z(L()), {
            id: te,
            key: K,
            class: F(Q),
            active: ie
          }, null, 8, ["id", "class", "active"]))), 128)),
          o(C) ? (d(), g("div", {
            key: "bv-empty-tab",
            class: F(["tab-pane active", { "card-body": o(n) }])
          }, [
            h(w.$slots, "empty")
          ], 2)) : U("", !0)
        ], 2)) : U("", !0),
        M("div", {
          class: F([e.navWrapperClass, { "card-header": o(n), "ms-auto": e.vertical && o(u) }])
        }, [
          M("ul", {
            class: F(["nav", [o(I), e.navClass]]),
            role: "tablist"
          }, [
            h(w.$slots, "tabs-start"),
            (d(!0), g(oe, null, ve(o(y), ({ tab: L, buttonId: te, contentId: Q, navItemClasses: ie, active: K, target: me }, ae) => (d(), g("li", {
              key: ae,
              class: F(["nav-item", L.props["title-item-class"]])
            }, [
              M("button", J({
                id: te,
                class: ["nav-link", ie],
                "data-bs-toggle": "tab",
                "data-bs-target": me,
                role: "tab",
                "aria-controls": Q,
                "aria-selected": K
              }, L.props["title-link-attributes"], {
                onClick: Ut((ge) => z(ge, ae), ["stop", "prevent"])
              }), [
                L.children && L.children.title ? (d(), O(Z(L.children.title), { key: 0 })) : (d(), g(oe, { key: 1 }, [
                  ee(G(L.props.title), 1)
                ], 64))
              ], 16, pu)
            ], 2))), 128)),
            h(w.$slots, "tabs-end")
          ], 2)
        ], 2),
        o(u) ? U("", !0) : (d(), g("div", {
          key: 1,
          class: F(["tab-content", e.contentClass])
        }, [
          (d(!0), g(oe, null, ve(o(y), ({ tabComponent: L, contentId: te, tabClasses: Q, active: ie }, K) => (d(), O(Z(L()), {
            id: te,
            key: K,
            class: F(Q),
            active: ie
          }, null, 8, ["id", "class", "active"]))), 128)),
          o(C) ? (d(), g("div", {
            key: "bv-empty-tab",
            class: F(["tab-pane active", { "card-body": o(n) }])
          }, [
            h(w.$slots, "empty")
          ], 2)) : U("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), yu = /* @__PURE__ */ A({
  __name: "BTab",
  props: {
    id: null,
    title: null,
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: void 0 },
    lazyOnce: { default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: null,
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: null
  },
  setup(e) {
    const t = e, a = He(zl, null), l = r(s(t, "active")), n = r(s(t, "disabled")), u = r(s(t, t.lazyOnce !== void 0 ? "lazyOnce" : "lazy")), f = W(!1), c = i(() => !!((a == null ? void 0 : a.lazy) || u.value)), v = i(() => t.lazyOnce !== void 0), p = i(() => l.value && !n.value), B = i(() => {
      const $ = c.value && v.value && f.value;
      return p.value || !c.value || $;
    }), m = i(() => ({
      active: l.value,
      show: l.value,
      "card-body": (a == null ? void 0 : a.card) && t.noBody === !1
    }));
    return ce(
      () => B.value,
      ($) => {
        $ && !f.value && (f.value = !0);
      }
    ), ($, V) => (d(), O(Z(e.tag), {
      id: e.id,
      class: F(["tab-pane", o(m)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: D(() => [
        o(B) ? h($.$slots, "default", { key: 0 }) : U("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Bu = {
  BAccordion: Nn,
  BAccordionItem: eo,
  BNavText: Wi,
  BAlert: ao,
  BAvatar: io,
  BAvatarGroup: lo,
  BNavForm: Di,
  BBadge: vo,
  BBreadcrumb: ho,
  BBreadcrumbItem: sl,
  BButton: lt,
  BButtonGroup: ko,
  BButtonToolbar: So,
  BCard: vl,
  BCardBody: cl,
  BCardFooter: fl,
  BCardGroup: To,
  BCardHeader: rl,
  BCardImg: pt,
  BCardSubtitle: dl,
  BCardText: _o,
  BCardTitle: ul,
  BCarousel: Eo,
  BCarouselSlide: jo,
  BCloseButton: Ze,
  BCol: et,
  BCollapse: ll,
  BContainer: Zo,
  BDropdown: hl,
  BDropdownDivider: as,
  BDropdownForm: is,
  BDropdownGroup: cs,
  BDropdownHeader: bs,
  BDropdownItem: ps,
  BDropdownItemButton: Bs,
  BDropdownText: Cs,
  BForm: yl,
  BFormCheckbox: Bl,
  BFormCheckboxGroup: Os,
  BFormFloatingLabel: _s,
  BFormGroup: qs,
  BFormInput: Us,
  BFormInvalidFeedback: Dt,
  BFormRadio: kl,
  BFormRadioGroup: Zs,
  BFormRow: ft,
  BFormSelect: ai,
  BFormSelectOption: Qt,
  BFormSelectOptionGroup: Cl,
  BFormText: Ht,
  BFormTextarea: $i,
  BFormTag: Sl,
  BFormTags: pi,
  BFormValidFeedback: Rt,
  BImg: Zt,
  BInputGroup: Vi,
  BInputGroupAddon: ea,
  BInputGroupAppend: Ai,
  BInputGroupPrepend: xi,
  BInputGroupText: wl,
  BLink: Ae,
  BListGroup: Ii,
  BListGroupItem: Fi,
  BModal: Ni,
  BNav: Ei,
  BNavbar: Ki,
  BNavbarBrand: Yi,
  BNavbarNav: Zi,
  BNavbarToggle: er,
  BNavItem: Mi,
  BNavItemDropdown: Gi,
  BOffcanvas: sr,
  BOverlay: ir,
  BPagination: gr,
  BPlaceholder: Ie,
  BPlaceholderButton: Al,
  BPlaceholderCard: pr,
  BPlaceholderTable: hr,
  BPlaceholderWrapper: yr,
  BPopover: wr,
  BProgress: _r,
  BProgressBar: xl,
  BRow: xr,
  BSkeleton: vt,
  BSkeletonIcon: Ir,
  BSkeletonTable: Or,
  BSkeletonWrapper: Lr,
  BSpinner: Ct,
  BFormSpinButton: Hr,
  BTab: yu,
  BTable: su,
  BTableSimple: wt,
  BTbody: iu,
  BTd: du,
  BTfoot: cu,
  BTh: mu,
  BThead: bu,
  BTr: gu,
  BToast: pl,
  BToaster: Et,
  BToastContainer: Et,
  BTabs: hu,
  BTransition: St,
  BToastPlugin: Jo
};
const Su = {
  install(e, t = {}) {
    Object.entries(Bu).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(Xn).forEach(([a, l]) => {
      e.directive(a, l);
    }), On(e);
  }
};
export {
  Nn as BAccordion,
  eo as BAccordionItem,
  ao as BAlert,
  io as BAvatar,
  lo as BAvatarGroup,
  vo as BBadge,
  ho as BBreadcrumb,
  sl as BBreadcrumbItem,
  lt as BButton,
  ko as BButtonGroup,
  So as BButtonToolbar,
  vl as BCard,
  cl as BCardBody,
  fl as BCardFooter,
  To as BCardGroup,
  rl as BCardHeader,
  pt as BCardImg,
  dl as BCardSubtitle,
  _o as BCardText,
  ul as BCardTitle,
  Eo as BCarousel,
  jo as BCarouselSlide,
  Ze as BCloseButton,
  et as BCol,
  ll as BCollapse,
  Zo as BContainer,
  hl as BDropdown,
  as as BDropdownDivider,
  is as BDropdownForm,
  cs as BDropdownGroup,
  bs as BDropdownHeader,
  ps as BDropdownItem,
  Bs as BDropdownItemButton,
  Cs as BDropdownText,
  yl as BForm,
  Bl as BFormCheckbox,
  Os as BFormCheckboxGroup,
  _s as BFormFloatingLabel,
  qs as BFormGroup,
  Us as BFormInput,
  Dt as BFormInvalidFeedback,
  kl as BFormRadio,
  Zs as BFormRadioGroup,
  ft as BFormRow,
  ai as BFormSelect,
  Qt as BFormSelectOption,
  Cl as BFormSelectOptionGroup,
  Hr as BFormSpinButton,
  Sl as BFormTag,
  pi as BFormTags,
  Ht as BFormText,
  $i as BFormTextarea,
  Rt as BFormValidFeedback,
  Zt as BImg,
  Vi as BInputGroup,
  ea as BInputGroupAddon,
  Ai as BInputGroupAppend,
  xi as BInputGroupPrepend,
  wl as BInputGroupText,
  Ae as BLink,
  Ii as BListGroup,
  Fi as BListGroupItem,
  Ni as BModal,
  Ei as BNav,
  Di as BNavForm,
  Mi as BNavItem,
  Gi as BNavItemDropdown,
  Wi as BNavText,
  Ki as BNavbar,
  Yi as BNavbarBrand,
  Zi as BNavbarNav,
  er as BNavbarToggle,
  sr as BOffcanvas,
  ir as BOverlay,
  gr as BPagination,
  Ie as BPlaceholder,
  Al as BPlaceholderButton,
  pr as BPlaceholderCard,
  hr as BPlaceholderTable,
  yr as BPlaceholderWrapper,
  wr as BPopover,
  _r as BProgress,
  xl as BProgressBar,
  xr as BRow,
  vt as BSkeleton,
  Ir as BSkeletonIcon,
  Or as BSkeletonTable,
  Lr as BSkeletonWrapper,
  Ct as BSpinner,
  yu as BTab,
  su as BTable,
  wt as BTableSimple,
  hu as BTabs,
  iu as BTbody,
  du as BTd,
  cu as BTfoot,
  mu as BTh,
  bu as BThead,
  pl as BToast,
  Et as BToastContainer,
  Jo as BToastPlugin,
  Et as BToaster,
  gu as BTr,
  St as BTransition,
  Su as BootstrapVue3,
  Xe as BvEvent,
  sn as BvModalEvent,
  Su as default,
  Ln as useBreadcrumb,
  gl as useToast,
  Dn as vBPopover,
  Yt as vBToggle,
  Gn as vBTooltip,
  Un as vBVisible
};
//# sourceMappingURL=bootstrap-vue-3.es.js.map
